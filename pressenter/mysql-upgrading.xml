<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/mysql-upgrading.xml,v 1.10 2006/09/07 11:09:26 rane Exp $ -->

<guide link="/doc/pl/mysql-upgrading.xml" lang="pl">
<title>Opis aktualizacji MySQL do wersji 4.* lub 5.0.*</title>

<author title="Autor">
  <mail link="citizen428@gentoo.org">Michael Kohl</mail>
</author>
<author title="Autor">
  <mail link="vivo@gentoo.org">Francesco Riosa</mail>
</author>
<author title="Tłumaczenie">
  <mail link="claudiush@gmail.com">Dawid Węgliński</mail>
</author>

<abstract>
Zespół MySQL Gentoo z dumą ogłasza, że  MySQL 5.0 będzie wkrótce dostępne
w stabilnej gałęzi drzewa portage. Ten dokument opisuje jak dokonać
aktualizacji do wersji 4.* oraz 5.0.*
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.16</version>
<date>2007-01-06</date>

<chapter>
<title>Bezpośrednia aktualizacja, sugerowana dla migracji z 4.1 =&gt; 5.0</title>
<section>
<body>

<p>
Silnik magazynujący myisam w wersji 4.1 był już na tyle rozbudowany,
że pozwalał na bezpieczną aktualizację do kolejnej większej wersji MySQL.
</p>

<note>
Nie jest to jednak prawdą dla tablic typu MERGE. Najprawdopodobniej wynikną
problemy w trakcie próby aktualizacji dla tego (rzadko używanego) typu tablic.
Najlepiej wtedy pozbyć się i odtworzyć taką tablicę oraz odtworzyć
jej zawartość w procesie aktualizacji. W razie wątpliwości prosimy przeczytać
<uri link="#doc_chap2">Aktualizację ze starszych wersji MySQL</uri>.
</note>

<p>
Dla tego kroku wymagane są dwie sesje powłoki ponieważ blokady należą
do sesji mysql.
</p>

<pre caption="Bezpośrednia aktualizacja z 4.1 do 5.0.*">
# <i>quickpkg dev-db/mysql</i>
# <i>alias MYSQL="mysql --user=root --password=</i><comment>'nasze_hasło'</comment><i>"</i>
# <i>DATADIR=$(MYSQL --batch --raw --silent --skip-column-names \</i>
<i>--execute='SHOW variables LIKE "datadir";' \</i>
<i>| sed -e 's|datadir[ \t]||')</i>

<comment>(Ten krok powinien zostać wykonany w drugiej powłoce)</comment>
# <i>mysql --user=root --password=</i><comment>'nasze_hasło'</comment><i>"</i>
mysql&gt; <i>FLUSH TABLES WITH READ LOCK;</i>

<comment>(Wracamy do pierwszej powłoki aby wykonać poniższą komendę)</comment>
# <i>tar -cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 \</i>
<i>/etc/conf.d/mysql /etc/mysql/my.cnf "${DATADIR}"</i>

<comment>(Następujące komendy nalezy wykonać w drugiej powłoce)</comment>
mysql&gt; <i>UNLOCK TABLES;</i>
mysql&gt; <i>quit</i>

<comment>(Powracamy do pierwszej powłoki aby wykonać pozostałe operacje)</comment>
# <i>tar -tjvf ~/mysql.*.tar.bz2</i>
# <i>emerge -av "&gt;dev-db/mysql-5.0"</i>
# <i>dispatch-conf</i>
# <i>revdep-rebuild</i>
# <i>/etc/init.d/mysql restart</i>
# <i>mysql_upgrade_shell --user=root --password=</i><comment>'your_password'</comment><i> \</i>
      <i>--protocol=tcp --datadir="${DATADIR}"</i>
# <i>/etc/init.d/mysql restart</i>
# <i>unset DATADIR</i>
# <i>unalias MYSQL</i>
</pre>
  	 
</body>
</section>
</chapter>

<chapter>
<title>Rozbudowa starej wersji MySQL</title>
<section>
<body>

<p>
Użytkownicy rozbudowujący starą wersję (&lt;4.0.24) MySQL najpierw muszą
zainstalować MySQL 4.0.25. Jeśli działamy już na nowszej wersji możemy ominąć
ten krok i przejść do <uri link="#backup">następnego</uri>.
</p>

<pre caption="Rozbudowa">
# <i>emerge -av --buildpkg "&lt;mysql-4.1"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="backup">
<title>Robimy kopię zapasową danych</title>
<section>
<body>

<impo>
Wartości wewnątrz głównych kluczy są inaczej obsługiwane w różnych wersjach
MySQL, w celu uzyskania bliższych informacji należy zapoznać się
z <uri link="http://bugs.gentoo.org/108502">bug #108502</uri>, zaleca
się również przeszukanie tablic w celu znalezienia wartości "0" (zero) oraz
mniejszych oraz ich aktualizacji do wartości większych bądź równych "1".
</impo>

<p>
Jednym z podstawowych zadań każdego administratora bazy danych jest robienie
kopii zapasowych. Zaczynamy:
</p>

<pre caption="Kopia awaryjna wszystkich danych">
# <i>mysqldump \</i>
  <i>-uroot \</i>
  <i>-p$PASSWORD \</i>
  <i>-hlocalhost \</i>
  <i>--all-databases \</i>
  <i>--opt \</i>
  <i>--allow-keywords \</i>
  <i>--flush-logs \</i>
  <i>--hex-blob \</i>
  <i>--master-data \</i>
  <i>--max_allowed_packet=16M \</i>
  <i>--quote-names \</i>
  <i>--result-file=BACKUP_MYSQL_4.0.SQL</i>
</pre>

<p>
Teraz powinien zostać stworzony plik o nazwie
<path>BACKUP_MYSQL_4.0.SQL</path>, który będzie nam dalej potrzebny do
odtworzenia danych. Dane zawarte w MySQL są napisane językiem SQL - Structured
Query Language.
</p>

<p>
Warto sprawdzić czy kopia zapasowa działa.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rozszerzanie z ostatniej wersji MySQL</title>
<section>
<body>

<p>
Teraz stworzymy kopię pakietu (bazy danych, nie samych danych) obecnie
zainstalowanej wersji:
</p>

<pre caption="Kopia pakietu binarnego">
# <i>quickpkg dev-db/mysql</i>
</pre>

<p>
Nadszedł czas, aby pozbyć się obecnej wersji oraz wszystkich jej danych:
</p>

<pre caption="Deinstalacja MySQL-a">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>tar cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 /etc/mysql/my.cnf /var/lib/mysql/</i>
# <i>ls -l ~/mysql.*</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
</pre>

<note>
Powinniśmy mieć dwie, różne kopie zapasowe: jedna SQL, przenośna, pomiędzy
różnymi wersjami MySQL, oraz druga, która pozwoli ci szybko odzyskać bazę
danych. Więcej szczegółów na ten temat w dalszej części tego dokumentu.
</note>

<p>
Po tym jak usuniemy starą instalację MySQL, możemy zainstalować nową wersję.
Warto zauważyć, że <c>revdep-rebuild</c> jest niezbędny do odbudowy pakietów
łączonych z MySQL.
</p>

<pre caption="Kompilowanie nowych wersji plików binarnych">
# <i>emerge -av "&gt;mysql-4.1"</i>
<comment>(Należy zaktualizować pliki konfiguracyjne, mozna również użyć dispatch-conf)</comment>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
</pre>

<p>
Teraz konfigurujemy nowo zainstalowaną wersję MySQL i restartujemy demona:
</p>

<pre caption="Konfiguracja MySQL-a 4.1">
# <i>emerge --config =mysql-4.1.<comment>&lt;micro_version&gt;</comment></i>
# <i>/etc/init.d/mysql start</i>
</pre>

<p>
Teraz można przejść do importowania kopii zapasowej, utworzonej w punkcie 2.
</p>

<impo>
Plik <path>/etc/mysql/my.cnf</path> ustawia logowanie binarne (<c>log-bin</c>)
jako standardowe. Zaowocuje to tym, że każde polecenie ingerujące w zawartość
lub nazwę pliku będzie logowane. Jeśli zostanie uruchomione na dużej bazie
danych (np. 1 GB), spowoduje to utworzenie niesamowicie wielkiego pliku, który
szybko rozrośnie się do rozmiarów całej partycji - zabierając cenne miejsce.
Jeśli nie dysponujemy wystarczającą przestrzenią dyskową, warto zastanowić się
nad wyłączeniem opcji logowania binarnego.
</impo>

<pre caption="Import kopii zapasowej SQL-a">
# <i>cat BACKUP_MYSQL_4.0.SQL \</i>
     <i>| mysql \</i>
     <i>-uroot \</i>
     <i>--password=</i><comment>'hasło'</comment><i> \</i>
     <i>-hlocalhost \</i>
     <i>--max_allowed_packet=16M</i>

# <i>mysql_fix_privilege_tables \</i>
     <i>--defaults-file=/etc/mysql/my.cnf \</i>
     <i>--user=root \</i>
     <i>--password=</i><comment>'hasło'</comment><i></i>
</pre>

<p>
Jeśli zrestartujemy demona MySQL, a wszystko poszło zgodnie z planem, będziemy
mieli sprawnie działającą wersję 4.1.x! :-)
</p>

<pre caption="Restart MySQL-a">
# <i>/etc/init.d/mysql restart</i>
</pre>

<p>
Jeśli podczas procesu rozbudowy pojawią się jakiekolwiek problemy, prosimy
zgłosić je do naszej <uri link="https://bugs.gentoo.org">Bugzilli</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Odzyskiwanie starej instalacji MySQL 4.0</title>
<section>
<body>

<p>
Jeśli MySQL 4.1 nie spełnia oczekiwań, zawsze można wrócić do MySQL 4.0.
</p>

<pre caption="Powrót do przeszłości ;-)">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
# <i>emerge --usepkgonly "&lt;mysql-4.1"</i>
# <i>tar -xjpvf mysql.[tag] -C /</i>
# <i>/etc/init.d/mysql start</i>
</pre>

<note>
Po powrocie do starszej wersji <e>może</e> być konieczne uruchomienie programu
<c>revdep-rebuild</c>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Bezpośrednia rozbudowa, niewspierane i niebezpieczne rozwiązanie</title>
<section>
<body>

<p>
Przy wykorzystaniu pewnej sztuczki możliwe jest też bezpośrednie uaktualnienie
do wersji 4.1.
</p>

<pre caption="Bezpośrednia rozbudowa">
# <i>quickpkg dev-db/mysql</i>
# <i>/etc/init.d/mysql stop</i>
# <i>tar -cjpvf ~/mysql.$(date +%F_%H-%M).tar.bz2 /etc/mysql/my.cnf /var/lib/mysql/</i>
# <i>ls -l ~/mysql.*</i>
# <i>export MYSQL_STRAIGHT_UPGRADE=1</i>
# <i>emerge -av "&gt;mysql-4.1"</i>
# <i>unset MYSQL_STRAIGHT_UPGRADE</i>
# <i>dispatch-conf</i>
# <i>revdep-rebuild</i>
# <i>/etc/init.d/mysql start</i>
# <i>mysql_fix_privilege_tables --defaults-file=/etc/mysql/my.cnf \</i>
         <i>-uroot --password=</i><comment>'hasło'</comment><i></i>
# <i>mysql --database=mysql -uroot --password=</i><comment>'hasło'</comment><i> &lt; /tmp/new_pieces.sql</i>
</pre>

<p>
Powodzenia, a jeśli coś zawiedzie, nie mów, że nie ostrzegaliśmy ;-)
</p>

</body>
</section>
</chapter>
</guide>
