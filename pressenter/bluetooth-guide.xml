<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/bluetooth-guide.xml,v 1.13 2007/06/03 14:44:58 rane Exp $ -->

<guide link="/doc/pl/bluetooth-guide.xml" lang="pl">
<title>Bluetooth w Gentoo Linux</title>

<author title="Autor">
  <mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Współpracownik">
  <mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Współpracownik">
  <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Autor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Redaktor">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Tłumacz">
  <mail link="shadoww@gentoo.org">Damian Kuras</mail>
</author>
<author title="Tłumacz">
  <mail link="stawrul@gmail.com">Waldemar Korłub</mail>
</author>

<abstract>
Opis korzystania z technologii Bluetooth w Gentoo.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.9</version>
<date>2007-05-16</date>

<chapter id="introduction">
<title>Wprowadzenie</title>
<section>
<title>Co to jest Bluetooth?</title>
<body>

<p>
Bluetooth jest przemysłową specyfikacją, która umożliwia użytkownikom łączenie
i wymianę informacji pomiędzy urządzeniami takimi jak komputery osobiste, PDA i
telefony komórkowe. Używając tej technologii użytkownik może osiągnąć
bezprzewodowy dźwięk i transmisję danych pomiędzy dwoma urządzeniami, nie
wydając ogromnych sum pieniędzy. Bluetooth oferuje również możliwość stworzenia
małych bezprzewodowych sieci LAN oraz pozwala na synchronizację urządzeń.
</p>

</body>
</section>
<section>
<title>O zawartości tego przewodnika</title>
<body>

<p>
W pierwszej części tego przewodnika opisano sposób identyfikacji urządzeń,
które wspierają technologię Bluetooth. Dzięki temu użytkownik może zamówić
urządzenie Bluetooth, które będzie działało poprawnie. W części tej
wytłumaczono również w jaki sposób skonfigurować jądro systemu, zidentyfikować
urządzenia Bluetooth zainstalowane w komputerze i wykryte przez jądro oraz
zainstalować podstawowe narzędzia Bluetooth.
</p>

<p>
W drugiej części opisano jak wykrywać zdalne urządzenia i w jaki sposób
uaktywnić połączenie do lub z nich poprzez ustawienie częstotliwości
komunikacji radiowej lub ustawienie sieci prywatnej (PAN).
</p>

<p>
W ostatniej części znajduje się szczegółowa lista aplikacji, które pomogą
skorzystać z wszystkich możliwości oferowanych przez technologię Bluetooth.
</p>

</body>
</section>
</chapter>

<chapter id="devices">
<title>Obsługiwane urządzenia</title>
<section>
<title>Urządzenia uznane za wspierane i niewspierane Bluetooth</title>
<body>

<impo>
Urządzenia te mogą działać nawet wtedy, gdy nie są uznane za takie, które
działają poprawnie. Gentoo nie zapewnia żadnego wsparcia dla tego typu
urządzeń.
</impo>

<p>
Listę aktualnie wspieranych urządzeń można znaleźć na stronie Marcela
Holtmanna: <uri
link="http://www.holtmann.org/linux/bluetooth/features.html">Funkcje urządzeń
Bluetooth oraz informacje na temat wersji</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Konfiguracja systemu</title>
<section>
<title>konfiguracja jądra</title>
<body>

<p>
Jako, że ostatnim stabilnym jądrem Linuksa jest jądro serii 2.6, konfigurację
przeprowadzimy używając tej serii. Większość urządzeń Bluetooth podłączamy do
portu USB, zatem USB należy również uaktywnić. Prosimy zapoznać się z
przewodnikiem <uri
link="/doc/pl/usb-guide.xml">Konfiguracja urządzeń USB w Gentoo Linux</uri>.
</p>

<pre caption="Konfiguracja jądra serii 2.6">
Networking ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(Poniższe cztery sterowniki są stworzone dla urządzeń Bluetooth
komunikujących się przez złącze PCMCIA i pojawią się one tylko w wypadku
gdy jest wybrane wsparcie dla PCMCIA w jądrze)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(Poniższy sterownik przeznaczony jest dla programu HCI Emulation)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Należy cofnąć się trzy poziom do góry, do sekcji Device Drivers i
sprawdzić czy wsparcie dla USB jest uaktywnione. Jest to wymagane w przypadku
kiedy używamy nadajnika Bluetooth, w postaci klucza USB).</comment>
USB support  ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Należy uruchomić ponownie komputer wykorzystując nowe jądro. Jeżeli wszystko
poszło dobrze, nasz system będzie gotowy do współpracy z urządzeniami
Bluetooth.
</p>

<impo>
Urządzenie USB może posiadać dwa tryby, a domyślnym będzie nie HCI, a HDI. W
tym wypadku należy użyć polecenia <c>hid2hci</c>, aby przełączyć urządzenie do
trybu HCI. System zapamięta te ustawienia przy następnym ponownym uruchomieniu.
</impo>

<pre caption="Sprawdzanie urządzeń Bluetooth">
<comment>(Jeden ze sposobów sprawdzenia urządzeń)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(Wpis Cls=e0(unk. ) identyfikuje urządzenie Bluetooth).</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Niektóre można wykryć przy pomocy lsusb z pakietu sys-apps/usbutils)</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>

</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - Stos Bluetooth</title>
<section>
<title>Instalacja BlueZ</title>
<body>

<p>
Kiedy już urządzenie jest wykrywane przez jądro, potrzebujemy warstwy, która
pozwoli aplikacjom na komunikację z urządzeniem Bluetooth. BlueZ jest
oficjalnym stosem Bluetooth Linuksa. Potrzebujemy dwóch pakietów,
<c>bluez-libs</c> i <c>bluez-utils</c>. Urządzenia potrzebujące oprogramowania
firmware Broadcom lub podobnego mogą wymagać pakietu <c>bluez-firmware</c>.
</p>

<pre caption="Instalacja bluez-libs i bluez-utils">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>

<warn>
Nie należy zainstalować <c>bluez-sdp</c>, ponieważ będzie on kolidował z
pakietem <c>bluez-utils</c>!
</warn>

</body>
</section>
<section>
<title>Konfiguracja BlueZ i łączenie w pary PIN-ów</title>
<body>

<p>
Pora na sprawdzenie czy system poprawnie uruchamia urządzenia Bluetooth. Należy
najpierw uruchomić potrzebne usługi Bluetooth.
</p>

<pre caption="Uruchamianie hciconfig">
<comment>(Uruchamianie Bluetooth)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                                 [ ok ]
*     Starting sdpd ...                                                 [ ok ]
*     Starting rfcomm ...                                               [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
        BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
        DOWN
        RX bytes:131 acl:0 sco:0 events:18 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
Pokazuje to, że urządzenie Bluetooth zostało rozpoznane. Jak możemy zauważyć
urządzenie jest wyłączone (<e>DOWN</e>). Należy je skonfigurować tak, aby
uruchamiało się włączone. Plik konfiguracyjny znajduje się w
<path>/etc/bluetooth/hcid.conf</path>. Wymagane zmiany, które należy wprowadzić
pokazane są poniżej. Dodatkowych szczegółów można szukać w manualu wydając
komendę <c>man hcid.conf</c>.
</p>

<pre caption="Edycja /etc/bluetooth/hcid.conf">
<comment>(Wymagane zmiany pokazane są poniżej)</comment>

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

<comment>(Należy zmienić zabezpieczenie na tryb "auto")</comment>
        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        pairing multi;

<comment>(Pin_helper jest wymagany tylko w przypadku posiadania
        &lt;=bluez-libs-2.x oraz &lt;=bluez-utils-2.x)
        (Należy zmienić zmienną pin_helper na wartość /etc/bluetooth/pin-helper)</comment>
        # PIN helper
        pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Należy ustawić nazwę urządzenia. Można je nazwać jak chcemy)</comment>
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ at %h (%d)";

        # Local device class
        class 0x3e0100;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        lm accept;

        # Default link policy
        lp rswitch,hold,sniff,park;

<comment>(Jeżeli nie wiemy do czego służą poniższe zmienne nie należy ich zmieniać)</comment>
        # Authentication and Encryption (Security Mode 3)
        #auth enable;
        #encrypt enable;
}
</pre>

<p>
Następnie należy skonfigurować PIN urządzenia Bluetooth. Pomoże nam to przy
łączeniu w parę tego urządzenia z innym.
</p>


<pre caption="Edycja /etc/bluetooth/pin">
<comment>(Należy zmienić wpis 123456 na wybrany przez nas numer pin)</comment>
123456
</pre>

<note>
Jeżeli używamy <c>&lt;=bluez-libs-2.x</c> oraz <c>&lt;=bluez-utils-2.x</c>
możemy wybierać spośród różnych pomocników pin, zależnie od tego, którego
chcemy używać. Dostępnymi pomocnikami pin są między innymi:
<c>/usr/lib/kdebluetooth/kbluepin</c> (net-wireless/kdebluetooth),
<c>/usr/bin/bluepin</c> lub <c>/etc/bluetooth/pin-helper</c>.
</note>
  	 
<note>
Od wersji <c>>=bluez-libs-3.x</c> and <c>>=bluez-utils-3.x</c> pomocnicy pin
zostali zastąpieni przez programy do zarządzania kluczami. Istnieje kilka
graficznych programów tego typu, które pomogą nam w zarządzaniu numerem PIN.
Są to na przykład <c>bluez-gnome</c> oraz <c>kdebluetooth</c>. Możemy również
korzystać z <c>passkey-agent</c> (mozna go znaleźć w <c>bluez-utils</c>)
w linii poleceń.
</note>

<impo>
Numer ten (wybrany przez nas) musi być taki sam we wszystkich hostach z
urządzeniami Bluetooth tak, aby można było je połączyć w pary. Należy również
pamiętać, aby numer ten trzymać w tajemnicy, gdyż teoretycznie każda osoba
znająca go będzie mogła ustanowić połączenie z naszym urządzeniem.
</impo>

</body>
</section>
<section>
<title>Konfiguracja usług</title>
<body>

<p>
Kiedy już pomyślnie zakończymy konfigurację BlueZ, należy uruchomić ponownie
potrzebne usługi.
</p>

<pre caption="Uruchamianie demonów Bluetooth">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(Można dodać go do domyślnego poziomu uruchomieniowego)</comment>
# <i>rc-update add bluetooth default</i>
 * bluetooth added to runlevel default
 * rc-update complete.
</pre>

<p>
Należy się upewnić czy demony Bluetooth zostały uruchomione w poprawny sposób.
Jeżeli widzimy, że zarówno <c>hcid</c> i <c>sdpd</c> są uruchomione i działają,
znaczy to, że Bluetooth jest dobrze skonfigurowany. Po tym możemy zobaczyć czy
urządzenia działają ze skonfigurowanymi przez nas opcjami.
</p>

<pre caption="Sprawdzanie czy demony Bluetooth uruchomiły się poprawnie">
<comment>(Należy sprawdzić czy serwisy działają)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
        BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN
        RX bytes:125 acl:0 sco:0 events:17 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy: RSWITCH HOLD SNIFF PARK
        Link mode: SLAVE ACCEPT
        Name: 'BlueZ at bluehat (0)'
        Class: 0x3e0100
        Service Classes: Networking, Rendering, Capturing, Object Transfer,
        Audio
        Device Class: Computer, Uncategorized
        HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
        Manufacturer: Cambridge Silicon Radio (10)
</pre>

</body>
</section>
</chapter>

<chapter id="detect">
<title>Wykrywanie i łączenie do zdalnego urządzenia</title>
<section>
<title>Wykrywanie urządzeń Bluetooth na innych hostach</title>
<body>

<p>
W tym momencie jesteśmy gotowi, aby wykryć urządzenia Bluetooth zainstalowane
na innych komputerach. Jest to niezależne od hosta systemu operacyjnego.
Użyjemy polecenia <c>hcitool</c> do tego celu.
</p>

<pre caption="Sprawdzanie lokalnych urządzeń">
# <i>hcitool dev</i>
Devices:
        hci0    00:01:02:03:04:05
</pre>

<pre caption="Skanowanie zdalnych urządzeń">
# <i>hcitool scan</i>
Scanning ...
        00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Dociekanie zdalnych urządzeń">
# <i>hcitool inq</i>
Inquiring ...
        00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Kiedy już znamy adres MAC zdalnego urządzenia Bluetooth, możemy sprawdzić czy
oba urządzenia zostały poprawnie połączone w parę.
</p>

<pre caption="Uruchamianie l2ping">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>

</body>
</section>
<section>
<title>Ustawianie częstotliwości komunikacji (RFCOMM)</title>
<body>

<note>
Ustawianie częstotliwości komunikacji radiowej jest krokiem opcjonalnym.
</note>

<p>
Możemy nawiązać połączenie w częstotliwości radiowej do innego urządzenia,
używając polecenia <c>rfcomm</c>. Aby ułatwić zadanie użytkownikom, szczególnie
tym, którzy posiadają kilka urządzeń wspierających Bluetooth, wskazane będzie
zmodyfikowanie domyślnej konfiguracji rfcomm znajdującej się w pliku
<path>/etc/bluetooth/rfcomm.conf</path>.
</p>

<p>
Cały fragment konfiguracji zaczynający się od <c>rfcomm0 {</c>, a kończący na
<c>}</c>, jest konfiguracją urządzenia, które ustanowi połączenie w
<path>/dev/rfcomm0</path>. W tym przypadku pokażemy tylko jeden przykład,
rfcomm0. Nic jednak nie stoi na przeszkodzie, aby dodać więcej urządzeń.
</p>

<pre caption="Edycja pliku /etc/bluetooth/rfcomm.conf">
<comment>(Pokazano jedynie zmiany, które mogą okazać się potrzebne)</comment>
rfcomm0 {
        # Automatically bind the device at startup
        <comment>(Tworzymy węzeł urządzenia, /dev/rfcomm0 na początku)</comment>
        bind yes;

        # Bluetooth address of the device
        <comment>(Należy wpisać adres urządzenia do, którego chcemy się łączyć)</comment>
        device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
Po konfiguracji RFCOMM, możemy połączyć się z każdym urządzeniem. Od kiedy
ustawiliśmy odpowiednie opcje w pliku <path>/etc/bluetooth/rfcomm.conf</path>
musimy jedynie wydać poniższe polecenia. W przypadku gdy nie poczyniliśmy
odpowiednich zmian w pliku konfiguracyjnym, pokazano również alternatywną
metodę w code listingu.
</p>

<pre caption="Ustanawianie połączenia RFCOMM">
<comment>(0 odnosi się do wpisu rfcomm0 w pliku konfiguracyjnym)</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Jeżeli nie edytowaliśmy pliku /etc/bluetooth/rfcomm.conf)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
Pierwszy parametrem po komendzie wywołującej połączenie jest węzeł urządzenia
TTY RFCOMM, który zostanie użyty (zazwyczaj 0). Drugim parametrem jest adres
MAC zdalnego urządzenia. Trzeci parametr jest opcjonalny i określa kanał, który
ma być używany. Należy zauważyć, że aby połączyć się z danym urządzeniem, to
urządzenie musi oczekiwać na przychodzące połączenia. Aby przerwać połączenie
wystarczy wcisnąć kombinację klawiszy CTRL+C.
</p>

<pre caption="Nasłuchiwanie przychodzących połączeń RFCOMM">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
W podobny sposób jak komenda połączenia, można podawać parametry przy komendzie
odbioru. Pierwsza określa węzeł urządzenia RFCOMM (zazwyczaj 0), które zostanie
użyte do akceptacji połączenia. Natomiast drugi parametr określa kanał, który
będzie użyty.
</p>

<p>
Za każdym razem gdy wywołujemy komendę <c>rfcomm</c>, można również określić
fizyczne urządzenie, którego chcemy używać. Poniżej można zobaczyć na
przykładzie dwóch powyższych komend wybór fizycznego urządzenia.
</p>

<pre caption="Wybór fizycznego urządzenia do połączenia RFCOMM">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Nasłuchiwanie określonego urządzenia) </comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Używanie określonego urządzenia do połączenia się z innym)</comment>
</pre>

</body>
</section>
<section>
<title>Ustawianie sieci prywatnej (Personal Area Network)</title>
<body>

<note>
Należy mieć na uwadze, że ustawianie sieci prywatnej (PAN) jest krokiem
opcjonalnym. W rozdziale tym opisano jak połączyć się do sieciowego punktu
dostępowego, choć ustawianie grupy sieci typu Ad-Hoc przebiega w podobny
sposób.
</note>

<p>
Należy załadować moduł <c>bnep</c>. Prawdopodobnie też będziemy chcieli, aby
ładował się on przy każdym uruchomieniu komputera.
</p>

<pre caption="Ładowanie modułu bnep">
# <i>modprobe bnep</i>
# <i>echo "bnep" &gt;&gt; /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<p>
Należy uruchomić demona <c>pand</c> na hoście, który dostarczy nam NAP-a.
Musimy uściślić czy chcemy serwis NAP-a. Host ten będzie komputerem głównym
(master) podczas gdy inne, podłączające się do niego, będą podrzędnymi (slave).
Inny możliwym serwisem jest GN (sieć grupowa typu ad-hoc).
</p>

<pre caption="Uruchamianie demona pand">
# <i>pand --listen --role NAP --master --autozap</i>
</pre>

<p>
Po wykonaniu powyższych czynności będziemy posiadać nasłuchującego hosta, a
więc reszta komputerów będzie musiała jedynie się z nim połączyć.
</p>

<pre caption="Łączenie do sieciowego punkto dostępowego">
# <i>pand --connect 00:0A:0B:0C:0D:0E --service NAP --autozap</i>
</pre>

<p>
Jeżeli wszystko poszło dobrze możemy skonfigurować adresy IP naszego hosta.
</p>

<pre caption="konfiguracja adresów IP modułu bnep">
host0 #<i> ifconfig bnep0 192.168.2.1</i>
host1 #<i> ifconfig bnep0 192.168.2.2</i>

host0 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:0A:0B:0C:0D:0E
          inet addr:192.168.2.1  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea3:cb41/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)

host1 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:01:02:03:04:05
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea2:dd2a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)
</pre>

<p>
Na koniec można przeprowadzić test i sprawdzić czy sieć działa poprawnie.
</p>

<pre caption="IP ping between bnep interfaces">
host1 #<i> ping 192.168.2.1</i>
PING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.
64 bytes from 192.168.2.1: icmp_seq=1 ttl=64 time=34.0 ms
64 bytes from 192.168.2.1: icmp_seq=2 ttl=64 time=37.3 ms

--- 192.168.2.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 34.045/35.690/37.336/1.656 ms
</pre>

</body>
</section>
</chapter>

<chapter id="apps">
<title>Aplikacje do codziennej pracy z Bluetooth</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
Istnieje dość sporo aplikacji do codziennej pracy z Bluetooth.  Rozdział ten
został podzielony na trzy części, pierwsza przeznaczona na opis aplikacji dla
Gnome, druga dla KDE, a ostatnia na temat różnorodnych aplikacji.
</p>

</body>
</section>
<section>
<title>Gnome</title>
<body>

<p>
Jeżeli jesteśmy użytkownikami środowiska Gnome, najprawdopodobniej będziemy
używać <c>gnome-bluetooth</c>. Posiada on najbardziej podstawowe i najbardziej
funkcjonalne opcję, takie jak podano poniżej.
</p>

<ul>
  <li>
    <c>gnome-bluetooth-manager</c>: Do zarządzania zdalnymi urządzeniami
    Bluetooth.
  </li>
  <li><c>gnome-obex-send</c>: Do wysyłania plików na inne urządzenia.</li>
  <li><c>gnome-obex-server</c>: Do odbioru plików.</li>
</ul>

<pre caption="Instalacjag gnome-bluetooth">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Do menu w sekcji Aplikacje &gt; Narzędzia systemowe zostaną dodane wpisy,
dzięki którym można będzie w łatwy sposób uruchomić menedżera lub udostępnianie
plików do transferu danych pomiędzy dwoma urządzeniami.
</p>

<p>
Aby przesyłać pliki (prosty sposób):
</p>

<ul>
  <li>
    Z telefonu do komputera, należy wysłać plik przy pomocy Bluetooth z
    telefonu, a zostanie on odebrany i będzie zawsze zapisywany w katalogu
    <path>/home</path>.
  </li>
<!--FIXME : Nie działa na Nautilus 2.10.x. Bug #103464 for details -->
<!--
  <li>
    Z komputera do telefonu, należy uruchomić program <c>nautilus</c> klikając
    na niego prawym przyciskiem myszki na pliku który chcemy wysłać. Z menu
    wybieramy opcję wyślij przez Bluetooth i akceptujemy na telefonie odbiór
    pliku.
  </li>
-->
</ul>

<p>
<c>gnome-phone-manager</c> jest świetną aplikacją, którą możemy używać do
wysyłanie i czytania wiadomości tekstowych SMS, używając wyłącznie systemu.
Nie musimy nawet dotykać telefonu, gdyż czytanie czy wysyłanie wiadomości
realizowane jest przez samą aplikację. Możemy być również powiadamiani o nowej
wiadomości na ekranie, jeśli ta opcja jest uaktywniona w ustawieniach.
instalacja samego programu jest prosta jak zawsze.
</p>

<pre caption="Instalacja gnome-phone-manager">
# <i>emerge gnome-phone-manager</i>
</pre>

</body>
</section>
<section>
<title>KDE</title>
<body>

<p>
KDE korzysta z <c>kdebluetooth</c>, który jest dostarczany z większą ilością
programów niż jego odpowiednik w Gnome.
</p>

<ul>
  <li><c>kbluetoothd</c>: Meta serwer Bluetooth</li>
  <li>
    <c>kbtsearch</c>: Narzędzie do wyszukiwania urządzeń/serwisów Bluetooth
  </li>
  <li><c>khciconfig</c>: Monitor KDE Bluetooth</li>
  <li><c>kioclient</c>: Klient lini poleceń KIO</li>
  <li><c>qobexclient</c>: Zestaw narzędzi dla testowania obex</li>
  <li><c>kbtobexclient</c>: Aplikacja struktury Bluetooth KDE</li>
  <li><c>kioobex_start</c></li>
  <li><c>kbtserialchat</c></li>
  <li><c>kbemusedsrv</c>: Serwer Bemused KDE</li>
  <li><c>kbtobexsrv</c>: Ofensywny serwer OBEX KDE dla Bluetooth</li>
  <li><c>kbluepin</c>: Aplikacja KDE KPart</li>
  <li>
    <c>auth-helper</c>: Program pomocniczy dla kbtobexsrv, który wysyła prośbę
    o autoryzację dla danego linku ACL.
  </li>
</ul>

<pre caption="Instalacja kdebluetooth">
# <i>emerge kdebluetooth</i>
</pre>

</body>
</section>
<section>
<title>Inne interesujące aplikacje</title>
<body>

<ul>
  <li>
    <c>app-mobilephone/obexftp</c>: Transfer plików do telefonów przez OBEX
  </li>
  <li>
    <c>app-mobilephone/bemused</c>: Bemused jest systemem, który pozwala
    kontrolować naszą kolekcję muzyki przy pomocy telefonu, używając Bluetooth
  </li>
  <li>
    <c>app-pda/multisync</c>: Multisync pozwala synchronizować kontakty,
    kalendarz i notatki między naszym telefonem komórkowym, a komputerem
    poprzez połączenie Bluetooth. Posiadam między innymi takie funkcję jak
    tworzenie kopii zapasowej i jej późniejsze przywracanie oraz synchronizację
    z klientem poczty elektronicznej Evolution. Należy ustawić flagę USE
    <c>irmc</c> dla <c>multisync</c>, aby mieć pewność, że posiada wsparcie dla
    Bluetooth.
  </li>
  <li>
     <c>net-wireless/opd</c> oraz <c>net-wireless/ussp-push</c> to programy
     (serwer i klient), które pozwalają na przesyłanie plików do pamięci
     telefonu komórkowego.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Podziękowania</title>
<section>
<body>

<p>
Specjalne podziękowania dla <mail link="marcel@holtmann.org">Marcela
Holtmanna</mail> za jego czas i oddanie przy pracy nad Bluetooth i za recenzję
tego przewodnika. Duże podziękowania należą się także <mail
link="puggy@gentoo.org">Douglasowi Russellowi</mail> za wykonanie dodatkowych
testów sprzętowych oraz za poprawki do tego przewodnika.
</p>

</body>
</section>
</chapter>
</guide>
