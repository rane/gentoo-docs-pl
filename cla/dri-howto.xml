<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/dri-howto.xml,v 1.18 2007/05/09 08:34:19 rane Exp $ -->

<guide link="/doc/pl/dri-howto.xml" lang="pl">
<title>Przewodnik po sprzętowej akceleracji 3D</title>

<author title="Autor">
  <mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Redaktor">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Redaktor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Tłumacz">
  Krzysztof Smirnow
</author>

<abstract>
Dokument ten ma pomóc włączyć akcelerację 3D z użyciem DRM na Gentoo z Xorg.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA  license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.9</version>
<date>2007-07-22</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<title>Sprzętowa akceleracja 3D - czym jest i po co?</title>
<body>

<p>
Dzięki sprzętowemu przyspieszeniu 3D proces trójwymiarowego renderowania
wykorzystuje procesor graficzny na karcie graficznej do rysowania
trójwymiarowych obrazów zamiast zużywania cennych zasobów procesora głównego.
Nazywa się to "sprzętową akceleracją", w odróżnieniu od "akceleracji
programowej", ponieważ bez przyspieszenia 3D procesor główny musiałby rysować
wszystko samodzielnie używając bibliotek renderowania Mesa, co pochłania dużo
mocy obliczeniowej. Podczas gdy Xorg typowo obsługuje dwuwymiarową akcelerację
sprzętową, często nie ma sprzętowej akceleracji 3D. Trójwymiarowe sprzętowe
przyspieszenie jest cenne w sytuacjach wymagających przedstawiania
trójwymiarowych obiektów, np. w grach lub trójwymiarowym modelowaniu, czy też
w 3D CAD.
</p>

</body>
</section>
<section>
<title>Jak uruchomić sprzętową akcelerację 3D?</title>
<body>

<p>
W wielu przypadkach istnieją zarówno sterowniki binarne, jak i o otwartym
źródle. Wypada preferować te drugie, skoro używamy Linuksa i otwartość
oprogramowania stanowi jedną z podstawowych zasad. Czasami jednak nie mamy
wyboru i musimy użyć sterowników binarnych, jak w przypadku kart nVidii.
Sterowniki binarne to na przykład <c>x11-drivers/nvidia-drivers</c> i dla kart
nVidia oraz <c>x11-drivers/ati-drivers</c> dla kart ATI. Inne sterowniki
open-source to <c>media-video/ati-gatos</c> dla kart ATI, które mają na celu
lepiej wspierać możliwości wideo ATI.
</p>

</body>
</section>
<section>
<title>Czym jest DRI?</title>
<body>

<p>
<uri link="http://dri.freedesktop.org/wiki/">Direct Rendering
Infrastructure</uri>), czyli Infrastruktura Bezpośredniego Odtwarzania, znana
jako DRI, jest szkieletem dla bezpośredniego dostępu do sprzętu graficznego w
sposób wydajny i bezpieczny.  Zawiera modyfikacje dla serwera X, bibliotek
klient-serwer oraz jądra.  Najważniejszym zastosowaniem DRI jest tworzenie
środowiska do szybkiej implementacji OpenGL.
</p>

</body>
</section>
<section>
<title>Co to jest DRM i jaki ma związek z Xorg?</title>
<body>

<p>
DRM (Direct Rendering Manager) jest <e>rozszerzeniem</e> Xorga, które dodaje
akcelerację 3D dla kart graficznych poprzez dołączenie do jądra systemu modułu
niezbędnego do bezpośredniego renderingu.
</p>

</body>
</section>
<section>
<title>Do czego służy ten przewodnik</title>
<body>

<p>
Przewodnik ten jest dla tych, którzy nie mogą uzyskać bezpośredniego renderingu
z samym serwerem Xorg. DRM działa z następującymi sterownikami:
</p>

<ul>
  <li>3dfx</li>
  <li>i8x0</li>
  <li>matrox</li>
  <li>rage128</li>
  <li>radeon</li>
  <li>mach64</li>
  <li>sis300</li>
  <li>via</li>
</ul>

<p>
Więcej informacji można znaleźć na <uri
link="http://dri.freedesktop.org">stronie DRI</uri>.
</p>

</body>
</section>
<section>
<title>Pytania, sugestie, propozycje</title>
<body>

<p>
Wszelkie pytania, sugestie i propozycje prosimy zgłaszać na
adres <mail link="dberkholz@gentoo.org">Donniego Berkholza</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalowanie Xorg i konfiguracja jądra systemu</title>
<section>
<title>Instalowanie Xorg</title>
<body>

<p>
Aby uruchomić Xorg, należy przeczytać <uri
link="/doc/pl/xorg-config.xml">Przewodnik po konfiguracji Xorg</uri>.
</p>

</body>
</section>
<section>
<title>Konfiguracja jądra</title>
<body>

<p>
Należy zaznaczyć odpowiednią dla posiadanego chipsetu opcję.
</p>

<pre caption="Sprawdzanie chipsetu AGP">
# <i>emerge pciutils; lspci | grep AGP</i>
# <i>00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)</i>
<comment>(Wyniki sprawdzenia mogą być różne zależnie od sprzętu.)</comment>
</pre>

<p>
Jeżeli jądra nie jest w stanie obsługiwać chipsetu ciągle jest szansa
uruchomienia sprzętu poprzez użycie parametru <c>agp=try_unsupported</c>.
Spowoduje on użycie rdzennych algorytmów Intela do obsługi AGP. Aby dodać ten
parametr do konfiguracji jądra, należy wyedytować plik konfiguracyjny
bootloadera.
</p>

<p>
Poniższe opcje dotyczą większości, jeżeli nie wszystkich typów jądra systemu.
Zostały one skonfigurowane z użyciem standardowego jądra <c>gentoo-sources</c>.
</p>

<pre caption="Konfiguracja jądra systemu">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
<comment>(Należy się upewnić, że /usr/src/linux to link symboliczny do aktualnego kernela.)</comment>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Opcje w make menuconfig">
Processor type and features --->
&lt;*&gt; MTRR (Memory Type Range Register) support
Device drivers --->
   Character devices --->
&lt;M&gt; /dev/agpgart (AGP Support)
<comment>(Opcja agppart jest niedostępna dla 64-bitowych jąder; należy wybrać
tylko wsparcie dla własnego chipsetu.)</comment>
&lt;M&gt; Intel 440LX/BX/GX, I8xx and E7x05 support
<comment>(Należy wybrać swój chipset zamiast powyższego)</comment>
&lt;M&gt; Direct Rendering Manager (XFree86 DRI support)
</pre>

</body>
</section>
<section>
<title>Kompilowanie i instalacja jądra systemu</title>
<body>

<pre caption="Kompilacja i instalacja jądra systemu">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Należy pamiętać o ustawiniu <path>grub.conf</path> lub <path>lilo.conf</path> i
wykonaniu <c>/sbin/lilo</c> jeżeli używany jest LILO.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Konfiguracja DRI</title>
<section id="configure_xorg">
<title>Konfigurowanie xorg.conf</title>
<body>

<p>
Należy otworzyć <path>/etc/X11/xorg.conf</path> w edytorze tekstu i
dokonanie w nim zmian aktywujących DRI oraz GLX.
</p>

<pre caption="xorg.conf">
...
Section "Module"
  Load "dri"
  Load "glx"
  ...
EndSection
...
Section "Device"
  Driver "radeon"
  <comment>(Użytkownicy innych sterowników muszą odpowiednio zmodyfikować wpis "radeon")</comment>
  ...
EndSection
...
Section "dri"
  Mode 0666
EndSection
</pre>

</body>
</section>
<section>
<title>Ładowanie modułów poprzez autoload.d</title>
<body>

<p>
Moduł będzie automatycznie ładowany przy każdym starcie systemu jeśli dodamy
jego nazwę do pliku <path>/etc/modules.autoload.d/kernel-2.6</path>.
</p>

<pre caption="Edytowanie /etc/modules.autoload.d/kernel-2.6">
<comment>(Należy wpisać nazwę modułu, który ma być automatycznie wczytywany)</comment>
intel-agp
</pre>

<note>
Jeżeli <c>agpgart</c> zostało skompilowane jako moduł należy je również dodać do
<path>/etc/modules.autoload.d/kernel-2.6</path>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Testowanie akceleracji 3D</title>
<section>
<title>Ponowne uruchomienie systemu z użyciem nowego jądra</title>
<body>

<p>
Po ponownym uruchomieniu systemu i zalogowaniu się na „normalnego” użytkownika
należy sprawdzić czy direct rendering został zainstalowany i czy dobrze działa.
<c>glxinfo</c> oraz <c>glxgears</c> są częścią pakietu <c>mesa-progs</c> zatem
upewnijcie się, że jest on zainstalowany przed użyciem tych komend.
</p>

<pre caption="Testowanie renderingu">
$ <i>startx</i>
<comment>(Nie ma potrzeby ręcznego ładowania modułów dla agpart, powinny wczytać się automatycznie</comment>
$ <i>glxinfo | grep rendering</i>
direct rendering: Yes
<comment>(Jeżeli odpowiedź brzmi: "No", akcelaracja 3D nie została zainstalowana)</comment>
$ <i>glxgears</i>
<comment>(Test ilości ramek na sekundę (FPS) w domyślnej wielkości.  Liczba
powinna być znacząco wyższa niż przed instalacją DRI. Test należy wykonać w
czasie, kiedy procesor nie jest zajęty innymi zadaniami)</comment>
</pre>

<note>
FPS mogą być ograniczone przez wielkość odświeżania monitora, więc jeżeli
<c>glxgears</c> pokaże tylko około 70-100 FPS. <c>games-fps/ut2004-demo</c>
jest lepszym narzędziem do pomiaru, ponieważ może podać rzeczywiste osiągi.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Ulepszanie działania</title>
<section>
<title>Przyspieszanie direct renderingu</title>
<body>

<p>
Kilka odpowiednio ustawionych opcji może zwiększyć wydajność nawet o
30 procent. Ustawia się je w <path>/etc/X11/xorg.conf</path>. Jednakże najpierw
musimy się dowiedzieć czy wspierają je nasza płyta główna oraz karta graficzna.
</p>

<p>
Po pierwsze, sprawdzimy czy nasza karta graficzna wspiera fast write. Dokonamy
tego poprzez dogłębną analize wyniku polecenia <c>lspci</c>, a zwłaszcza
informacji "VGA compatible controller".
</p>

<pre caption="Sprawdzanie karty graficznej">
# <i>lspci -vv</i>
01:00.0 VGA compatible controller: ATI Technologies Inc Radeon Mobility M6
LY (prog-if 00 [VGA])
. . .
Capabilities: [58] AGP version 2.0
       Status: RQ=48 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
Mimo, iż wypisywanych jest dużo informacji, obchodzi nas tylko <b>FW</b> w
podsekcji "Status" dla AGP "Capabilities". Jeżeli otrzymujemy <b>FW+</b> oznacza
to, że nasza karta wspiera fast write. Możemy przystąpić zatem do sprawdzania,
czy poradzi z nim sobie nasza płyta główna.
</p>

<impo>
Jeżeli zamiast <b>FW+</b> otrzymujemy <b>FW-</b> nie możemy odblokować fast
write w <path>xorg.conf</path>, ponieważ nasza karta go nie obsługuje.
</impo>

<p>
Teraz możemy sprzwdzić, czy płyta główna obsługuje fast write. Znów posłużymy
się poleceniem <c>lspci</c>, lecz tym razem należy zwrócić uwagę na sekcję "Host
bridge"
</p>

<pre caption="Sprawdzanie płyty głównej">
# <i>lspci -vv</i>
00:00.0 Host bridge: Intel Corporation 82830 830 Chipset Host Bridge
(rev 02)
. . .
Capabilities: [a0] AGP version 2.0
Status: RQ=32 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
I tym razem należy przyjrzeć się opcji <b>FW</b>. Jeżeli zobaczymy <b>FW+</b>
oznacza to, iż nasza płyta główna wspiera technologię fast write.
</p>

<impo>
Należy pamiętać, że zarówno informacja o karcie graficznej, jak i płycie
głównej, musi pokazywać dokładnie ten sam stan <b>FW</b>. Jeżeli którekolwiek z
urządzeń pokazuje <b>FW-</b> nie możemy uaktywnić fast write w naszym
<path>xorg.conf</path>
</impo>

<p>
Reasumując, jeżeli nasza płyta główna oraz karta graficzna wspierają fast write,
możemy ustawić tę opcję w <path>/etc/X11/xorg.conf</path> i wyciągnąć to co
najlepsze z naszego sprzętu :).
</p>

<pre caption="xorg.conf">
Section "Device"
  Option     "AGPMode" "4"
  <comment>(Tak zwiększa się ilość FPS z 609 do 618.)</comment>
  Option     "AGPFastWrite" "True"
  <comment>(Ta opcja nie daje wymiernego efektu, za to może zdestabilizować system)</comment>
  <comment>(Może się okazać konieczne ustawienie jej również w BIOS-ie)</comment>
  Option     "EnablePageFlip" "True"
  <comment>(Ta opcja zwiększa ilość FPS z 618 do 702. Jej użycie jest również ryzykowne)</comment>
  ...
EndSection
</pre>

<warn>
Wybór opcji <c>AGPFastWrite</c> na chipsetach VIA może spowodować niespodziewane
zawieszanie się systemu. Dzieje się tak, ponieważ chipsety VIA nie współpracują
dobrze z fast write, zatem ustawiamy tę opcję na własne ryzyko.
</warn>

<note>
Należy pamiętać, że jeżeli chcemy aby fast write działał poprawnie musimy
odblokować odpowiednią opcję w BIOSie.
</note>

<!--
**
This section needs to be in eventually, but non-nvidia cards don't use
/proc/driver at all. We need some way to get users to check and see that SBA
and fast-writes are allowed for their hardware; that info is somewhere else in
/proc. If you have a non-nvidia card, you can help by emailing
nightmorph@gentoo.org with the relevant bits of your /proc so I can get this
info into the guide. See below for where things are found on an nvidia card.
**

<p>
A few options may increase performance by up to 30 percent (or more) over the
default. Set them in <path>/etc/X11/xorg.conf</path>. However, you will first
need to check that your motherboard and video card support these options.
</p>

<p>
First, let's check the supported modes of your video cards, and see if your it
supports fast writes. Remember to replace <c>nvidia</c> with the actual name of
your device in <path>/proc/driver/nvidia/</path>.
</p>

<pre caption="Video card check">
$ <i>cat /proc/driver/nvidia/agp/card</i>
</pre>

<p>
Next, let's check out the capabilities of the motherboard:
</p>

<pre caption="Motherboard check">
$ <i>cat /proc/driver/nvidia/agp/host-bridge</i>
</pre>

<impo>
Remember, the modes and capabilities for your video card and motherboard must
match for these settings to work!
</impo>
-->

<p>
Aby poznać więcej opcji należy udać się pod adres <uri
link="http://dri.freedesktop.org/wiki/FeatureMatrix">tabeli możliwości</uri> na
stronie DRI lub przeczytać <uri
link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">ich listę</uri>
na stronie Sourceforge.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rozwiązywanie problemów</title>
<section>
<title>Nie działa rendering, nie wiem dlaczego</title>
<body>

<p>
Należy wykonać <c>modprobe radeon</c> przed wystartowaniem serwera X (no i
zamienić <c>radeon</c> na nazwę pożądanego sterownika). Spróbuj również wbudować
agpgart do kernela, zamiast ładować go jako moduł.
</p>

</body>
</section>
<section>
<title>
Po wpisaniu startx, wyskakuje błąd: "[drm] failed to load kernel module
agpgart"
</title>
<body>

<p>
Spowodowane jest to tym, że agpart został wkompilowany do jądra, zamiast być
użytym jako moduł. Jeśli nie występują inne problemy można spokojnie zignorować
ten komunikat.
</p>

</body>
</section>
<section>
<title>Mam Radeona, chcę mieć TV-Out</title>
<body>

<p>
Spróbuj sterowników ati-gatos. <c>emerge -av ati-gatos</c>.
</p>

</body>
</section>
<section>
<title>
To nie działa. Moja karta jest bardzo nowa i w ogóle nie jest wspierana
</title>
<body>

<p>
Spróbuj sterowników binarnych. Dla <c>ati-drivers</c>, listę znajdziesz tu:
<uri>http://ati.amd.com/support/drivers/linux/linux-radeon.html</uri> (dla x86)
oraz <uri>http://ati.amd.com/support/drivers/linux64/linux64-radeon.html</uri>
(dla amd64). Jeżeli to nie pomoże, użyj fbdev. Jest powolny, ale działa.
</p>

</body>
</section>
<section>
<title>Mam kartę PCI i nic nie działa. Pomocy!</title>
<body>

<p>
Edytujemy <path>/etc/X11/xorg.conf</path>. W sekcji "Device" uruchamiamy
ForcePCIMode.
</p>

<pre caption="Enabling ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Podziękowania</title>
<section>
<body>

<ol>
  <li>
  Dla Christophera Webbera za sugestię podpowiedzi na temat zmiany lub
  rekompilacji kernela.
  </li>
  <li>
  Dla Steve'a, za zwrócenie uwagi na wypadki dri oraz DRI w XF86Config.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter>
<title>Przydatne adresy</title>
<section>
<body>

<ol>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=46681</uri></li>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=29264</uri></li>
  <li><uri>http://dri.freedesktop.org/</uri></li>
  <li><uri>http://www.retinalburn.net/linux/dri_status.html</uri></li>
</ol>

</body>
</section>
</chapter>
</guide>
