<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/mailfilter-guide.xml,v 1.9 2007/05/10 13:42:02 shadoww Exp $ -->

<guide link="/doc/pl/mailfilter-guide.xml" lang="pl">
<title>Filtrowanie poczty w Gentoo</title>

<author title="Autor">
  <mail link="jaervosz@gentoo.org">Sune Kloppenborg Jeppesen</mail>
</author>
<author title="Współpracownik">
  <mail link="gentoo@hilli.dk">Jens Hilligsøe</mail>
</author>
<author title="Tłumaczenie">
  <mail link="shadoww@gentoo.org">Damian Kuras</mail>
</author>

<abstract>
W przewodniku tym opisano krok po kroku proces instalacji technologii
antyspamowych w Postfixie, między innymi Amavisd-new używający Spamassassin,
ClamAV, greylistingu i SPF.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.13</version>
<date>2007-06-25</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<body>

<p>
W przewodniku opisano krok po krok sposób instalacji bramki antyspamowej i
antywirusowej. Jest to proste rozwiązanie, które można stosować dla pojedynczego
serwera.
</p>

</body>
</section>
<section>
<title>Wprowadzenie</title>
<body>

<p>
W dokumencie tym opisano w jaki sposób skonfigurować bramę filtrującą pocztę pod
kontem spamu (ze zbiorową domeną). Serwer ten powinien znajdować się przed
serwerami poczty elektronicznej, na których aktualnie utrzymywane są konta
pocztowe, takimi jak Microsoft Exchange czy Lotus Notes.
</p>

<p>
W tym przykładzie będziemy posługiwać się aplikacjami zapewniającymi wysoki
poziom zabezpieczeń oraz posiadającymi czytelne pliki konfiguracyjne. Jako MTA
wybraliśmy postfixa, która posiada wysoki poziom zabezpieczeń oraz jest wygodny
i dość prosty w konfiguracji. W normalnych warunkach postfix nasłuchuje
przychodzącej poczty na porcie 25. Po otrzymaniu poczty elektronicznej zostaje
on przekierowany do Amavisd-new na port 10024. Amavisd-new filtruje wiadomość
przy użyciu kilku różnych filtrów przed zwróceniem tejże wiadomości z powrotem
do Postfixa na port 10025, który następnie skieruje go do serwera poczty
elektronicznej.
</p>

<p>
Amavisd-new jest szkieletowym filtrem zawartości, który wykorzystuje inne
aplikacje do filtrowania antywirusowego i antyspamowego. W tym przykładzie
używać będziemy dwóch takich aplikacji, ClamAV do filtrowania antywirusowego
oraz Spamassassin do filtrowania antyspamowego. Sam Spamassassin może pełnić
funkcję jako kolejna warstwa szkieletowego filtra zawartości i wykorzystywać do
pomocy aplikację Vipul Razor2 i DCC.
</p>

<p>
W odróżnieniu od innych technologii antyspamowych takich jak RBL-e, Spamassassin
nie odrzuca lub akceptuje w prosty sposób wiadomości bazując na pojedynczym
teście. Używa wielu wewnętrznych testów i zewnętrznych aplikacji wspomagających
do obliczania wartości spamu dla każdej wiadomości, która przez niego przejdzie.
Wartość ta wyliczana jest za pomocą następujących testów:
</p>

<ul>
  <li>Filtrowanie Bayesa</li>
  <li>Statyczne regułki bazujące na regularnych wyrażeniach</li>
  <li>Sieci rozproszone i współpracujące:
  <ul>
    <li>RBLs</li>
    <li>Razor2</li>
    <li>Pyzor</li>
    <li>DCC</li>
  </ul>
  </li>
</ul>

<p>
Pierwsza część tego przewodnika (rozdziały od 1 do 4) opisuje podstawy
konfiguracji bramki filtrującej pocztę. Wiadomości z kolejnych rozdziałów mogą
zostać zaimplementowane indywidualnie i bez zależności pomiędzy poszczególnymi
rozdziałami. W rozdziałach tych opisano w jaki sposób:
</p>

<ul>
  <li>
    Skonfigurować specjalne foldery IMAP do nauki filtru Bayesa i doręczania
    fałszywego spamu
  </li>
<!--
  <li>
   Skonfigurować analizator logów, który będzie tworzył dzienne raporty
  </li>
-->
  <li>
   Skonfigurować greylisting z Postfixem
  </li>
  <li>
    Skonfigurować Amavisd-new tak, aby używał interfejsu MySQL do zarządzania
    preferencjami użytkowników
  </li>
  <li>
    Skonfigurować Spamassassina tak, aby używał interfejsu MySQL dla danych
    Bayesa i AWL.
  </li>
</ul>

<note>
Foldery IMAP używać będą formatu maildir. Utrzymywanie każdego maila w osobnym
pliku sprawia, że obsługa staję się prostsza. Użytkownikom mbox proponujemy
wypróbowanie maildir. Jeżeli jeszcze nie używamy maildir potrzebne narzędzia
należy zainstalować poprzez wydanie polecenia <c>emerge courier-imap</c>.
</note>

<p>
Planowana piąta część zwierać będzie wszelakie wskazówki odnośnie wydajności i
rzeczy, które warto wiedzieć (uruchamianie chroot, restrykcje postfix, itd.).
</p>

<note>
Przekazywanie odpowiedzialności na dodatkowe programy nie może obejść się bez
ryzyka. Należy znać i ufać tym programom. W tych ustawieniach jedynie decyzja
związana z kwarantanną zainfekowanej wirusami poczty elektronicznej bazuje na
pojedynczym dodatkowym programie. Używanie systemu punktów, z którego korzysta
Spamassassin, do zatrzymywania poczty elektronicznej zawierającej spam, nie jest
podejmowane przy wykonaniu pojedynczej weryfikacji, z wyjątkiem własnych
statycznych reguł Spamassassina.
</note>

<warn>
Odrzucając pocztę elektroniczną zawierającą spam na poziomie MTA należy zachować
ostrożność w wyborze RBL-a, którego chcemy używać. Przykładowo SpamCop byłby
złym wyborem, aby go używać na poziomie MTA ponieważ doświadczać będziemy
sporej ilości dobrych wiadomości traktowanych jako spam, z racji tego, że system
nasłuchu tego programu jest zbyt agresywny. Więcej informacji na ten temat można
znaleźć w <uri
link="http://www.geekcomix.com/cgi-bin/classnotes/wiki.pl?UNIX03/Realtime_Blackhole_Lists_Are_Bad">
Realtime Blackhole Lists Are Bad</uri> i <uri
link="http://theory.whirlycott.com/~phil/antispam/rbl-bad/rbl-bad.html">The
Spam Problem: Moving Beyond RBLs</uri>
</warn>

</body>
</section>
<section>
<title>Przygotowania</title>
<body>

<p>
Zanim zaczniemy, powinniśmy sprawdzić czy posiadamy działającą instalację
programu Postfix, przy pomocy której będziemy mogli odbierać i wysyłać pocztę.
Dodatkowo należy posiadać również "backend" serwera poczty elektronicznej.
Jeżeli nie mamy doświadczenia w konfiguracji programu Postfix, szybko może się
okazać, że jest to zadanie zbyt skomplikowane, gdyż wszystko powinno zostać
ustawione w jednym czasie. Jeśli potrzebujemy pomocy, możemy ją znaleźć w
znakomitym przewodniku opisującym <uri
link="/doc/pl/virt-mail-howto.xml">Wirtualny system pocztowy oparty o
Postfix</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalacja potrzebnego oprogramowania</title>
<section>
<body>

<p>
Zaczynamy instalując najważniejsze programy: Amavisd-new, Spamassassin and
ClamAV.
</p>

<pre caption="Instalacja Amavis, Spamassasin i Clamav">
# <i>emerge amavisd-new spamassassin clamav </i>
</pre>

<note>
Jak wcześniej wspomnieliśmy, należy posiadać działającą już instalację programu
<c>postfix</c> na naszym komputerze. Instalacja powinna się ograniczyć jedynie
do <c>emerge postfix</c> <e>i</e> do rozumienia
podstaw na jakich działa Postfix.
</note>

</body>
</section>
<section>
<title>Ustawianie DNS</title>
<body>

<note>
Jeśli nie ustawiamy serwera-bramy, a skrzynki pocztowe znajdują się na tym samym
serwerze, musimy jedynie stworzyć wpisy MX-Record.
</note>

<p>
W czasie kiedy programy się instalują, należy uruchomić kolejny terminal i
stworzyć potrzebne wpisy DNS.
</p>

<p>
Zacznijmy od utworzenia wpisu <c>MX</c> dla bramy pocztowej i wpisu <c>A</c> dla
następnego celu.
</p>

<pre caption="Ustawianie DNS-a">
<comment>(Wpis MX dla bramy pocztowej)</comment>
                MX      10      mailgateway.mydomain.tld.
<comment>(Wpis A dla bramy pocztowej)</comment>
mailgateway     A       mgw.ip.add.here
<comment>(Wpis A dla następnego przeskoku serwera pocztowego</comment>
mail            A       ms.ip.add.here
</pre>

<note>
Niektórzy z dostawców Internetu technologią ADSL, mogą blokować port 25 i przez
to zmuszać nas do przekazywania poczty przez jeden z ich serwerów. Zazwyczaj
musimy stworzyć drugi wpis MX w postaci: <c>MX      20
backup-mx.some-isp.tld</c>
</note>

</body>
</section>
<section>
<title>Otwieranie firewalla</title>
<body>

<p>
Dodatkowo musimy otworzyć kilka portów, aby pozwolić na swobodny przepływ poczty
między aplikacjami ją weryfikującymi.
</p>

<table>
<tr>
  <th>Aplikacja</th><th>Protokół</th><th>Port</th>
</tr>
<tr>
  <ti>DCC</ti><ti>UDP</ti><ti>6277</ti>
</tr>
<tr>
  <ti>Razor(wychodzący ping)</ti><ti>TCP</ti><ti>7</ti>
</tr>
<tr>
  <ti>Razor</ti><ti>TCP</ti><ti>2703</ti>
</tr>
</table>

<p>
Razor używa polecenia ping do badania, które serwery znajdują się najbliżej
niego.
</p>

</body>
</section>
<section>
<title>Konfiguracja aplikacji Postfix</title>
<body>

<p>
Na początku należy powiedzieć aplikacji <c>postfix</c>, aby nasłuchiwała na
porcie 10025 oraz że została usunięta większość restrykcji, które zostały
nałożone w związku z domyślnym nasłuchiwaniem tej aplikacji na porcie 25.
Dodatkowo zadbamy również o to, aby program nasłuchiwał jedynie lokalnych
połączeń na porcie 25. Aby tego dokonać musimy dodać następujące linijki na
końcu pliku <path>/etc/postfix/master.cf</path>.
</p>

<pre caption="Przykładowy plik /etc/postfix/master.cf">
smtp-amavis     unix -        -       n     -       2  smtp
  -o smtp_data_done_timeout=1200
  -o smtp_send_xforward_command=yes
<comment>#Jeśli używamy lmpt:
#lmtp-amavis    unix -        -       n     -       2  lmtp
#   -o lmtp_data_done_timeout=1200
#   -o lmtp_send_xforward_command=yes</comment>

127.0.0.1:10025 inet n        -       n     -       -  smtpd
  -o content_filter=
  -o local_recipient_maps=
  -o relay_recipient_maps=
  -o smtpd_restriction_classes=
  -o smtpd_client_restrictions=
  -o smtpd_helo_restrictions=
  -o smtpd_sender_restrictions=
  -o smtpd_recipient_restrictions=permit_mynetworks,reject
  -o mynetworks=127.0.0.0/8
  -o strict_rfc821_envelopes=yes
  -o smtpd_error_sleep_time=0
  -o smtpd_soft_error_limit=1001
  -o smtpd_hard_error_limit=1000

<comment>#Jeśli chcemy używać filtrowania proxy:
#smtp            inet n         -       n      -       8 smtpd
# -o smtpd_proxy_filter=127.0.0.1:10024
# -o smtpd_client_connection_count_limit=4
#Jeśli nie chemy skanować wychodzącej poczty
#10.0.0.2:smtp   inet n         -       n       -      - smtpd
#-o content_filter=</comment>
</pre>

<note>
Linijka <c>smtp-amavis</c> określa maksymalną liczbę procesów, które mogą
działać w tym samym czasie. Jeśli potrzebujemy większej rangi tego procesu, po
prostu dostosowujemy liczbę do naszych potrzeb. Należy jednak pamiętać, aby ta
liczba zgadzała się z liczbą wpisaną do zmiennej <c>$max_servers</c> w pliku
<path>amavisd.conf</path>.
</note>

<note>
Jeśli chcemy odrzucić spam wcześniej, możemy użyć metody Before-Queue (proxy)
zamiast metody filtrowania. Po odkomentowaniu trzech linijek będziemy musieli
ustawić zmienną <c>content_filter=</c> w pliku <path>main.cf</path>. Działanie
takie jednak, nie jest zalecane w przypadku serwerów o dużym natężeniu ruchu,
ponieważ ilość równoczesnych połączeń jest ograniczona przez liczbę instancji
programu amavisd.
</note>

<warn>
Metoda Befor-Queue(proxy) nie jest jeszcze odpowiednio przetestowana.
</warn>

<note>
Jeśli z jakichkolwiek powodów chcemy wysłać pocztę elektroniczną z tego
komputera i nie chcemy, aby była ona skanowana, należy dodać kolejną instancję
programu postfix poprzez odkomentowanie ostatnich dwóch linijek i zastąpienie
ich poprawnym adresem IP.
</note>

<p>
Plik <path>master.cf</path> mówi głównemu programowi postfix jak uruchamiać
każdy indywidualnym proces postfix. Więcej informacji znajdziemy w manualu po
wydaniu komendy <c>man 8 master</c>.
</p>

<p> Następnie instancja programu <c>postifx</c> nasłuchującego na porcie 25 musi
przefiltrować pocztę elektroniczną przez <c>amavisd-new</c>, który nasłuchuje na
porcie 10024.  </p>

<p> Musimy również ustawić kolejny cel dla poczty elektronicznej. Postfix
powinien wiedzieć, że musi filtrować całą pocztę elektroniczną poprzez
zewnętrzny filtr zawartości. Należy również uaktywnić jawny routing tak, aby
Postfix wiedział gdzie kierować dalej pocztę.
</p>

<pre caption="Modyfikacja /etc/postfix/main.cf"> biff = no
empty_address_recipient = MAILER-DAEMON queue_minfree = 120000000

content_filter = smtp-amavis:[127.0.0.1]:10024 <comment>#Odpowiednik gdy używamy
protokołu lmtp: #content_filter = lmtp-amavis:[127.0.0.1]:10024

# Mapy transportowe (TRANSPORT MAP)
#
# Należy wkleić tekst z pliku sample-transport.cf jeśli potrzebujemy jawnego
# routingu.</comment>
transport_maps = hash:/etc/postfix/transport

relay_domains = $transport_maps </pre>

<p>
Postfix posiada ogromną ilość opcji, które można ustawić w pliku
<path>main.cf</path>. Po dalsze wyjaśnienia należy udać się do manuala <c>man 5
postconf</c> lub na stronę internetową gdzie znajduje się ten sam dokument <uri
link="http://www.postfix.org/postconf.5.html">Postfix Configuration
Parameters</uri>.
</p>

<p>
Plik <path>transport</path> jest to normalny plik hash programu Postfix. Poczta
elektroniczna z lewej strony przekierowywana jest do celu znajdującego się z
prawej strony.
</p>

<pre caption="/etc/postfix/transport">
mydomain.tld                          smtp:mail.mydomain.tld
</pre>

<p>
Po edycji tego pliku należy wydać komendę <c>postmap</c>. Postfix
aktualnie nie czyta tego pliku więc należy go przekonwertować do odpowiedniego
formatu przy użyciu komendy <c>postmap /etc/postfix/transport</c>. W wyniku tego
polecenia zostanie utworzony plik <path>/etc/postifx/transport.db</path>. Nie ma
potrzeby, aby przeładowywać program, gdyż Postfix automatycznie zatwierdzi
zmiany.
</p>

<note>
Jeśli następny serwer pocztowy nie nasłuchuje na standardowym 25 porcie
protokołu SMTP, można powiedzieć aplikacji postfix, aby nasłuchiwała na danym
porcie, wskazując na ten port: <c>smtp:mail.mydomain.tld:25000</c>.
</note>

<p>
Jeśli pierwsza próba wysłania wiadomości zakończy się niepowodzeniem i wiadomość
zostanie zwrócona, będzie to najprawdopodobniej oznaczało błąd w konfiguracji.
Najlepiej jest wtedy tymczasowo włączyć <c>soft_bounce</c> do czasu rozwiązania
problemu. Postfix będzie przetrzymywał wiadomości w kolejce aż do momentu, kiedy
<c>soft_bounce</c> zostanie wyłączone lub usunięte. Zapobiegnie to zwrotom
wiadomości do nadawcy przy błędach w jej dostarczeniu.
</p>

<pre caption="Aktywowanie soft_bounce">
# <i>postconf -e "soft_bounce = yes"</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Po stworzeniu w pełni działającej konfiguracji, należy się upewnić, że
<c>soft_bounce</c> jest wyłączone lub usunięte, a następnie przeładować postfix.
</p>

</body>
</section>
<section>
<title>Konfiguracja Amavisd-new</title>
<body>

<p>
Amavisd-new może być używany do zebrania wszystkich filtrów i następnie pozwala
w łatwy sposób korzystać z kilku różnych technologii razem. Po odebraniu
wiadomości zostanie ona rozpakowana, przefiltrowana przez kilka zwyczajnych
filtrów, przechwycona przez białą i czarną listę (whitelist i blacklist).
Następnie zostanie przeskanowana po raz kolejny przez filtry, tym razem
antywirusowe, aby na końcu została przeskanowana przy użyciu programu
SpamAssassin.
</p>

<p>
Amavisd-new sam w sobie posiada kilka dodatkowych funkcji:
</p>

<ul>
  <li>
    Rozpoznaje niebezpieczne załączniki oraz wie jak sobie z nimi radzić
  </li>
  <li>Zasady dla użytkownika, dla domeny, dla całego systemu:
  <ul>
    <li>Białe listy (whitelists)</li>
    <li>Czarne listy (blacklists)</li>
    <li>Progi punktowe spamu</li>
    <li>Polityka antywirusowa i antyspamowa</li>
  </ul>
  </li>
</ul>

<p>
Wyłączając <c>postfix</c> i <c>freshclam</c> wszystkie pozostałe aplikacje będą
uruchamiane z użytkownika <c>amavis</c>.
</p>

<!--
<pre caption="/etc/passwd">
amavis:x:1010:413:added by portage for amavisd-new:/var/amavis:/bin/bash
</pre>
-->

<!--
<p>
Należy stworzyć nowy katalog domowy i ustawić poprawne zezwolenia.
</p>

<pre caption="Należy stworzyć nowy katalog domowy i ustawić odpowiednie
zezwolenia">
# <i>mkdir /var/amavis</i>
# <i>chown amavis:amavis /var/amavis</i>
# <i>chmod 750 /var/amavis</i>
</pre>
-->

<p>
Należy wedytować następujące linie w pliku <path>/etc/amavisd.conf</path>
</p>

<pre caption="Edycja /etc/amavisd.conf">
<comment>(Należy umieścić domeny które mają być skanowane)</comment>
$mydomain = 'example.com';
<comment>(Przywiązanie jedynie do interfejsu loopback)</comment>
$inet_socket_bind = '127.0.0.1';
<comment>(Przekazanie na port 10025 do programu Postifx)</comment>
$forward_method = 'smtp:127.0.0.1:10025';
$notify_method = $forward_method;
<comment>(Należy zdefiniować adres elektroniczny na, który wysłane będą wiadomości alarmowe)</comment>
$virus_admin = "virusalert\@$mydomain";
<comment>(Zawsze należy dodać nagłówek spamu)</comment>
$sa_tag_level_deflt  = -100;
<comment>(Dodajemy nagłówek wykrywający spam aka X-Spam-Status: Yes)</comment>
$sa_tag2_level_deflt = 5;
<comment>(Inicjacja akcji wymijającej na tym poziomie spamu)</comment>
$sa_kill_level_deflt = $sa_tag2_level_deflt;
<comment>(Nie należy wysyłać status wiadomości do wysyłającego.
Takie działanie nie ma wpływu na dostarczanie spamu do odbiorcy. Aby to
zrobić nalezy użyć zmiennej kill_level)</comment>
$sa_dsn_cutoff_level = 10;
<comment>Nie należy odbijać wiadomości z lewej na prawo, zamiast tego po prostu poddajmy je kwarantannie</comment>
$final_virus_destiny      = D_DISCARD;  # (defaults to D_DISCARD)
$final_banned_destiny     = D_DISCARD;  # (defaults to D_BOUNCE)
$final_spam_destiny       = D_DISCARD;  # (defaults to D_BOUNCE)
</pre>

<note>
Za pomocą linii <c>$sa_tag2_level_deflt = 5;</c> ustawiamy wynik spamu w
programie SpamAssasin na 7. Może się on okazać jednak za niski, ponieważ jak już
mogliśmy zauważyć domyślnym wynikiem w Amavisd-new jest <c>6.3</c>. Jeśli nie
chcemy widzieć w skrzynce pojedynczych wiadomości ze spamem należy wybrać
wartość <c>5</c>, jednak jeśli nie chcemy mieć do czynienia z fałszywym spamem
należy wpisać wartość <c>6.3</c>.
</note>

<p>
Należy stworzyć katalog na kwarantanny dla pocztę elektroniczną zarażoną
wirusami, gdyż nie chcemy, aby takie wiadomości docierały do naszych
użytkowników.
</p>

<pre caption="Tworzymy katalog na kwarantannę dla zainfekowanej poczty elektronicznej">
# <i>mkdir /var/amavis/virusmails</i>
# <i>chown amavis:amavis /var/amavis/virusmails</i>
# <i>chmod 750 /var/amavis/virusmails</i>
</pre>

<note>
Dzięki użyciu banku polityk, Amavisd-new oferuje szersze możliwości ich
dostosowywania.
</note>

</body>
</section>
<section>
<title>Konfiguracja ClamAV</title>
<body>

<p>
Jako skanera antywirusowego użyjemy programu ClamAV. Posiada on duże możliwości
wykrywania wirusów, porównywalne z produktami komercyjnymi, jest bardzo szybki i
dodatkowo jest oprogramowaniem typu Open Source. Kochamy pliki log, dlatego też
sprawimy, iż <c>clamd</c> będzie logował zdarzenia przy użyciu <c>syslog</c>
oraz włączymy szczegółowe logowanie. Nie należy uruchamiać <c>clamd</c> jako
<c>root</c>. Edycja pliku <path>/etc/clamd.conf</path>.
</p>

<pre caption="Edycja /etc/clamd.conf">
<comment>(Szczegółowe logowanie przy użyciu syslog)</comment>
LogSyslog
LogVerbose
LogFacility LOG_MAIL
<comment>(Zmiana lokalizacji pliku pid)</comment>
PidFile /var/run/amavis/clamd.pid
<comment>(Ustawiamy gniazdo programu clamav)</comment>
LocalSocket /var/amavis/clamd
<comment>(Zamykamy połączenie kiedy przekroczony zostanie limit)</comment>
StreamMaxLength 10M
<comment>(Nie należy uruchamiać clamd jako root)</comment>
User amavis
<comment>(Dla nowszych wersji programu należy odkomentować poniższe linie)</comment>
ScanMail
ScanArchive
</pre>

<note>
Należy również pamiętać, aby usunąć przykładowe wpisy, w przeciwnym wypadku
ClamAV może nie działać poprawnie.
</note>

<p>
ClamAV dostarczany jest z demonem <c>freshclam</c> przeznaczonym do okresowego
sprawdzania aktualizacji sygnatur wirusów. Zamiast aktualizować sygnatury
wirusów dwa razy na dzień, ustawimy demona <c>freshclam</c>, aby robił to co
dwie godziny.
</p>

<pre caption="Edycja /etc/freshclam.conf">
<comment>(Logowanie Syslog)</comment>
LogSyslog
<comment>(Logowanie szczegółowe)</comment>
LogVerbose
<comment>(Wyraźne odrzucenie uprawnień super użytkownika)</comment>
DatabaseOwner clamav
<comment>(Sprawdzanie aktualizacji co dwie godziny. Jest to oficjalnie zalecane działanie)</comment>
Checks 12
<comment>(Należy używać serwera lustrzanego najbliżej miejsca, w którym się
znajdujemy. Robimy to poprzez zastąpienie liter XY kodem kraju.)</comment>
DatabaseMirror db.XY.clamav.net
</pre>

<p>
Należy uruchomić <c>clamd</c> razem z <c>freshclam</c> używając skryptów
inicjujących poprzez modyfikację pliku <path>/etc/conf.d/clamd</path>.
</p>

<pre caption="Modyfikacja /etc/conf.d/clamd">
START_CLAMD=yes
FRESHCLAM_OPTS="-d"
</pre>

<p>
Na koniec należy zmodyfikować plik <path>amavisd.conf</path>, dodając nową
lokację gniazda.
</p>

<pre caption="Modyfikacja /etc/amavisd.conf">
<comment>(Należy odkomentować skaner clamav oraz podać właściwą lokację gniazda)</comment>
['ClamAV-clamd',
\&amp;ask_daemon, ["CONTSCAN {}\n", "/var/amavis/clamd"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
</pre>

<warn>
Nie należy zmieniać linijki <c>$unix_socketname</c> jeżeli nie wiemy do czego
się odnosi ta zmienna.
</warn>

</body>
</section>
<section>
<title>Konfiguracja programu Vipul Razor</title>
<body>

<p>
Razor2 jest łatwą w obsłudze rozdzieloną siecią do sprawdzania sumy kontrolnej
spamu. Instalujemy go przy pomocy polecenia <c>emerge razor</c>. Należy utworzyć
również potrzebne pliki konfiguracyjne. Wykonujemy to jako użytkownik
<c>amavis</c>, uruchamiając polecenie <c>su - amavis</c>, a następnie
<c>razor-admin-create</c>.
</p>

<pre caption="Tworzenie potrzebnych plików konfiguracyjnych">
# <i>emerge razor</i>

<comment>(Należy na określony czas ustawić powłokę dla programu amavis na bash)</comment>
# <i>usermod -s /bin/bash amavis</i>
# <i>su - amavis</i>
$ <i>razor-admin -create</i>
$ <i>exit</i>

<comment>(Resetujemy powłokę do /bin/false)</comment>
# <i>usermod -s /bin/false amavis</i>
</pre>

</body>
</section>
<section>
<title>Konfiguracja dcc (Distributed Checksum Clearinghouse)</title>
<body>

<p>
Tak samo jak Razor2, dcc jest łatwą w obsłudze rozdzielną siecią do sprawdzania
sumy kontrolnej spamu. Jego filozofią jest liczenie liczby odbiorców danej
wiadomości elektronicznej identyfikując każdą z tych wiadomości przy pomocy
rozmytej sumy kontrolnej.
</p>

<pre caption="Instalacja DCC">
# <i>emerge dcc</i>
</pre>

</body>
</section>
<section>
<title>Konfiguracja Spamassasin</title>
<body>

<p>
Amavis używa bezpośrednio bibliotek perl programu Spamassassin, więc nie ma
potrzeby, aby uruchamiać ten serwis. Przez takie zachowanie programu amavis
tworzy się małe zamieszanie, związane z konfiguracją. Cześć opcji aplikacji
Spamassassin można ustawić w pliku <path>/etc/mail/spamassassin/local.cf</path>,
które są nadpisywane przez opcje z pliku <path>/etc/amavisd.conf</path>.
</p>

<pre caption="Tworzenie pliku /etc/mail/spamassassin/local.cf">
<comment># Uaktywnienie systemu Bayesa</comment>
use_bayes               1

<comment># Uaktywnienie wszystkich sieci sprawdzających</comment>
skip_rbl_checks         0

<comment># Wiadomości napisane w językach, których kody znajdują się poniżej,
nie będą zaznaczane jako prawdopodobny spam w obcym języku.
# - polski angielski norweski szwedzki</comment>
ok_languages            pl en no sv

<comment># Wiadomości używające lokali, które podane są poniżej nie będą
zaznaczane jako spam w obcym języku.</comment>
ok_locales              en

<comment># Należy użyć odpowiedniej ścieżki do filtru bayesa.</comment>
bayes_path              /var/amavis/.spamassassin/bayes
</pre>

<note>
Od wersji 3.1 spamassassin, aby uruchomić DCC i Razor2, należy odkomentować
odpowiednie linie w pliku <path>v310.pre</path>.
</note>

<note>
Inspiracji do pisania naszego pliku <c>local.cf</c> możemy szukać w publikacji
<uri link="http://www.yrex.com/spam/spamconfig.php">SpamAssassin Configuration
Generator</uri>.
</note>

<note>
Możemy zmieniać bez przeszkód zmienne <c>ok_languages</c> i <c>ok_locales</c>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Każda dobra reguła ma także dobre wyjątki</title>
<section>
<body>

<p>
Kiedy już wiadomości zaczną przepływać przez naszą bramkę pocztową,
prawdopodobnie zauważymy, że powyższe ustawienia nie są idealne. Zapewne
niektórzy z naszych klientów będą chcieli otrzymywać wiadomości, które innej
uznają za spam. Możemy łatwo dodać ukrytych nadawców do białej lub czarnej listy
(whitelist or blacklist). Wystarczy odkomentować poniższą linię w pliku
<path>amavisd.conf</path>.
</p>

<pre caption="Modyfikacja pliku amavisd.conf, aby używał punktowania typu sitewide">
read_hash("/var/amavis/sender_scores_sitewide"),
</pre>

<p>
W pliku <path>sender_scores_sitewide</path> należy umieścić adres poczty
elektronicznej lub tylko część domeny wraz z wartością dodatnią/ujemną, która
będzie dodawana do wartości spamu.
</p>

<pre caption="Przykładowy plik whitelist_sender">
<comment>(Biała lista z określonym adresem poczty elektronicznej.)</comment>
postmaster@example.net                -3.0
<comment>(Biała lista ze wszystkimi wiadomościami z domeny example.net wyłączając poddomeny.)</comment>
.example.net                          1.0
</pre>

<note>
W pliku <path>/etc/amavisd.conf</path> znajduje się więcej przykładów.
</note>

<note>
Wpisywanie tych adresów poza plik <path>amavisd.conf</path> jest rozwiązaniem
lepszym i bezpieczniejszym.
</note>

<note>
Alternatywnie można to zrobić w pliku konfiguracyjnym programu Spamassassin
<path>/etc/mail/spamassassin/local.cf</path>, jednak lepszym rozwiązaniem jest
robienie tego w pliku <path>/etc/amavisd.conf</path>.
</note>

<note>
W następnych rozdziałach zostanie przedstawiona polityka użytkowników dotycząca
MySQL.
</note>

<p>
Oczekując na lepszą metodę możemy dodać adresy poczty elektronicznej do pliku
<path>amavisd.conf</path> tak, aby obejść filtry antyspamowe dla skrzynek
pocztowych użytkowników <c>postmaster</c> oraz <c>abuse</c>.
</p>

<pre caption="Obchodzenie filtrów antyspamowych dla poczty elektronicznej
skierowanej do abuse i postamster">
map { $bypass_spam_checks{lc($_)}=1 } (qw(
        postmaster@
        abuse@
));
</pre>

<impo>
<e>Nigdy</e> nie należy ignorować poczty elektronicznej, która dociera na konta
<c>postmaster</c> lub <c>abuse</c>. Więcej informacji w dokumencie <uri
link="http://www.ietf.org/rfc/rfc2142.txt">RFC 2142 MAILBOX NAMES FOR COMMON
SERVICES, ROLES AND FUNCTIONS</uri>. W przeciwnym razie domeny mogą zostać
dopisane do listy mieszczącej się na stronie <uri
link="http://www.rfc-ignorant.org/">rfc-ignorant.org</uri>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Dodawanie kolejnych reguł</title>
<section>
<body>

<p>
Można dodać więcej regułek, które dostarczane są przez SARE Ninjas poprzez <uri
link="http://www.rulesemporium.com/">SpamAssassin Rules Emporium</uri>. Można je
łatwo dodać i zaktualizować używając polecenia
<c>mail-filter/spamassassin-ruledujour</c>:
</p>

<pre caption="Instalacja rulesdujour">
# <i>emerge "mail-filter/spamassassin-ruledujour"</i>
</pre>

<p>
Należy wyedytować plik <path>/etc/rulesdujour/config</path>, aby zrestartować
Amavisd-new:
</p>

<pre caption="Modyfikacja /etc/rulesdujour/config">
(<comment>Restartujemy amavisd-new zamiast spamd</comment>)
SA_RESTART="/etc/init.d/amavisd restart"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Testowanie i ostatnie poprawki</title>
<section>
<title>Testowanie ustawień</title>
<body>

<p>
Przed uruchomieniem <c>freshclam</c> można ręcznie zweryfikować poprawność
działania.
</p>

<pre caption="Testowanie freshclam">
# <i>freshclam</i>
ClamAV update process started at Sun May  2 09:13:41 2004
Reading CVD header (main.cvd): OK
Downloading main.cvd [*]
main.cvd updated (version: 22, sigs: 20229, f-level: 1, builder: tkojm)
Reading CVD header (daily.cvd): OK
Downloading daily.cvd [*]
daily.cvd updated (version: 298, sigs: 1141, f-level: 2, builder: diego)
Database updated (21370 signatures) from database.clamav.net (193.1.219.100).
</pre>

<p>
Zaktualizowaliśmy już definicje wirusów i przekonaliśmy się, że plik
<path>freshclam.conf</path> działa prawidłowo.
</p>

<p>
Należy przetestować freshclam oraz amavisd pocztą testową od cli i amavisd.
Należy uruchomić programy <c>clamd</c> oraz <c>amavis</c> wpisując poniższe
polecenia:
</p>

<pre caption="Uruchomienie amavisd i clamd oraz przeładowanie aplikacji postfix">
# <i>/etc/init.d/clamd start</i>
# <i>/etc/init.d/amavisd start</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Jeżeli wszystko pójdzie dobrze postfix powinien od tej chwili nasłuchiwać
nadchodzącej poczty na porcie 25 i ponownie przesłanej do niego samego na porcie
10024. Aby to zweryfikować powinniśmy sprawdzić pliki log.
</p>

<pre caption="Sprawdzanie plików log">
# <i>tail -f /var/log/mail.log</i>
</pre>

<note>
Zależnie od ustawień logów poprawną ścieżką do nich może być
<path>/var/log/messages</path>.
</note>

<p>
Jeżeli nie pojawiają się żadne dziwne wiadomości w plikach log pora na kolejny
test.
</p>

<p>
Należy użyć <c>netcat</c>, aby ręcznie połączyć się do <c>amavisd</c>, który
nasłuchuje na porcie 10024 oraz do <c>postfix</c>, który nasłuchuje na porcie
10025.
</p>

<note>
Programu Netcat możemy używać jak zaawansowanego zamiennika programu
<c>telnet</c>. Instalujemy go przy pomocy polecenia <c>emerge netcat</c>.
</note>

<note>
Z pewnych nie do końca jasnych powodów nie można ręcznie połączyć się do
<c>amavisd</c> przy pomocy programu netcat. Zamiast tego powinniśmy użyć
programu <c>telnet</c>.
</note>

<pre caption="Sprawdzanie ręcznie czy amavisd i postfix nasłuchują na
nowych portach">
# <i>nc localhost 10024</i>
<comment>(Amavis się uruchamia)</comment>
220 [127.0.0.1] ESMTP amavisd-new service ready
<i>nc localhost 10025</i>
<comment>(Ponowne przyjmowanie Postfixa działa poprawnie)</comment>
220 example.com ESMTP Postfix
</pre>

<note>
Jeśli chcemy zobaczyć pełną informację z procesu uruchamiania programu
amavisd-new należy wykonać polecenie <c>amavisd debug-sa</c> jako użytkownik
<c>amavis</c> oraz wysłać jakąkolwiek wiadomość elektroniczną. Aby to
zadziałało najprawdopodobniej należało będzie zmienić domyślną powłokę w pliku
<path>/etc/passwd</path>.
</note>

<p>
Dodajemy <c>amavisd</c> i <c>clamd</c> do domyślnego poziomu uruchomieniowego.
</p>

<pre caption="Dodawanie amavisd i clamd do domyślnego poziomu
uruchomieniowego">
# <i>rc-update add clamd default</i>
# <i>rc-update add amavisd default</i>
</pre>

<note>
Nie należy dodawać <c>spamd</c> do domyślnego poziomu uruchomieniowego ponieważ
<c>amavisd</c> używam bibliotek Perl programu Spamassassin bezpośrednio.
</note>

<note>
W pliku log możemy zauważyć linie typu <c>Net::Server: Couldn't POSIX::setuid to
...  []</c> Zgodnie z <uri
link="http://www.ijs.si/software/amavisd/README.chroot">amavis chroot
README</uri> jeśli UID procesu równy jest 0 (<c>root</c>) taki program zostanie
automatycznie wyłączony. W przeciwnym wypadku możesz potraktować tą wiadomość
jako czysto informacyjną. Dzieje się tak dlatego, że <c>POSIX:setuip()</c>
zwraca komunikat <c>0 but true</c>.
</note>

<impo>
Jeśli umożliwimy logowanie dla programu amavis należy pamiętać, aby z powrotem
ustawić domyślną powłokę w <path>/etc/passwd</path> na <c>/bin/false</c>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Automatyczna nauka i filtrowanie poczty</title>
<section>
<title>Tworzenie użytkownika spamtrap</title>
<body>

<p>
Należy utworzyć konto spamtrap oraz wszystkie katalogi z nim związane.
</p>

<pre caption="Tworzymy konto spamtrap">
# <i>useradd -m spamtrap</i>
# <i>maildirmake /home/spamtrap/.maildir</i>
# <i>chown -R spamtrap:mailusers /home/spamtrap/.maildir</i>
<comment>(Należy ustawić odpowiednie hasło dla użytkownika spamtrap)</comment>
# <i>passwd spamtrap</i>
</pre>

<p>
Jeśli chcemy ręcznie sprawdzić niektóre z wiadomości elektronicznych, aby
upewnić się czy nie posiadamy fałszywego spamu należy użyć skryptu
<c>procmail</c> do ograniczenia niechcianego spamu w folderach pocztowych.
</p>

</body>
</section>
<section>
<title>Tworzenie skryptu .procmailrc</title>
<body>

<pre caption="Creating /home/spamtrap/.procmailrc">
<comment>#Ustawiamy kilka domyślnych zmiennych</comment>
MAILDIR=$HOME/.maildir

SPAM_FOLDER=$MAILDIR/.spam-found/

LIKELY_SPAM_FOLDER=$MAILDIR/.likely-spam-found/

<comment>#Wiadomości z wynikiem spamu ("spamscore") powyżej 7 przenoś do folderu ze spamem</comment>
:0:
* ^X-Spam-Status: Yes
* ^X-Spam-Level: \*\*\*\*\*\*\*
$SPAM_FOLDER

<comment>#Wiadomości z wynikiem spamu ("spamscore") pomiędzy 5 a 7 przenosimy do folderu z prawdopodobnym spamem</comment>
:0:
* ^X-Spam-Status: Yes
$LIKELY_SPAM_FOLDER

<comment>#Pozostałe wiadomości przenosimy do skrzynki odbiorczej</comment>
:0
*
./
</pre>

<warn>
Jeśli spodziewamy się, że serwer będzie odbierał znaczące ilości wiadomości
elektronicznych, nie należy używać makr "likely-spam". W zamian można ustawić
odpowiednio wysoką wartość zmiennej <c>$sa_tag2_level_default</c>, aby uniknąć
fałszywego spamu i przenosić od razu właściwy bezpośrednio do folderu
<c>$SPAM_FOLDER</c>.
</warn>

<note>
Jeśli nie mamy jeszcze zainstalowanego <c>procmail</c> należy to zrobić przy
pomocy polecenia <c>emerge procmail</c>.
</note>

<p>
Teraz należy upewnić się czy Postfix używa <c>procmail</c> do dostarczania
poczty.
</p>

<pre caption="Modyfikacja pliku /etc/postfix/main.cf">
mailbox_command = /usr/bin/procmail -a "DOMAIN"
</pre>

</body>
</section>
<section>
<title>Tworzenie folderów pocztowych</title>
<body>

<p>
Powinniśmy teraz utworzyć współdzielony folder dla wiadomości typu ham oraz
spam.
</p>

<pre caption="Tworzenie niezbędnych folderów pocztowych">
# <i>maildirmake /var/amavis/.maildir</i>
# <i>maildirmake -S /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f spam /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f ham /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f redeliver /var/amavis/.maildir/Bayes</i>
</pre>

<p>
Program Amavisd-new musi mieć takie same uprawnienia do czytania powyższych
plików jak użytkownicy poczty. Dlatego też należy dodać wszystkich odpowiednich
użytkowników do grupy mailuser, razem z użytkownikiem amavis.
</p>

<pre caption="Ustawianie właściwych zezwoleń">
# <i>groupadd mailusers</i>
# <i>usermod -G mailusers spamtrap</i>
# <i>chown -R amavis:mailusers /var/amavis/.maildir/</i>
# <i>chown amavis:mailusers /var/amavis/</i>
# <i>chmod -R 1733 /var/amavis/.maildir/Bayes/</i>
# <i>chmod g+rx /var/amavis/.maildir/</i>
# <i>chmod g+rx /var/amavis/.maildir/Bayes/</i>
</pre>

<warn>
Powyższe polecenia spowodują, że członkowie grupy <c>mailusers</c> posiądą
dostęp do wiadomości elektronicznych użytkownika <c>amavis</c>.
</warn>

<p>
Sprawią one, że folder na pocztę typu "spam" i "ham" będzie posiadał zezwolenia
do zapisywania w nim, ale nie odczytywania. W ten sposób użytkownicy w łatwy
sposób mogą składować swoją pocztę typu ham bez obaw, iż ktoś inny będzie mógł
ją odczytywać.
</p>

<p>
Należy uruchomić następującą komendę jako użytkownik <c>spamtrap</c>:
</p>

<pre caption="Dodawanie współdzielonych folderów do folderów pocztowych
użytkowników">
$ <i>maildirmake --add Bayes=/var/amavis/.maildir/Bayes $HOME/.maildir</i>
</pre>

<note>
Należy przydzielić grupie zezwolenia do czytania folderu <path>Bayes</path> co
pozwoli widzieć katalogi używane przez IMAP.
</note>

</body>
</section>
<section>
<title>Dodawanie zadań do crona</title>
<body>

<p>
Należy uruchomić polecenia <c>crontab -u amavis -e</c>, aby wyedytować crontaba
programu amavis powodując uruchomienie automatycznej nauki filtru Bayesa co
godzinę.
</p>

<pre caption="amavis crontab">
<comment>#Automatyczna nauka</comment>
0 * * * *          /usr/bin/sa-learn --spam /var/amavis/.maildir/Bayes/.spam/{cur,new} \
                    > /dev/null 2>&amp;1
0 * * * *          /usr/bin/sa-learn --ham /var/amavis/.maildir/Bayes/.ham/{cur,new} > \
                   /dev/null 2>&amp;1
</pre>

<note>
Użytkownik <c>amavis</c> powinien być członkiem grupy <c>cron</c>, aby
uruchamiać programy przy pomocy crona.
</note>

<note>
Wygląda na to, że współdzielone katalog i z pocztą powodują dwukrotne
egzaminowanie <c>sa-learn</c>. Nie powinno to być problemem. Wynik pokaże także,
że co najmniej połowa z przeegzaminowanych wiadomości została używa do nauki.
</note>

</body>
</section>
<section>
<title>Modyfikacja pliku amavisd.conf</title>
<body>

<p>
Teraz należy zmodyfikować amavis w taki sposób, aby przekierowywał wiadomości
elektroniczne oznaczone jako spam do konta <c>spamtrap</c> oraz zatrzymywał
nagłówki spamu.
</p>

<pre caption="Modyfikacja pliku /etc/amavisd.conf">
<comment>(Wybór konta, na które ma być przekierowywana poczta z wirusami i spamem)</comment>
$spam_quarantine_to = "spamtrap\@$myhostname";
</pre>

</body>
</section>
<section>
<title>Redystrybucja fałszywego spamu</title>
<body>

<p>
Jeśli ustawimy wynik spamu zbyt nisko prawdopodobnie będziemy otrzymywać
fałszywy spam. Będzie on przechowywany w folderze <path>likely-spam</path>.
Wiadomości są ręcznie przeglądane i każdy fałszywy spam zostaje przeniesiony
do folderu pocztowego <path>redeliver</path>. Stamtąd jest przekierowywany
najpierw do <c>sa-learn --ham</c>, a następnie ze wszystkimi nagłówkami wysyłany
do <uri link="http://www.engelschall.com/sw/smtpclient/">smtpclient</uri> Ralfa
S. Engelschalla.
</p>

<p>
Oryginalna wersja 1.0.0 programu <c>smtpclient</c> znajduje się w Portage.
Jednak, aby wszystkie nagłówki pozostały nienaruszone należy użyć zmodyfikowanej
wersji. Poniżej opisano w jaki sposób należy zainstalować zmodyfikowaną wersję:
</p>

<pre caption="Instalacja zmodyfikowanej wersji smtpclient">
<comment>(Należy przełączyć portage do naszego OVERLAY</comment>
# <i>wget http://home.coming.dk/files/smtpclient.tar.gz</i>
# <i>tar xzf smtpclient.tar.gz</i>
# <i>echo "mail-client/smtpclient    ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>echo "mail-client/smtpclient    fullheaders" &gt;&gt; /etc/portage/package.use</i>
# <i>emerge smtpclient</i>
</pre>

<p>
Przy pomocy crona należy sprawdzać co minutę czy w folderze
<path>redeliver</path> znajdują się wiadomości.
</p>

<pre caption="amavis crontab">
<comment>#Redystrybucja fałszywego spamu</comment>
* * * * *          find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f -name \
                   "[0-9]*" -exec cp {} /var/amavis/.maildir/Bayes/.ham/cur/ \; \
                   &amp;&amp; find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f \
                   -name "[0-9]*" -exec /usr/local/bin/redeliver.pl {} \;
</pre>

<p>
Należy przekopiować plik <c>redeliver.pl</c>do katalogu
<path>/usr/local/bin/</path>. Można go <uri
link="http://home.coming.dk/files/redeliver.pl">ściągnąć</uri> lub użyć
poniższego przykładu.
</p>

<pre caption="redeliver.pl">
<comment>#!/usr/bin/perl -w

# Redelivers mail using a modified version of smtpclient
# By: Jens Hilligsoe &lt;gentoo@hilli.dk&gt;</comment>

use strict;

if(!($#ARGV == 0)) {
        die "Usage:\n$0 maildir_mail\n";
}

my $mail = $ARGV[0];
my $to = "";
my $from = "";

sub prunefile ( $ );

<comment># Odzyskiwanie powłoki To i From adresów</comment>
open (MAIL, $mail) or die "Could not open $mail: $?\n";
while(&lt;MAIL&gt;) {
    if(($to eq "") || ($from eq "")) {
        chop;
        (my $key, my $value) = split (/:/);
        if($key eq "X-Envelope-To") {
            $to = $value;
            $to =~ s/[\&lt;\&gt;,]//g; # Należy usunąć "&lt;", "&gt;" and ","
            $to =~ s/^\s+|\s+$//g; # Należy usunąć whitespace przed i po
        }
        if($key eq "X-Envelope-From") {
            $from = $value;
            $from =~ s/[\&lt;\&gt;,]//g;
            $from =~ s/^\s+|\s+$//g;
            if($from eq "") {
                $from = "postmaster";
            }
        }
    }
}

if($to eq "") {
    prunefile($ARGV[0]); # Just nuke it if to is empty
} else {
    my $redelivercmd = "cat $ARGV[0] | smtpclient -F -S 127.0.0.1 -P 10025 -f $from $to";
    unless (system($redelivercmd) == 0 ) {
        die "Unable to redeliver: $?";
    }
    prunefile($ARGV[0]); # Clean up
}

sub prunefile ( $ ) {
    my ($file) = @_;
    unless (unlink $file) {
        die "Unable to remove mail: $?";
    }
}
</pre>

</body>
</section>
<section>
<title>Sprzątanie</title>
<body>

<p>
Należy uruchamiać regularnie czyszczenie wiadomości programem <c>tmpwatch</c>.
Instalujemy go przy pomocy emerge i polecenia <c>emerge tmpwatch</c>. Jedynie
użytkownik <c>root</c> jest w stanie uruchomić <c>tmpwatch</c>, dlatego też
trzeba zmodyfikować crontaba dla tego użytkownika.
</p>

<pre caption="Modifying root crontab">
<comment># Sprzątanie
# Utrzymywanie wiadomości elektronicznych zarażonych wirusami przez tydzień (24
# * 7)</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/virusmails/
<comment># Kasowanie "uczących" wiadomości typu ham i spam po tygodniu</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/.maildir/Bayes/
</pre>

</body>
</section>
</chapter>

<!--
<chapter>
<title>Analizatory logów</title>
<section>
<title>Ogólne statystyki programu Postfix</title>
<body>

<p>
Jeśli już posiadamy serwer pocztowy dobrze by było móc go monitorować.
Zainstalujemy dwa małe skrypty Perl, które będą wysyłać wiadomość z dziennym
podsumowaniem dotyczącym poczty elektronicznej oraz statystyki spamu.
Najpierw należy ściągnąć i zainstalować <c>pflogsumm</c>:
</p>

<pre caption="Ściąganie i instalacja pflogsumm">
# <i>wget http://jimsun.linxnet.com/downloads/pflogsumm-1.1.0.tar.gz</i>
# <i>tar xzf pflogsumm-1.1.0.tar.gz</i>
# <i>cp pflogsumm-1.1.0/pflogsumm.pl /usr/local/bin/</i>
</pre>
</body>
</section>
<section>
<title>Statystyki spamu w programie Postfix</title>
<body>

<p>
Następnie należy ściągnąć i zainstalować skrypt, który będzie generował dzienne
statystyki dotyczące wykrytego spamu:
</p>

<pre caption="Ściąganie i instalacja spamreport">
# <i>wget http://www.flakshack.com/anti-spam/nosack-spamreport.pl</i>
# <i>mv nosack-spamreport.pl /usr/local/bin/</i>
# <i>chmod +x /usr/local/bin/nosack-spamreport.pl</i>
</pre>
<p>
Aby otrzymywać codziennie wiadomość elektroniczną od każdego ze skryptów należy
dodać dwa wpisy do crontabana konta <c>root</c>:
</p>
<pre caption="Dodawanie skryptów do crontaba">
15 0 * * *      /usr/local/bin/pflogsumm.pl -d yesterday \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily mail stats" postmaster
10 0 * * *      /usr/local/bin/nosack-spamreport.pl \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily spam stats" postmaster
</pre>

<note>
W pewnym okolicznościach można wykonać polecenia <c>emerge Date-Calc</c> i
<c>emerge mailx</c>. Jako alternatywy można używać <c>mail</c> instalowanego
przy wydaniu polecenia <c>emerge mailutils</c>.
</note>

<note>
Jeśli logi nadpisywane są każdego tygodnia musimy upewnić się, iż skrypty są
uruchamiane przed nadpisywaniem.
</note>

<note>
Aktualnie badamy inny analizator logów programu amavis, <uri
link="http://homepages.hs-bremen.de/~renegat/amavislogsumm">amavislogsumm</uri>
</note>
</body>
</section>
</chapter>
-->

<chapter>
<title>Greylisting</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
Greylisting jest jedną z najnowszych metod walki ze spamem. Jak sama nazwa
wskazuje, jest czymś więcej niż whitelistingiem i blacklistingiem. Za każdy
razem kiedy nieznany serwer poczty próbuje dostarczyć wiadomość, ta wiadomość
jest odrzucana z komunikatem <e>spróbuj ponownie później ("try again
later")</e>. Oznacza to, iż wiadomość zostanie dostarczona z opóźnieniem, jednak
roboty spamerskie, które nie mają zaimplementowanego protokołu RFC odrzucą próbę
dostarczenia spamu i nie będą tego nigdy powtarzały. Z biegiem czasu roboty
zapewne przystosują się, jednak zanim to nastąpi inne technologię będą miały
zapewniony czas, aby udoskonalić swoje metody identyfikacji spamu.
</p>

<note>
Jeśli ISP blokuje przychodzący ruch na porcie 25 i przekazuje pocztę przez ich
serwer pocztowych wyżej opisana metoda nie będzie prawidłowo działała.
</note>

<p>
Postfix 2.1 dostarczany jest z prostym, napisanym w Perlu serwerem greylistingu,
który implementuje taki schemat. Jednak w sytuacji kiedy zabraknie miejsca na
partycji, na której znajduje się baza danych greylistingu, serwer ten sprawia
nieprzewidziane problemy. Istnieje udoskonalona wersja, która nie cierpi już na
ten problem. Wpierw pokażemy jak zainstalować wbudowane wsparcie dla metody
greylisting, następnie skonfigurujemy silniejszego zastępcę.
</p>

<note>
Istnieją inne serwery greylistingu dla środowiska programu Postfix (np. <uri
link="http://www.gasmi.net/gld.html">Gld</uri>, który znajduje się w Portage
oraz <uri link="http://sqlgrey.sourceforge.net/">SQLgrey</uri>). Cześć z nich
współpracuje z bazami danych, auto whitelistingiem i posiada kilka dodatkowych
możliwości.
</note>

</body>
</section>
<section>
<title>Prosty greylisting</title>
<body>

<note>
Jeśli chcemy używać ulepszonego greylistingu wraz z serwerem postgrey możemy
bez obaw ominąć ten rozdział.
</note>

<p>
Potrzebujemy pliku <path>greylist.pl</path>, jednak ebuild nie instaluje go
domyślnie.
</p>

<pre caption="Tworzenie pliku greylist.pl">
# <i>cp /usr/portage/distfiles/postfix-your-version-here.tar.gz /root/</i>
# <i>tar xzf postfix-your-version-here.tar.gz</i>
# <i>cp postfix-2.1.0/examples/smtpd-policy/greylist.pl /usr/bin/</i>
</pre>

<p>
Kiedy plik znajduje się już we właściwym miejscu należy utworzyć katalog, w
którym znajdzie się baza danych greylistingu:
</p>

<pre caption="Tworzenie katalogu dla bazy danych greylistingu">
# <i>mkdir /var/mta</i>
# <i>chown nobody /var/mta</i>
</pre>

<warn>
Nie należy tworzyć katalogu dla wyżej wymienionej bazy danych na partycji, na
której może zabraknąć miejsca. Mimo, iż postfix może odzyskać wiadomości
elektroniczne w takiej sytuacji, jednak nie zrobi tego w przypadku bazy danych
greylistingu. Jeśli plik zostanie uszkodzony możemy nie być zdolni do odebrania
wiadomości elektronicznej, dopóki nie skasujemy tego pliku ręcznie.
</warn>

</body>
</section>
<section>
<title>Konfiguracja greylistingu</title>
<body>

<p>
Kiedy już mamy wszystko przygotowane, pozostało nam jedynie dodać to do
konfiguracji programu postfix. Najpierw dodajemy wymagane informacje do pliku
<path>master.cf</path>:
</p>

<pre caption="Modyfikacja master.cf, aby używał greylistingu">
policy-greylist  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/greylist.pl
</pre>

<p>
Demon uruchamiający postfix'a zabija wszystkie procesy dzieci po 1000 sekund,
ale dla potrzeb graylistingu jest to zdecydowanie za krótko, dlatego też
zwiększymy ten czas w pliku <path>main.cf</path>:
</p>

<pre caption="Modyfikacja pliku main.cf, aby używał greylistingu">
policy-greylist_time_limit = 3600
<comment>(Po smtpd_recipient_restrictions należy dodać:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Następnie należy dodać:)</comment>
restriction_classes = greylist
greylist = check_policy_service unix:private/policy-greylist
</pre>

<warn>
Należy mieć pewność, że określimy zmienną <c>check_sender_access</c> po
<c>reject_unauth_destination</c>, w przeciwnym wypadku nasz system może stać się
otwartym przekaźnikiem wiadomości elektronicznych.
</warn>

<note>
Baza danych greylistingu szybko zostaje zaśmiecona fałszywymi adresami. Warto
dodać tu także inne zabezpieczenie, jak na przykład odrzucania poczty z
nieznanymi autorami lub/i adresatami.
</note>

<p>
Nie ma potrzeby używać greylistingu dla wszystkich domen, ale tylko dla tych,
które często są nadużywane przez spamerów. Mimo wszystko sprawi to, iż
wiadomości elektroniczne będą dostarczane z opóźnieniem. Listę często
zapominanych domen MAIL FROM można znaleźć w <uri
link="http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in">internecie</uri>.
Domeny, z których nadchodzi duża ilość spamu należy dodać do pliku
<path>/etc/postfix/sender_access</path>:
</p>

<pre caption="Format pliku sender_access">
aol.com     greylist
hotmail.com greylist
bigfoot.com greylist
</pre>

<p>
Jeżeli chcemy posiadać bardziej szczegółową listę:
</p>

<pre caption="Dodawanie wszystkich domen do pliku sender_access">
# <i>wget http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in</i>
# <i>cat sender-domain-validate.in | sort | awk {'print $1 "\t\t greylist"'} > /etc/postfix/sender_access</i>
</pre>

<p>
Należy zainicjować bazę danych <path>sender_access</path>:
</p>

<pre caption="Inicjalizacja sender_access">
# <i>postmap /etc/postfix/sender_access</i>
</pre>

<p>
Na tym kończy się konfiguracja prostego greylistingu.
</p>

<warn>
Powyższego sposobu wypróbowano na jednej ze skrzynek obsługującej tysiące
wiadomości elektronicznych dziennie i rezultaty były prawie całkowitą
katastrofą. Po czterech dniach skrzynkach grzęzła w setce starych procesów
<c>greylist.pl</c>.
</warn>

</body>
</section>
<section>
<title>Konfiguracja ulepszonego greylistingu zaimplementowanego w serwerze postgrey</title>
<body>

<p>
Rozszerzoną politykę gerylistingu możemy zainstalować poprzez proste wydanie
komendy <c>emerge</c>:
</p>

<pre caption="Instalacja serwera postgrey">
# <i>emerge postgrey</i>
</pre>

<p>
Po instalacji serwera <c>postgrey</c> należy wyedytować plik
<path>main.cf</path>.  Zmiany są praktycznie identyczne jak przy wbudowanym
greylistingu.
</p>

<pre caption="Modyfikacja pliku main.cf do używania greylistingu">
<comment>(Pod smtpd_recipient_restrictions należy dodać:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Później należy dodać:)</comment>
smtpd_restriction_classes = greylist
greylist = check_policy_service inet:127.0.0.1:10030
</pre>

<note>
SMTPD_POLICY_README Postifxa używa jedynie <c>restriction_classes</c>, jednak
wydaje się, iż to nie działa.
</note>

<note>
Jeśli do wszystkiego ma być stosowany greylisting należy dodać wpis
<c>check_policy_service inet:127.0.0.1:10030</c>.
</note>

<p>
Na koniec, uruchamiamy serwer i dodajmy go do odpowiedniego poziomu
uruchomieniowego.
</p>

<pre caption="Uruchamianie postgrey">
# <i>/etc/init.d/postgrey start</i>
# <i>rc-update add postgrey default</i>
</pre>

<note>
Niektórzy użytkownicy lubią otrzymywać swoje wiadomości elektroniczne szybko,
dlatego też greylisting jest bezwartościowy. Jednak jeżeli zaangażujemy do pracy
zapasowy serwer w bezpieczny sposób możemy ustawić na nim greylisting. Moje
ograniczone doświadczenie mówi mi, że może on zatrzymywać co trzecią wiadomość
będącą spamem.
</note>

</body>
</section>
</chapter>
<chapter>
<title>SPF (Sender Policy Framework)</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
SPF pozwala właścicielom domen stwierdzić, w ich wpisach DNS, które adresy IP
mogą wysyłać wiadomości elektroniczne z ich domen. Uniemożliwi to spamerom
spoofowanie <c>Return-Path</c>.
</p>

<note>
Jeśli nasz ISP blokuje przychodzący ruch na porcie 25 i przekazuje całą pocztę
elektroniczną do nas przez ich serwer, to SPF nie będzie funkcjonował
prawidłowo.
</note>

<p>
Pierwsi właściciele domen muszą posiadać specjalny wpis DNS, <c>TXT</c>.  Wtedy
MTA może przeczytać taki wpis i jeśli wiadomość pochodzi z serwera, który nie
jest wpisany do SPF, może zostać odrzucona. Przykładowy wpis może wyglądać tak:
</p>

<pre caption="Przykładowy wpis SPF">
example.com.  IN TXT  "v=spf1 a mx ptr -all"
</pre>

<p>
Wpis <c>-all</c> każe odrzucać domyślnie wszystkie wiadomości, jednak dopuszcza
wiadomości z wpisów DNS <c>A</c>(<c>a</c>), <c>MX</c>(<c>mx</c>) i
<c>PTR</c>(<c>ptr</c>). Większej ilości informacji należy szukać w dalszej
części przewodnika.
</p>

<note>
Jeśli przekazujemy wychodzącą pocztę przez naszego ISP należy dodać linijke:
<c>include:yourisp.com</c>.
</note>

<p>
Wersja 3.0 programu Spamassassin posiada wsparcie dla SPF, jednak domyślnie nie
jest ono uaktywnione. Nowy demon w programie Postfix wspiera SPF, dlatego też
zainstalujemy teraz wsparcie SPF dla Postfix.
</p>

<note>
Jeśli chcemy używać SPF razem ze Spamassassinem po prosty wydajemy polecenie
<c>emerge&nbsp;dev-perl/Mail-SPF-Query</c> i restartujemy Amavisd-new.
</note>


</body>
</section>
<section>
<title>Przygotowania</title>
<body>

<p>
Wpierw należy zainstalować Postfix 2.1 w sposób opisany powyżej. Kiedy już
źródła znajdą się na naszym dysku skopiujemy plik <path>spf.pl</path> w podany
poniżej sposób:
</p>

<pre caption="Instalacja spf.pl">
# <i>cp postfix-&lt;version&gt;/examples/smtpd-policy/spf.pl /usr/local/bin/</i>
</pre>

<note>
Plik <path>spf.pl</path> dostarczany z programem Postfix jest odrobinę dziurawy
dlatego należy znaleźć i odkomentować następujące linie: <c>push @HANDLERS,
"sender_permitted_from"; use Mail::SPF::Query;</c>. Ponadto w okolicach 199
linii należy zastąpić słowo <c>comemnt</c>, słowem <c>comment</c>.  Ewentualnie
możemy ściągnąć wersję <uri
link="http://spf.pobox.com/postfix-policyd.txt">deweloperską</uri>.
</note>

<p>
Powyższy skrypt Perl potrzebuje również kilku bibliotek Perl, których nie ma w
Portage, jednak ich instalacja nie powinna sprawić problemu:
</p>

<pre caption="Instalacja wymaganych bibliotek Perl">
# <i>emerge Mail-SPF-Query Net-CIDR-Lite Sys-Hostname-Long</i>
</pre>

<p>
Gdy mamy wszystko już na swoim miejscu należy jedynie skonfigurować Postfixa
zgodnie z nową polityką.
</p>

<pre caption="Modyfikacja master.cf, aby zapewnić wsparcie SPF">
policy-spf  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/local/bin/spf.pl
</pre>

<p>
Należy dodać sprawdzanie SPF do pliku <path>main.cf</path>. Poprawnie
skonfigurowany SPF nie powinien wyrządzić żadnej krzywdy, więc możemy sprawdzić
jego działanie dla wszystkich domen:
</p>

<pre caption="Modyfikacja main.cf, aby zapewnić wsparcie dla SPF">
<comment>(Pod smtpd_recipient_restrictions należy dodać:)</comment>
check_policy_service unix:private/policy-spf
</pre>

<note>
Jeżeli SPF sprawia problemy, np. kiedy używamy <c>fetchmail</c>, należy
uaktywnić SPF jedynie dla pewnych domen.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Konifguracja amavisd-new ze wsparciem dla MySQL</title>
<section>
<title>Konfiguracja MySQL</title>
<body>

<note>
Nie testowano tego rozwiązania na wersjach wyższych niż 2.2. Wszelkie opinie
będą mile widziane. :)
</note>

<p>
Dla dużych domen domyślne wartości można, które można ustawić w pliku
<path>amavisd.conf</path>, mogę nie pasować do wszystkich użytkowników. Jeśli
skonfigurujemy amavisd-new ze wsparcie dla MySQL-a, będzie można stosować
indywidualne ustawienia dla użytkowników i grupy użytkowników.
</p>

<pre caption="Tworzenie bazy danych i użytkownika MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database maildb;</i>
mysql> <i>GRANT INSERT,UPDATE,DELETE,SELECT ON maildb.* TO 'mail'@'localhost' IDENTIFIED BY 'very_secret_password';</i>
mysql> <i>use maildb;</i>
</pre>

<p>
Kiedy baza danych jest już utworzona należy stworzyć potrzebne tabele. Można
skopiować i wkleić poniższe polecenia do linii komend mysql:
</p>

<pre caption="Układ tabel MySQL">
CREATE TABLE users (
    id         int unsigned NOT NULL auto_increment,
    priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
    policy_id  int unsigned NOT NULL DEFAULT '1',
    email      varchar(255) NOT NULL,
    fullname   varchar(255) DEFAULT NULL,    -- not used by amavisd-new
    local      char(1),     -- Y/N  (optional field, see note further down)
    PRIMARY KEY (id),
    KEY email (email)
    );
CREATE UNIQUE INDEX users_idx_email ON users(email);

<comment>(wszelkie adresy poczty elektronicznej, zewnętrznej lub lokalnej, użyte jako nadawcy w wblist)</comment>
CREATE TABLE mailaddr (
   id         int unsigned NOT NULL auto_increment,
   priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
   email      varchar(255) NOT NULL,
   PRIMARY KEY (id),
   KEY email (email)
   );
CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email);

<comment>(-- per-recipient whitelist and/or blacklist,</comment>
<comment>(-- puts sender and recipient in relation wb)</comment>
(white or blacklisted sender)
CREATE TABLE wblist (
   rid        int unsigned NOT NULL,     -- recipient: users.id
   sid        int unsigned NOT NULL,     -- sender:    mailaddr.id
   wb         char(1) NOT NULL, -- W or Y / B or N / space=neutral
   PRIMARY KEY (rid,sid)
   );

CREATE TABLE policy (
   id               int unsigned NOT NULL auto_increment,
   policy_name      varchar(32),     -- not used by amavisd-new
   virus_lover          char(1),     -- Y/N
   spam_lover           char(1),     -- Y/N  (optional field)
   banned_files_lover   char(1),     -- Y/N  (optional field)
   bad_header_lover     char(1),     -- Y/N  (optional field)
   bypass_virus_checks  char(1),     -- Y/N
   bypass_spam_checks   char(1),     -- Y/N
   bypass_banned_checks char(1),     -- Y/N  (optional field)
   bypass_header_checks char(1),     -- Y/N (optional field)
   spam_modifies_subj   char(1),     -- Y/N (optional field)
   spam_quarantine_to   varchar(64) DEFAULT NULL, -- (optional field)
   spam_tag_level  float,  -- higher score inserts spam info headers
   spam_tag2_level float DEFAULT NULL,  -- higher score inserts
               -- 'declared spam' info header fields
   spam_kill_level float,  -- higher score activates evasive actions, e.g.
               -- reject/drop, quarantine, ...
               -- (subject to final_spam_destiny setting)
   PRIMARY KEY (id)
  );
</pre>

<note>
Jeśli mamy problem używając metody kopiuj/wklej można skopiować powyższe
polecenia w inne miejsce i oczyścić je z niepotrzebnych znaków.
</note>

<note>
Przeszukiwania próbujące dopasować email są dokonywane za pomocą adresów w
postaci czystego tekstu (rfc2821-unquoted i bez nawiasów) jako kluczy (np.
<c>John "Funny" Smith@example.com</c>.
</note>

<note>
Przeszukiwania są dokonywane w następującym porządku: <c>SQL</c>, <c>LDAP</c>,
<c>hash</c>, <c>ACL</c>, <c>regexp</c>, <c>constant</c>. Pierwsze dopasowanie
kończy proces.
</note>

<p>
Jeżeli chcemy używać whitelistingu i blacklistingu musimy dodać nadawcę i
odbiorcę do <c>mailadr</c> po czym należy stworzyć relację pomiędzy dwoma
adresami poczty elektronicznej w <c>wblist</c> i ustalić czy jest to
whitelisting (<c>W</c>) czy blacklisting (<c>B</c>).
</p>

<p>
Kiedy tabele zostaną już utworzone należy utworzyć testowego użytkownika i
przykładową politykę:
</p>

<pre caption="Tworzenie użytkownika testowego oraz przykładowej polityki">
INSERT INTO users
   SET
      id         =1,
      priority   =9,
      policy_id  =1,
      email      ="johndoe@example.com",
      fullname   ="John Doe",
      local      ="Y";

INSERT INTO policy
   SET
      id                     =1,
      policy_name            ="Test policy 1",
      virus_lover            ="N",
      spam_lover             ="N",
      banned_files_lover     ="N",
      bad_header_lover       ="N",
      bypass_virus_checks    ="N",
      bypass_spam_checks     ="N",
      bypass_banned_checks   ="N",
      bypass_header_checks   ="N",
      spam_modifies_subj     ="N",
      spam_quarantine_to     =NULL,
      spam_tag_level         =-50.0,
      spam_tag2_level        =7.0,
      spam_kill_level        =10.0;
</pre>

<note>
Należy skopiować gdzieś powyższe polecenia i dostosować je, aby pasowały do
naszego środowiska.
</note>

<note>
Pole <c>local</c> powinno być ustawione jako <c>Y</c>, w przeciwnym wypadku
wiadomości nie będą skanowane pod względem obecności spamu.
</note>

<p>
Dzięki powyższym poleceniom umieścimy w bazie danych testowego użytkownika i
przykładową politykę. Należy dopasować powyższy przykład, aby dopasować go do
własnych potrzeb. Dalsze wyjaśnienia dotyczące zmiennych konfiguracyjnych można
znaleźć w pliku <path>amavisd.path</path>.
</p>

</body>
</section>
<section>
<title>Konfiguracja amavisd ze wsparcie dla MySQL</title>
<body>

<p>
Kiedy mamy już przygotowanego MySQL-a, należy sprawić, aby amavis zaczął go
używać:
</p>

<pre caption="Modyfikacja pliku amavisd.conf">
@lookup_sql_dsn =
   ( ['DBI:mysql:maildb:host1', 'mail', 'very_secret_password']  );

<comment>(Dla jasności należy domyślnie odkomentować)</comment>
$sql_select_policy = 'SELECT *,users.id FROM users,policy'.
   ' WHERE (users.policy_id=policy.id) AND (users.email IN (%k))'.
   ' ORDER BY users.priority DESC';

   <comment>(Jeśli potrzebujemy white/blacklistingu nadawcy)</comment>
   $sql_select_white_black_list = 'SELECT wb FROM wblist,mailaddr'.
     ' WHERE (wblist.rid=?) AND (wblist.sid=mailaddr.id)'.
     '   AND (mailaddr.email IN (%k))'.
     ' ORDER BY mailaddr.priority DESC';
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Konifguracja Spamassassin ze wsparciem dla MySQL</title>
<section>
<body>

<p>
W Spamassassin 3.0 możliwe jest przechowywanie danych filtrów Bayesa i AWL w
bazie danych MySQL. Pokażemy tutaj w jaki sposób można tego łatwo dokonać.
</p>

<p>
Należy utworzyć nowego użytkownika MySQL, a następnie utworzyć potrzebne tabele.
</p>

<pre caption="Tworzenie nowej bazy danych i użytkownika MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database dbname;</i>
mysql> <i>GRANT INSERT,UPDATE,DELETE,SELECT ON dbname.* TO 'dbuser'@'localhost' IDENTIFIED BY 'another_very_secret_password';</i>
mysql> <i>use dbname;</i>
</pre>

<p>
Kiedy baza danych jest już gotowa pora na utworzenie potrzebnych tabel. Można to
zrobić poprzez skopiowanie i wklejenie poniższych poleceń do linii poleceń
mysql:
</p>
      <pre caption="Układ tabel MySQL">
      CREATE TABLE bayes_expire (
          id                    int(11)         NOT NULL default '0',
          runtime               int(11)         NOT NULL default '0',
          KEY bayes_expire_idx1 (id)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_global_vars (
          variable              varchar(30)     NOT NULL default '',
          value                 varchar(200)    NOT NULL default '',
          PRIMARY KEY           (variable)
          ) TYPE=MyISAM;

      INSERT INTO bayes_global_vars VALUES ('VERSION','3');

      CREATE TABLE bayes_seen (
          id                    int(11)         NOT NULL default '0',
          msgid                 varchar(200) binary NOT NULL default '',
          flag                  char(1)         NOT NULL default '',
          PRIMARY KEY           (id,msgid)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_token (
          id                    int(11)         NOT NULL default '0',
          token                 char(5)         NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          atime                 int(11)         NOT NULL default '0',
          PRIMARY KEY           (id, token),
          INDEX                 (id, atime)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_vars (
          id                    int(11)         NOT NULL AUTO_INCREMENT,
          username              varchar(200)    NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          token_count           int(11)         NOT NULL default '0',
          last_expire           int(11)         NOT NULL default '0',
          last_atime_delta      int(11)         NOT NULL default '0',
          last_expire_reduce    int(11)         NOT NULL default '0',
          oldest_token_age      int(11)         NOT NULL default '2147483647',
          newest_token_age      int(11)         NOT NULL default '0',
          PRIMARY KEY           (id),
          UNIQUE bayes_vars_idx1 (username)
          ) TYPE=MyISAM;

      CREATE TABLE awl (
          username              varchar(100)    NOT NULL default '',
          email                 varchar(200)    NOT NULL default '',
          ip                    varchar(10)     NOT NULL default '',
          count                 int(11)         default '0',
          totscore              float           default '0',
          PRIMARY KEY           (username,email,ip)
          ) TYPE=MyISAM;
</pre>

<impo>
Wymagana jest linia <c>INSERT</c>, w przeciwnym wypadku Spamassassin nie będzie
działał.
</impo>

<note>
Powyższe polecenia są również dostępne w źródłach w plikach
<path>awl_mysql.sql</path> i <path>bayes_mysql.sql</path>.
</note>

</body>
</section>
<section>
<title>Konfiguracja Spamassassin, ze wsparciem backend MySQL</title>
<body>

<p>
Jeśli posiadamy starą bazę danych Bayesa w bazie danych DBM i chcemy ją
zatrzymać należy kierować się poniższym instrukcjami:
</p>

<pre caption="Konwertowanie danych Bayesa z bazy danych DBM">
<i>su - amavis</i>
<i>sa-learn --sync</i>
<i>sa-learn --backup > backup.txt</i>
<i>sa-learn --restore backup.txt</i>
</pre>

<note>
Należy zauważyć, iż ostatni krok można wykonać jedynie w przypadku gdy baza
danych MySQL i plik <path>secrets.cf</path> zostaną zaktualizowane.
</note>

<p>
Należy podać programowi Spamassassin potrzebne informację:
</p>

<pre caption="Modifyikacja pliku /etc/mail/spamassassin/secrets.cf">
<comment>(Należy powiedzieć programowi Spamassassin, aby używał MySQL dla danych Bayesa</comment>
bayes_store_module              Mail::SpamAssassin::BayesStore::SQL
bayes_sql_dsn                   DBI:mysql:sa_bayes:localhost:3306
bayes_sql_username              db_name
bayes_sql_password              another_very_secret_password

<comment>(Należy powiedzieć programowi Spamassassin, aby używał MySQL dla danych AWL</comment>
auto_whitelist_factory          Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                    DBI:mysql:sa_bayes:localhost:3306
user_awl_sql_username           db_name
user_awl_sql_password           another_very_secret_password
</pre>

<p>
Następnie, ustawiamy dla bezpieczeństwa odpowiednie zezwolenia:
</p>

<pre caption="Zmiana zezwoleń">
# <i>chmod 400 /etc/mail/spamassassin/secrets.cf</i>
</pre>

<note>
Aby utworzyć bezpieczne hasło należy wykonać dwa polecenia, <c>emerge
app-admin/makepasswd</c> i <c>makepasswd -chars=8</c>.
</note>

<p>
Na koniec należy zrestartować amavisd wydając polecenie <c>/etc/init.d/amavisd
restart</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rozwiązywanie problemów</title>
<section>
<title>Amavisd-new</title>
<body>

<p>
Aby rozwiązać problemy dotyczące Amavisd-new, musimy zacząć od zatrzymania
samego programu wydając komendę <c>/etc/init.d/amavisd stop</c>, następnie
uruchamiając go w trybie debug poleceniem <c>amavisd debug</c>, obserwując
wszelkie anomalie jakie pojawią się na wyjściu.
</p>

</body>
</section>
<section>
<title>Spamassassin</title>
<body>

<p>
Aby rozwiązać problemy dotyczące programu Spamassassin można przefiltrować
wiadomość ręcznie przy jego pomocy, używając polecenia <c>spamassassin -D &lt;
mail</c>. Aby upewnić się, że nagłówki są nienaruszone możemy je przenieść z
innego komputera przy pomocy IMAP.
</p>

<note>
Jeżeli chcemy rozwiązać problem należy uaktywnić logowanie się dla użytkownika
<c>amavis</c> poprzez zmianę powłoki w pliku <path>/etc/passwd</path> ma
<path>/bin/bash</path>.
</note>

<p>
Jeżeli chcemy możemy uzyskać takie same informacje, a nawet więcej z
Amavisd-new. W tym celu należy użyć <c>amavisd debug-sa</c>.
</p>

</body>
</section>
<section>
<title>Uzyskiwanie pomocy</title>
<body>

<p>
Jeżeli potrzebujemy pomocy dobrym miejscem na szukanie jej, jest lista
mailingowa użytkowników amavis. Przed wysłaniem postu należy przeszukać <uri
link="http://marc.theaimsgroup.com/?l=amavis-user">archiwum listy mailingowej
użytkowników programu Amavis</uri>. Jeżeli nie znajdziemy odpowiedzi na nasze
pytanie, w tym miejscu możemy zapisać się na <uri
link="https://lists.sourceforge.net/lists/listinfo/amavis-user">listę mailingową
użytkowników programu Amavis</uri>
</p>

<p>
Jeżeli nasze pytanie odnosi się do SpamAssassin, DCC, Razor, lub Postfixa,
należy udać się na ich strony domowe, których adresy znajdziemy poniżej.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Zasoby</title>
<section>
<title>Więcej informacji</title>
<body>

<ul>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/INSTALL">Instalacja
    Amavisd-new</uri>
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/README.postfix">Amavisd-new
    Postfix README</uri>
  </li>
  <li>
    <uri
    link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html#pbanks">Amavisd-new
    Policy bank documentation</uri>
  </li>
  <li>
    <uri
    link="http://spamassassin.apache.org/full/3.0.x/dist/sql/README">Spamassassin
    SQL README</uri>
  </li>
  <li>
    <uri link="http://www.greylisting.org">Greylisting</uri>
  </li>
  <li>
    <uri link="http://www.postfix.org/FILTER_README.html">Postfix
    SMTPD_POLICY_README</uri>
  </li>
  <li>
    <uri link="http://www.unixwiz.net/techtips/postfix-HELO.html">Blokowanie
    spamerów przy pomocy przełączników HELO w programie Postfix</uri>\
  </li>
  <li>
    <uri link="http://www.linuxjournal.com/article.php?sid=7327">Przegląd
    SPF</uri>
  </li>
  <li>
    <uri link="http://jimsun.linxnet.com/misc/postfix-anti-UCE.txt">Jim
    Seymour's Postfix Anti-UCE Cheat Sheet</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Ogólne zasoby</title>
<body>

<ul>
  <li>
    <uri link="http://www.spamassassin.org">Spamassassin</uri>
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/">Amavisd-new</uri>
  </li>
  <li>
    <uri
    link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html">Amavisd-new
    documentation bits and pieces</uri>
  </li>
  <li>
    <uri link="http://razor.sourceforge.net/">Vipuls's Razor</uri>
  </li>
  <li>
    <uri link="http://pyzor.sourceforge.net/">Pyzor</uri>
  </li>
  <li>
    <uri link="http://www.rhyolite.com/anti-spam/dcc/">Distributed Checksum
    Clearinghouse</uri>
  </li>
  <li>
    <uri link="http://www.renaissoft.com/projects/maia/">Maia
    Mailguard</uri></li>
</ul>

</body>
</section>
<section>
<title>Inne HOWTO</title>
<body>

<ul>
  <li>
    <uri link="http://www.flakshack.com/anti-spam/">Fairly-Secure Anti-SPAM
    Gateway Using OpenBSD, Postfix, Amavisd-new, SpamAssassin, Razor and
    DCC</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
