<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-ppc64-disk.xml,v 1.27 2007/05/10 11:57:01 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.1</version>
<date>2007-06-26</date>

<section>
<title>Wprowadzenie do urządzeń blokowych</title>
<subsection>
<title>Urządzenia blokowe</title>
<body>

<p>
Rzućmy okiem na aspekty Gentoo Linux, oraz ogólnie Linuksa związane z dyskami.
Omówimy systemy plików, partycje oraz urządzenia blokowe. Następnie przejdziemy
razem przez proces podziału twardego dysku, aby jak najlepiej wykorzystać
dostępne miejsce.
</p>

<p>
Zaczniemy od omówienia <e>urządzeń blokowych</e>. Najpopularniejszym z nich
prawdopodobnie jest <path>/dev/hda</path>, reprezentujący w Linuksie pierwszy
napęd IDE. Jeśli w komputerze znajdują się urządzenia SCSI lub SATA, to
pierwszym takim dyskiem jest <path>/dev/sda</path>.
</p>

<p>
Urządzenia blokowe stanowią abstrakcyjny interfejs dysków. Programy użytkownika
mogą z nich korzystać nie martwiąc się czy napędy są typu IDE, SCSI, czy nawet
jakiegoś jeszcze innego. Przechowywane dane adresuje się jako ciąg 512-bajtowych
bloków.
</p>

</body>
</subsection>
<subsection>
<title>Partycje i plastry</title>
<body>

<p>
Teoretycznie możliwe jest przeznaczenie na system całego dysku, zazwyczaj nie
jest to jednak rozwiązanie zbyt praktyczne. Zamiast tego dzielimy napęd na
mniejsze, łatwiejsze w zarządzaniu urządzenia blokowe. W większości platform
nazywane są one <e>partycjami</e>. Część architektur korzystająca z podobnych
technik nazywa je <e>plastrami</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Projektowanie schematu podziału</title>
<subsection>
<title>Domyślny schemat podziału</title>
<body>

<p>
Jeśli nie mamy ochoty samodzielnie rozrysowywać schematu podziału dysku, możemy
skorzystać z domyślnego, z którego korzystamy w podręczniku:
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>System plików</th>
  <th>Rozmiar</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Mapa partycji</ti>
  <ti>31.5k</ti>
  <ti>Mapa partycji</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partycja wymiany</ti>
</tr>
<tr>
  <ti><path>/dev/sda4</path></ti>
  <ti>ext3</ti>
  <ti>Pozostałe miejsce</ti>
  <ti>Partycja root</ti>
</tr>
</table>

<note>
Są też partycje o nazwach w stylu: <path>Apple_Driver43</path>,
<path> Apple_Driver_ATA</path>, <path>Apple_FWDriver</path>,
<path>Apple_Driver_IOKit</path>, <path>Apple_Patches</path>.
Jeśli nie zamierzamy używać MacOS 9 możemy je usunąć, ponieważ
ani MacOS X, ani Linux ich nie potrzebują. Do ich usunięcia trzeba
użyć programu parted, mac-fdisk nie jest na razie w stanie ich skasować.
</note>

<p>
W dalszej części tekstu wyjaśnimy jak wiele i jak dużych partycji należy
utworzyć. Można pominąć te informacje i przejść bezpośrednio do <uri
link="#mac-fdisk">Apple G5: Partycjonowanie dysku przy pomocy mac-fdisk</uri>
lub <uri
link="#fdisk">IBM pSeries: Partycjonowanie dysku przy pomocy fdisk</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Jak dużo i jak wielkich?</title>
<body>

<p>
Ilość partycji ściśle zależy od danego środowiska. Na przykład, jeśli
administrujemy systemem mającym wielu użytkowników, prawdopodobnie uznamy za
stosowne oddzielenie <path>/home</path> aby poprawić bezpieczeństwo i uprościć
tworzenie kopii zapasowych. Jeżeli docelowym zastosowaniem Gentoo jest serwer
poczty, na osobnej partycji powinno się umieścić <path>/var</path>, gdzie
przechowywane są listy. Dobry wybór systemu plików może znacznie zwiększyć
wydajność. Oddzielenie <path>/opt</path> jest dobrym rozwiązaniem na serwerach
gier, gdyż większość używanego oprogramowania zostanie tam zainstalowana. Powód
jest podobny jak przy <path>/home</path>: bezpieczeństwo i kopie zapasowe. Na
pewno warto zapewnić dużo wolnego miejsca na <path>/usr</path>, ponieważ będą
tam się znajdowały nie tylko dane wszystkich zainstalowanych pakietów, ale
również ważące 500 MB drzewo Portage i kod źródłowy programów.
</p>

<p>
Jak widać, wiele zależy od oczekiwanego rezultatu. Wydzielenie partycji lub
woluminów ma wiele zalet:
</p>

<ul>
  <li>
  Mamy możliwość dostosowania jak najwydajniejszego do danego zastosowania
  systemu plików dla poszczególnych partycji lub woluminów.
  </li>
  <li>
  Zapełnienie całego wolnego miejsca na partycji przez wadliwie działające
  narzędzie nie ma szkodliwego wpływu na całość systemu.
  </li>
  <li>
  Jeśli to konieczne, można skrócić czas kontroli systemów plików, dzięki
  możliwości jednoczesnego dokonywania jej na kilku partycjach (ma to znaczenie
  zwłaszcza na sprzęcie z wieloma dyskami).
  </li>
  <li>
  Montując część partycji lub woluminów z opcjami read-only (tylko do odczytu),
  nosuid (ignorowane są bity setuid), noexec (ignorowane są bity wykonywalności)
  itd. można znacznie poprawić bezpieczeństwo.
  </li>
</ul>

<p>
Niestety zbyt rozbudowany podział niesie z sobą spore niebezpieczeństwo: źle
zaplanowany zaowocuje pustkami na zbyt dużych i ciasnotą na zbyt małych
partycjach. Ponadto dla dysków opartych na interfejsach SCSI i SATA jest limit
maksymalnie 15 partycji.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Apple G5: Partycjonowanie dysku przy pomocy mac-fdisk</title>
<body>

<p>
Aby utworzyć partycje skorzystamy z programu <c>mac-fdisk</c>:
</p>

<pre caption="Uruchamianie mac-fdisk">
# <i>mac-fdisk /dev/sda</i>
</pre>

<p>
Zaczniemy od pozbycia się starych partycji, aby zrobić miejsce
na nowy system. Skorzystamy w tym celu z polecenia <c>d</c>.
Zapyta ono o numer kasowanych partycji.
</p>

<p>
Następnie zakładamy partycję <e>Apple_bootstrap</e> za pomocą <c>b</c>.
Zostaniemy zapytani o początkowy blok. Wpiszemy numer pierwszej wolnej
partycji, a następnie literę <c>p</c>. Na przykład druga partycja to <c>2p</c>.
</p>

<note>
To <e>nie</e> jest partycja "boot". Nie jest nawet używana przez Linuksa; nie
potrzeba na niej miejsca do założenia systemu plików, nie powinno się jej nawet
montować. Użytkownicy PPC nie potrzebują osobnej partycji boot.
</note>

<p>
Teraz stworzymy partycję wymiany za pomocą <c>c</c>. <c>Mac-fdisk</c> ponownie
zapyta o blok początkowy. Jako, że wcześniej skorzystaliśmy z <c>2</c>,
teraz wpiszemy <c>3p</c>. Gdy zostaniemy zapytani o rozmiar, wpisujemy
<c>512M</c> (lub inny na jaki się zdecydowaliśmy - 512MB to zalecane minimum).
Następnie na pytanie o nazwę wpisujemy <c>swap</c> (koniecznie).
</p>

<p>
Żeby założyć partycję root, wpisujemy <c>c</c>, następnie <c>4p</c>, aby wybrać
blok od którego ma się zaczynać. Na pytanie o rozmiar ponownie wpiszemy
<c>4p</c>, <c>mac-fdisk</c> przydzieli jej całą pozostałą wolną przestrzeń.
Koniecznie nadajemy jej nazwę <c>root</c>.
</p>

<p>
Na zakończenie zachowujemy zmiany i opuszczamy <c>mac-fdisk</c> poleceniami
<c>w</c> oraz <c>q</c>.
</p>

<note>
Aby się upewnić, że wszystko zostało poprawnie wykonane, należy uruchomić
<c>mac-fdisk</c> jeszcze raz i sprawdzić czy są tam wszystkie nowo utworzone
partycje. Jeśli nie widać żadnych partycji, lub też nie ma zmian, które przed
chwilą wprowadziliśmy, należy ponownie wprowadzić zmiany wpisując <c>i</c>.
Warto zauważyć, że polecenie to usuwa wszystkie obecne partycje i zastępuje je
tymi odtworzonymi.
</note>

<p>
Następnie przechodzimy do paragrafu <uri link="#filesystems">Zakładanie
systemów plików</uri>.
</p>

</body>
</section>
<section id="fdisk">
<title>
IBM pSeries, iSeries i OpenPower: Partycjonowanie dysku przy pomocy fdisk
</title>
<subsection>
<body>

<note>
Aby skorzystać z tablicy RAID podczas instalacji Gentoo na sprzęcie opartym na
POWER należy uruchomić <c>iprutils</c> i sformatować dyski do formatu
"Advanced Function" i utworzyć na nich tablice dyskowe.
</note>

<p>
Należy włączyć aplikacje ipr, jeśli posiada się kontroler SCSI bazowany na ipr.
</p>

<pre caption="Uruchamianie ipr">
# <i>/etc/init.d/iprinit start</i>
</pre>

<p>
Zademonstrujemy teraz tworzenie przykładowego schematu podziału dysku takiego
jak w podanym przykładzie:
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Partycja PPC PReP Boot</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Partycja wymiany</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Partycja root</ti>
</tr>
</table>

<p>
Oczywiście można, a czasem nawet powinno się dostosować ten schemat do własnych
potrzeb.
</p>

</body>
</subsection>
<subsection>
<title>Przeglądanie obecnego podziału</title>
<body>

<p>
<c>fdisk</c> to popularne i wygodne narzędzie do partycjonowania dysków.
Zacznijmy od uruchomienia go dla naszego dysku (pokażemy to na przykładzie
<path>/dev/sda</path>):
</p>

<pre caption="Uruchamianie fdisk">
# <i>fdisk /dev/sda</i>
</pre>

<p>
Naszym oczom ukaże się taki znak zachęty:
</p>

<pre caption="Znak zachęty fdisk">
Command (m for help):
</pre>

<p>
Jeśli w systemie wciąż znajduje się układ partycji AIX, pojawi się następujący
błąd:
</p>

<pre caption="Błąd z fdisk">
   There is a valid AIX label on this disk.
   Unfortunately Linux cannot handle these
   disks at the moment.  Nevertheless some
   advice:
   1. fdisk will destroy its contents on write.
   2. Be sure that this disk is NOT a still vital
      part of a volume group. (Otherwise you may
      erase the other disks as well, if unmirrored.)
   3. Before deleting this physical volume be sure
      to remove the disk logically from your AIX
      machine.  (Otherwise you become an AIXpert).

 Command (m for help):
</pre>

<p>
Nie ma co się martwić, wystarczy wcisnąć <c>o</c> i utworzyć nowe partycje dos.
</p>

<warn>
Usunie to wszystkie partycje AIX.
</warn>

<p>
Teraz wciskamy <c>p</c>, aby wyświetlić istniejący układ partycji.
</p>

<pre caption="Przykładowa konfiguracja partycji">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          12       53266+  83  Linux
/dev/sda2              13         233      981571+  82  Linux swap
/dev/sda3             234         674     1958701+  83  Linux
/dev/sda4             675        6761    27035410+   5  Extended
/dev/sda5             675        2874     9771268+  83  Linux
/dev/sda6            2875        2919      199836   83  Linux
/dev/sda7            2920        3008      395262   83  Linux
/dev/sda8            3009        6761    16668918   83  Linux

Command (m for help):
</pre>

<p>
Na prezentowanym dysku znajduje się sześć linuksowych systemów plików
(każdy na osobnej partycji, oznaczonej jako "Linux") oraz partycja
wymiany (oznaczona jako "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Usuwanie wszystkich partycji</title>
<body>

<p>
Zacznijmy od usunięcia wszystkich partycji z dysku. Wpisujemy <c>d</c>, aby
skasować partycję. Na przykład, aby skasować obecne <path>/dev/sda1</path>:
</p>

<note>
Jeśli nie chcemy, nie musimy kasować wszystkich partycji. Polecamy zrobienie
kopii zapasowych danych przed przystąpieniem do jakiejkolwiek operacji na
partycjach.
</note>

<pre caption="Usuwanie partycji">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Nasza partycja została zaznaczona do usunięcia. Nie będzie więcej pojawiać się
po wydaniu polecenia <c>p</c>, ale pozostanie nienaruszona dopóki zmiany nie
zostaną zapisane fizycznie. Jeśli popełnimy błąd i zechcemy anulować wszystkie
wprowadzone zmiany, wpisujemy natychmiast <c>q</c> i wciskamy Enter.Niefortunne
modyfikacje odejdą w niepamięć.
</p>

<p>
Zakładając, że chcemy pozbyć się wszystkich istniejących partycji, na przemian
wykonywać będziemy <c>p</c>, aby wyświetlić ich listę i po kolei kasować je
poleceniem <c>d</c> z odpowiednim numerem. Po ukończeniu, <c>p</c> powinno dać
następujący rezultat:
</p>

<pre caption="Pusta tablica partycji">
Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Kiedy nasza tymczasowa kopia tablicy partycji będzie pusta, możemy rozpocząć
tworzenie nowego podziału. Pokażemy to na przykładzie domyślnego omawianego
schematu. Oczywiście jeśli zamierzamy używać innego, należy zmodyfikować
prezentowane polecenia.
</p>

</body>
</subsection>
<subsection>
<title>Tworzenie partycji PPC PReP boot</title>
<body>

<p>
Na początek stworzymy małą partycję PRep boot. Wpisujemy <c>n</c>, aby stworzyć
nową partycję, następnie <c>p</c>, aby była to partycja podstawowa, a następnie
<c>1</c>, ponieważ ma to być pierwsza partycja podstawowa. Kiedy program zapyta
o pierwszy cylinder wciskamy Enter, a kiedy zapyta o ostatni wpisujemy
<c>+7M</c>, dzięki czemu stworzymy partycję o rozmiarze 7 MB. Kiedy skończymy
wpisujemy <c>t</c>, aby wybrać typ partycji, <c>1</c>, aby wybrać pierwszą,
świeżo utworzoną partycję, a następnie <c>41</c> żeby ustawić jej typ na "PPC
PReP Boot". Na koniec oznaczamy partycję PReP jako uruchamialną.
</p>

<note>
Partycja PReP boot musi być mniejsza niż 8 MB.
</note>

<pre caption="Tworzenie partycji PReP boot">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): <i>n</i>
Command action
      e   extended
      p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-6761, default 1):
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-6761, default
6761): <i>+8M</i>

Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>41</i>
Changed system type of partition 1 to 41 (PPC PReP Boot)

Command (m for help): <i>a</i>
Partition number (1-4): <i>1</i>
Command (m for help):
</pre>

<p>
Teraz po wpisaniu <c>p</c> wydruk podziału dysku powinien wyglądać tak:
</p>

<pre caption="Utorzona partycja boot">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot

Command (m for help):
</pre>

</body>
</subsection>
<subsection>
<title>Tworzenie partycji wymiany</title>
<body>

<p>
Nadszedł czas na utworzenie partycji wymiany. Ponownie skorzystamy z polecenia
<c>n</c>, następnie naciskamy <c>p</c> gdyż ma to być partycja podstawowa i
<c>2</c>, ponieważ będzie ona drugą tego typu. Zapytani o pierwszy cylinder
wciskamy Enter, natomiast na pytanie o ostatni wpisujemy <c>+512M</c>, żeby
nadać partycji rozmiar 512MB. Po ukończeniu wykonujemy <c>t</c>, aby zmienić jej
typ, <c>2</c>, aby wybrać tę, którą właśnie stworzyliśmy i <c>82</c>, żeby
oznaczyć ją jako "Linux Swap". Teraz polecenie <c>p</c> powinno dać następujący
listing:
</p>

<pre caption="Wydruk podziału po utworzeniu partycji wymiany">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap

Command (m for help):
</pre>

</body>
</subsection>
<subsection>
<title>Tworzenie partycji root</title>
<body>

<p>
Na koniec, utworzymy partycję root. Jeszcze raz posłużymy się w tym celu
poleceniem <c>n</c>. Zapytani o rodzaj wpisujemy <c>p</c>, aby była partycją
podstawową, następnie <c>3</c>, gdyż będzie już trzecią tego typu, czyli w
naszym przypadku <path>/dev/hda3</path>. Na pytanie o pierwszy i ostatni
cylinder wciskamy Enter, dzięki temu zajmie ona całą pozostałą wolną przestrzeń.
Teraz polecenie <c>p</c> powinno pokazać następujący wydruk:
</p>

<pre caption="Wydruk podziału po utworzeniu partycji root">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap
/dev/sda3             118        6761    29509326   83  Linux

Command (m for help):
</pre>

</body>
</subsection>
<subsection>
<title>Zapisywanie podziału partycji</title>
<body>

<p>
Aby zachować ustalony podział i opuścić <c>fdisk</c> wpisujemy <c>w</c>.
</p>

<pre caption="Zachowywanie zmian i zamykanie fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Następnie przechodzimy do paragrafu <uri link="#filesystems">Tworzenie systemów
plików</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Tworzenie systemów plików</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po utworzeniu partycji nadszedł czas na założenie na nich systemów plików.
Jeśli jest to obojętne jakie zostaną wybrane lub odpowiadają nam domyślne
ustawienia w podręczniku, przejdźmy do paragrafu <uri
link="#filesystems-apply">Zakładanie systemów plików na partycjach</uri>.
W przeciwnym wypadku polecamy dalszą lekturę aby dowiedzieć się więcej na ich
temat.
</p>

</body>
</subsection>
<subsection>
<title>Systemy plików?</title>
<body>

<note>
Mamy do dyspozycji następujące systemy plików: ext2, ext3, a obsługa ReiserFS
jest wbudowana w jądra płyt instalacyjnych. Obsługa JFS i XFS dostępna jest
poprzez dodanie odpowiednich modułów do jądra.
</note>

<p>
<b>Ext2</b> to sprawdzony i popularny linuksowy system plików, którego główną
wadą jest to, że nie posiada księgowania. Powoduje to, iż jego regularne
kontrole przy starcie systemu bywają długotrwałe. Obecnie istnieją nowoczesne
systemy plików z księgowaniem, które można szybko sprawdzić i to właśnie te
polecamy naszym użytkownikom. Księgowanie zapobiega długotrwałym kontrolom
podczas uruchamiania systemu oraz ewentualnym błędom spójności danych.
</p>

<p>
<b>Ext3</b> to odpowiednik ext2 posiadający księgowanie w trybach full oraz
ordered, dzięki czemu w razie awarii dane odzyskiwane są błyskawicznie. ext3
używa indeksu drzewa HTree, który zapewnia wysoką wydajność w prawie wszystkich
zastosowaniach. Jest on bardzo dobrym i niezawodnym rozwiązaniem.
</p>

<p>
<b>ReiserFS</b> to system plików oparty na drzewie B+, oferujący dużą
wydajność.  Przy wielu małych plikach (poniżej 4k) może być szybszy od ext3
nawet piętnastokrotnie. ReiserFS jest wysoce skalowalny i posiada księgowanie,
Charakteryzuje go niezawodność i użyteczność zarówno na partycjach ogólnego
przeznaczenia jak i w ekstremalnych przypadkach, takich jak ogromne partycje,
operacje na wielu bardzo małych, lub bardzo dużych plikach czy też operacje na
katalogach zawierających dziesiątki tysięcy plików.
</p>

<p>
<b>XFS</b> to system plików z księgowaniem, w pełni wspierany
w Gentoo Linux przez jądro xfs-sources. Jest bardzo funkcjonalny i
zoptymalizowany
do skalowalności. Zalecamy go wyłącznie do systemów z nowoczesnymi dyskami SCSI
i/lub ciągłego zapisu danych z nieprzerwanym dostępem zasilania. Ponieważ
XFS przechowuje dużo danych w pamięci RAM, źle zaprojektowane programy
(te nie zachowujące odpowiednich środków ostrożności podczas zapisywania plików
na dysk, których niestety jest sporo) mogą doprowadzić w razie awarii
systemu do utraty danych.
</p>

<p>
<b>JFS</b> to dość nowy, bardzo wydajny system plików IBM'a wyposażony w
księgowanie.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Zakładanie systemów plików na partycjach</title>
<body>

<p>
Aby założyć na woluminie lub partycji system plików należy skorzystać z
odpowiednich narzędzi:
</p>

<table>
<tr>
<th>System plików</th>
<th>Program do zakładania</th>
</tr>
<tr>
<ti>ext2</ti>
<ti><c>mke2fs</c></ti>
</tr>
<tr>
<ti>ext3</ti>
<ti><c>mke2fs -j</c></ti>
</tr>
<tr>
<ti>reiserfs</ti>
<ti><c>mkreiserfs</c></ti>
</tr>
<tr>
<ti>xfs</ti>
<ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
<ti>jfs</ti>
<ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Na przykład, aby założyć ext3 na partycji root (w naszym przypadku
<path>/dev/sda4</path>), powinniśmy wykonać następujące polecenie:
</p>

<pre caption="Zakładanie systemu plików na partycji">
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Teraz utwórzmy odpowiednie systemy plików dla wszystkich partycji.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja partycji wymiany</title>
<body>

<p>
Aby utworzyć partycję wymiany skorzystamy z programu <c>mkswap</c>.
</p>

<pre caption="Tworzenie partycji wymiany">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
Aby ją aktywować korzystamy z polecenia <c>swapon</c>:
</p>

<pre caption="Aktywacja partycji wymiany">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Przy pomocy przedstawionych powyżej poleceń tworzymy i aktywujemy partycję
wymiany.
</p>

</body>
</subsection>
</section>
<section>
<title>Montowanie</title>
<body>

<p>
Po założeniu partycji i utworzeniu systemów plików nadszedł czas na ich
zamontowanie. Służy do tego program <c>mount</c>. Nie należy zapomnieć o
utworzeniu odpowiednich katalogów dla każdego z nich. Pokażemy to na przykładzie
partycji boot oraz root:
</p>

<pre caption="Montowanie partycji">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/sda4 /mnt/gentoo</i>
</pre>

<note>
Jeżeli chcemy przenieść <path>/tmp</path> na oddzielną partycję,
nie można zapomnieć po zamontowaniu odpowiednio poprawić praw dostępu: <c>chmod
1777 /mnt/gentoo/tmp</c>. Dotyczy to również <path>/var/tmp</path>.
</note>

<p>
Następnie przechodzimy do rozdziału <uri link="?part=1&amp;chap=5">Wypakowywanie
plików instalacyjnych</uri>.
</p>

</body>
</section>
</sections>
