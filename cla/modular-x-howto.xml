<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/www/viewcvs.gentoo.org/raw_cvs/gentoo/xml/htdocs/proj/pl/desktop/x/x11/modular-x-howto.xml,v 1.19 2007/05/08 11:57:34 rane Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/pl/desktop/x/x11/modular-x-howto.xml" lang="pl">
<title>Migracja na modularne X</title>

<author title="Autor">
  <mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Autor">
  <mail link="joshuabaergen@gmail.com">Joshua Baergen</mail>
</author>
<author title="Tłumaczenie">
  <mail link="damjanek@gmail.com">Damian Szeluga</mail>
</author>

<abstract>
Ten dokument pomaga w migracji na modularne X.Org.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1.2</version>
<date>2006-11-05</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<title>Dlaczego modularne X?</title>
<body>

<p>
Dlaczego jeden wygodny pakiet zmienił się w 300 mniejszych? Proces ten jest
realizowany przez twórców X.Org. Rozdzielają oni wszystkie pakiety na
pomniejsze, a my jedynie podążamy za nimi.
</p>

<p>
Powodów, dla których pakiet został podzielony i zmienił się sposób jego
budowania budowania jest co najmniej kilka:
</p>

<ul>
  <li>
    Nowym deweloperom trudno dołączyć do projektu X, więc postanowiono przejść
    na autotools, który jest znacznie wygodniejszy dla większości ludzi.
  </li>
  <li>
    Jeśli korzysta się z autotools, jest możliwy podział źródeł programu,
    dzięki czemu cały projekt jest łatwiejszy do zarządzania dla deweloperów.
  </li>
  <li>
    Rzeczy, które niepotrzebnie stały się zależne od siebie w przeszłości,
    niejednokrotnie uniemożliwiają tworzenie poprawek. A jeśli już poprawki
    były tworzone, wymagało to przebudowywania całego X.Org. Na przykład błąd w
    sterownikach ATI musiał czekać 6 miesięcy do następnego wydania lub
    wymagał przebudowania czcionek, zupełnie bez powodu.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Migracja do modularnego X</title>
<section>
<title>Wstęp</title>
<body>

<p>
Aby stare pakiety nie wchodziły nam w drogę, najpierw pozbędziemy się starego
xorg-x11, a dopiero potem zainstalujemy modularne X. Nie jest to niezbędne, ale
ułatwi nam migrację.
</p>

</body>
</section>
<section>
<title>Krok pierwszy: pozbycie się starego X</title>
<body>

<p>
Tworzymy kopię bezpieczeństwa starego X, by mieć możliwość powrotu do wersji
6.x. Warto również zainstalować jakąś przeglądarkę internetową działającą w
konsoli, taką jak na przykład links lub lynx. Przyda się ona do czytania tego
opisu gdy środowisko X nie będzie dostępne.
</p>

<pre caption="Wykonanie kopii zapasowej starego xorg-x11">
# <i>emerge gentoolkit</i>
# <i>quickpkg xorg-x11</i>
</pre>

<p>
Usuwamy starą, monolityczną instalację. W tym momencie należy wyłączyć serwer
X, w innym wypadku podczas aktualizacji komputer się zawiesi.
</p>

<pre caption="Usuwanie monolitycznej instalacji">
# <i>emerge -Ca xorg-x11 virtual/x11</i>
</pre>

<p>
Jeśli <path>/usr/X11R6</path> nie jest dowiązaniem do <path>/usr</path>,
usuwamy ten katalog i zaczynamy od początku. Najpierw jednak zapisujemy listę
pakietów tam zainstalowanych.
</p>

<pre caption="Tworzenie listy pakietów">
# <i>if [[ ! -L /usr/X11R6 ]]; \
        then equery belongs /usr/X11R6 > ~/usr-x11r6-packages \
        &amp;&amp; rm -rf /usr/X11R6; fi</i>
</pre>

<p>
Jeśli istnieje katalog <path>/usr/lib/X11/xkb</path>
(<path>/usr/lib64/X11/xkb</path> dla użytkowników 64-bitowych procesorów),
należy go usunąć wraz z całą zawartością. Inaczej nie zainstaluje się pakiet
<c>xkeyboard-config</c>.
</p>

</body>
</section>
<section>
<title>Krok drugi: instalacja modularnego X</title>
<body>

<p>
Aby korzystać z Direct Rendering, należy aktywować <c>dri</c> we flagach USE.
Standardowo powinna być włączona.
</p>

<p>
Następnie decydujemy, jakie sterowniki chcemy zainstalować. Są one zależne od
naszej konfiguracji sprzętowej. Jeśli posiadamy sprawny plik
<path>/etc/X11/xorg.conf</path>, wystarczy wykonać tylko poniższe polecenie, by
dowiedzieć się jakich sterowników potrzebujemy:
</p>

<pre caption="Sprawdzanie potrzebnych sterowników">
# <i>grep Driver /etc/X11/xorg.conf</i>
        Driver      "kbd"
        Driver      "mouse"
        Driver      "radeon"
</pre>

<pre caption="Checking available drivers">
# <i>emerge --verbose --pretend xorg-x11</i>
[ebuild   R   ] x11-base/xorg-x11-7.0-r1  USE="-xprint" INPUT_DEVICES="keyboard
mouse -acecad -aiptek -calcomp -citron -digitaledge -dmc -dynapro -elo2300
-elographics -evdev -fpit -hyperpen -jamstudio -joystick -magellan -magictouch
-microtouch -mutouch -palmax -penmount -spaceorb -summa -synaptics% -tek4957
-ur98 -vmmouse -void" VIDEO_CARDS="i128 mga radeon savage -apm -ark -chips
-cirrus -cyrix -dummy -fbdev -fglrx% -glint -i740 -i810 -imstt -mach64
-neomagic -newport -nsc -nv -nvidia% -r128 -rendition -s3 -s3virge
-siliconmotion -sis -sisusb -sunbw2 -suncg14 -suncg3 -suncg6 -sunffb -sunleo
-suntcx -tdfx -tga -trident -tseng -v4l -vesa -vga -via -vmware -voodoo" 0 kB
</pre>

<p>
INPUT_DEVICES i VIDEO_CARDS ustawiamy w <path>/etc/make.conf</path>, tak by
odpowiadały naszej konfiguracji. Minimalne ustawienia dla powyższego przykładu
byłby następujące: INPUT_DEVICES="<c>keyboard mouse</c>"
VIDEO_CARDS="<c>radeon</c>". Jeśli nie ustawimy pierwszej lub drugiej zmiennej,
xorg-x11 zainstaluje wszystkie możliwe sterowniki tego typu. Jako sterowniki
zapasowe, można dodać <c>vesa</c> i <c>fbdev</c> do VIDEO_CARDS.
</p>

<p>
Następnie instalujemy metapakiet. Spowoduje to instalację serwera X oraz
najczęściej używanych aplikacji, dając nam do dyspozycji sprawną implementację
X:
</p>

<pre caption="Instalacja modularnego metapakietu">
# <i>emerge xorg-x11</i>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
# <i>[[ -e ~/usr-x11r6-packages ]] &amp;&amp; emerge $(&lt;~/usr-x11r6-packages)</i>
</pre>

<note>
Jeśli zależy nam na minimalnej instalacji, instalujemy po prostu
<c>xorg-server</c>. Pakiet ten zawiera wszystko, co umożliwi uruchomienie
serwera X.
</note>

<p>
Należy pamiętać, że to polecenie spowoduje minimalną instalację i że rzeczy
takie jak xcursor-themes, nie będą instalowane standardowo. Na przykład, jeśli
zmienialiśmy nasz cursor na whiteglass, redglass lub handhelds, instalujemy
xcursor-themes. Jeśli korzystaliśmy z kursora gentoo, gentoo-blue lub
gentoo-silver, instalujemy gentoo-xcursor.
</p>


<note>
Jeżeli mamy zainstalowane modularne X, zewnętrzne sterowniki (takie jak
nvidia-glx i wacom oraz niektóre aplikacje vnc) mogą nie działać, jeżeli
instalują się do <path>/usr/lib/modules</path> zamiast do
<path>/usr/lib/xorg/modules</path>. Wiele z nich będzie miało możliwość
wykrywania modularnych X w procesie instalacyjnym, więc wymagają one jedynie
przeinstalowania po instalacji modularnego X. Wiele z zewnętrznych sterowników
posiada flagę USE <c>dlloader</c>, którą należy włączyć, a następnie
przebudować sterowniki.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Częste problemy</title>
<section>
<title>'emerge -u world' chce instalować xorg-x11 6.x lub virtual/x11</title>
<body>

<p>
Zdarza się to dlatego, że drzewo portage jeszcze nie jest w pełni przygotowane
do obsługi modularnych zależności. Można nas w tym wspomóc, czytając opis <uri
link="porting-modular-x-howto.xml">przenoszenia programów na modularne X</uri> i
nadsyłając poprawki do opiekunów poszczególnych pakietów.  Opiekunowie są
wymienieni w pliku <path>metadata.xml</path> w tym samym katalogu, w którym jest
pakiet, a program <c>herdstat</c> pozwoli przyspieszyć ich wyszukiwanie.
</p>

<p>
Jeśli używamy modularnego X na systemie opartym o stabilną gałąź drzewa Portage,
mogą wystąpić problemy. Wiele pakietów działa z modularnymi X tylko w wersjach
niestabilnych, więc możliwe jest, że niezbędne będzie dodanie niektórych
pakietów do <path>/etc/portage/package.keywords</path>.
</p>

</body>
</section>
<section>
<title>Co się stało ze wszystkimi flagami USE?</title>
<body>

<p>
Wiele flag USE z xorg-x11-6.8 zniknęło, kilka zostało przeniesionych na 7.0.
Pojawiło się również kilka nowych.
</p>

<table>
<tr>
  <th>Flaga USE</th>
  <th>Co się z nią stało w X 7.0?</th>
</tr>
<tr>
  <ti>3dfx</ti>
  <ti>W 7.0 powoduje dopisanie glide-v3 do zależności pakietu X</ti>
</tr>
<tr>
  <ti>3dnow, mmx, sse</ti>
  <ti>
    Te flagi są standardowo włączone w czasie budowania pakietu, ponieważ ich
    obsługa jest sprawdzana w momencie uruchomienia.
  </ti>
</tr>
<tr>
  <ti>bitmap-fonts, truetype-fonts, type1-fonts</ti>
  <ti>
    Metapakiet xorg-x11 instaluje tylko niewielką ilość najczęściej używanych i
    wymaganych czcionek. Można samodzielnie zainstalować dodatkowe czcionki z
    katalogu media-fonts/.
  </ti>
</tr>
<tr>
  <ti>cjk</ti>
  <ti>
    Należy zainstalować font-misc-misc i font-sony-misc z włączoną flagą nls,
    by uzyskać japońskie czcionki w JISX0201. Więcej znajduje się w pakiecie
    font-jis-misc. Chińskie czcionki są w font-isas-misc, koreańskie w
    font-daewoo-misc.
  </ti>
</tr>
<tr>
  <ti>dlloader</ti>
  <ti>
    X 7.0 standardowo używa dlloader, a elfloader nie działa
  </ti>
</tr>
<tr>
  <ti>doc</ti>
  <ti>Przeniesione do app-doc/xorg-docs</ti>
</tr>
<tr>
  <ti>dmx</ti>
  <ti>Wbudowane w xorg-server, o ile nie użyto flagi minimal</ti>
</tr>
<tr>
  <ti>font-server</ti>
  <ti>Można samodzielnie doinstalować xfs</ti>
</tr>
<tr>
  <ti>ipv6</ti>
  <ti>
    Przeniesiono do oddzielnych pakietów korzystających z ipv6. Można również
    uruchomić flagę globalnie, jeśli zachodzi taka potrzeba.
  </ti>
</tr>
<tr>
  <ti>minimal</ti>
  <ti>
    By uzyskać ten sam efekt należy zainstalować pakiet xorg-server zamiast
    metapakietu xorg-x11. By uniknąć budowania Xdmx, Xvfb i Xnest można włączyć
    flagę minimal w xorg-server. Jeśli potrzebujemy czegoś jeszcze mniejszego,
    warto zainteresować się x11-base/kdrive.
  </ti>
</tr>
<tr>
  <ti>nls</ti>
  <ti>
    W 7.0 użycie flagi nls powoduje instalację wszystkich wersji czcionek
    różnych od ISO-8859-1.
  </ti>
</tr>
<tr>
  <ti>nocxx</ti>
  <ti>Nie ma jeszcze swojego odpowiednika w X 7.0</ti>
</tr>
<tr>
  <ti>opengl</ti>
  <ti>
    Zmienia nazwę na "dri" i wciąż uruchamia Direct Rendering w xorg-server i
    wielu sterownikach. Niezależnie czy DRI jest włączona, czy nie, wciąż jest
    zapewnione programowe wsparcie 3D przy pomocy Mesa.
  </ti>
</tr>
<tr>
  <ti>pam</ti>
  <ti>
    Przeniesione do indywidualnych pakietów korzystających z pam, takich jak
    xorg-server i xdm
  </ti>
</tr>
<tr>
  <ti>sdk</ti>
  <ti>X 7.0 musi zainstalować SDK, w konsekwencji modularyzacji</ti>
</tr>
<tr>
  <ti>static</ti>
  <ti>
    Nie ma sensu budować statycznego serwera, jeżeli cała reszta jest
    modularna, ponieważ sterownik by sobie z tym nie poradził.
  </ti>
</tr>
<tr>
  <ti>xprint</ti>
  <ti>
    Metapakiet instaluje libXp. W innych aplikacjach uruchamia wsparcie dla
    xprint. Większość osób nie chce tego uruchamiać.
  </ti>
</tr>
<tr>
  <ti>xv</ti>
  <ti>
    Przestała być opcjonalna, ponieważ nie zaoszczędza zbyt wiele miejsca i
    powoduje problemy z pakietami oczekującymi, że ta flaga będzie włączona.
  </ti>
</tr>
</table>

</body>
</section>
<section>
<title>Co się stało z plikami konfiguracyjnymi?</title>
<body>

<p>

W pakiecie X.Org 6.8 znajdującym się w drzewie, wszystkie pliki konfiguracyjne
i skrypty umieszczone były w katalogu <path>/etc/X11</path>. W modularnym X.Org
jego deweloperzy zmienili lokalizacje tych plików, przez co pliki
konfiguracyjne znajdują się dalej w katalogu <path>/etc/X11</path> natomiast
skrypty i domyślne konfiguracje zostały umieszczone w katalogu
<path>/usr/lib/X11</path> (lub <path>/usr/lib64/X11</path>) i
<path>/usr/share/X11</path>.
</p>

<p>
Ponieważ posiadamy zabezpieczenie plików konfiguracyjnych (CONFIG_PROTECT),
wszystkie nasze pliki z X.Org 6.8 prawdopodobnie cały czas będą w katalogu
<path>/etc/X11</path>.
</p>

<p>
Ponieważ katalogi te nie znajdują się w zmiennej CONFIG_PROTECT, ważnym jest,
aby każde zmiany przeprowadzane na domyślnych plikach konfiguracyjnych były
robione poprzez przekopiowanie odpowiednich plików do katalogu
<path>/etc/X11</path>, a wszelkie ich aktualizacje były przeprowadzane w tym
katalogu. Drugim, lecz nie zalecanym, sposobem jest dodanie nowych lokalizacji
do zmiennej CONFIG_PROTECT. Poniżej prezentujemy dwa przykłady:
</p>

<pre caption="Dostosowywanie procesu uruchamiania XDM-a">
<comment>
Należy, przekopiować plik Xsetup_0 do katalogu /etc tak, aby był chroniony.
</comment>
# <i>cp -a /usr/lib/X11/xdm/Xsetup_0 /etc/X11/xdm/</i>
<comment>
Plik edytujemy dostosowując go do własnych potrzeb. Następnie, edytujemy
xdm-config aktualizując ścieżki do tego pliku.
</comment>
# <i>nano /etc/X11/xdm/xdm-config</i>
<comment>
Zmieniamy następujące linijki:
</comment>
        ! The following three resources set up display :0 as the console.
        DisplayManager._0.setup:           /usr/lib/X11/xdm/Xsetup_0
        DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
        DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
<comment>
...na takie:
</comment>
        ! The following three resources set up display :0 as the console.
        <i>DisplayManager._0.setup:        /etc/X11/xdm/Xsetup_0</i>
        DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
        DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
</pre>

<note>
Na systemach korzystających z bibliotek 64-bitowych, potrzebna będzie zmiana
lib na lib64.
</note>

<p>
W tym przykładzie dodanym przez Joe Womacka, zajmiemy się zmianami ustawień
<c>xterm</c>. Można to zrobić globalnie lub dla konkretnego użytkownika.
</p>

<pre caption="Dostosowywanie app-defaults/XTerm-color globalnie">
<comment>
Podobnie jak w przykładzie powyżej, tworzymy kopię pliku w /etc ponieważ jest on
chroniony przed zapisem:
</comment>
# <i>cp -a /usr/share/X11/app-defaults/XTerm-color /etc/X11/app-defaults/</i>
<comment>
Przerabiamy plik według naszych potrzeb. Następnie należy skonfigurować ścieżkę
dostępu XFILESEARCHPATH dla Xt. Należy to zrobić w pliku znajdującym się w
katalogu /etc/env.d:
</comment>
# <i>echo '# To wprowadza zmiany dla całego systemu.' >> /etc/env.d/10xpaths</i>
# <i>echo 'XFILESEARCHPATH=/etc/X11/%T/%N:/usr/share/X11/%T/%N' >> /etc/env.d/10xpaths</i>
</pre>

<pre caption="Dostosowywanie app-defaults/XTerm-color lokalnie">
<comment>Istnieją dwa sposoby na dokonanie tego:</comment>
<comment>1) Ustawić katalog app-defaults dla użytkownika</comment>
# <i>echo '# To wprowadza zmiany dla użytkownika w $HOME/app-defaults' >> /etc/env.d/10xpaths </i>
# <i>echo 'XUSERFILESEARCHPATH=$HOME/%T/%N' >> /etc/env.d/10xpaths</i>

<comment>
2) Stworzyć plik .Xdefaults lub .Xresources kopiując ustawienia, które chcemy
zmienić. Ten przykład zmienia kolor kursora wszystkich Xtermów na pomarańczowy,
uruchamiany jako powłoka logowania, dodaje dekorację paska przewijania, i buffer
przewijania o wielkości 1000 linii wstecz:
</comment>

# <i>echo '! Xterm defaults'               >> .Xresources</i>
# <i>echo 'XTerm*CursorColor:      orange' >> .Xresources</i>
# <i>echo 'XTerm*loginShell:       true'   >> .Xresources</i>
# <i>echo 'XTerm*scrollBar:        true'   >> .Xresources</i>
# <i>echo 'XTerm*saveLines:        1000'   >> .Xresources</i>

<comment>
Następnie należy zrestartować X lub wpisać poniższe polecenie, aby zmiany
odniosły skutek.
</comment>

# <i>xrdb -merge $HOME/.Xresources</i>
</pre>

<note>
Aby dowiedzieć się więcej o XFILESEARCHPATH i XUSERFILESEARCHPATH
należy zapoznać się z dokumentem dostępnym pod adresem
http://www.faqs.org/faqs/x-faq/part2/section-22.html.
Aby zasięgnąć dalszych informacji o pliku .Xresources należy przejrzeć
http://tldp.org/HOWTO/XWindow-User-HOWTO/moreconfig.html#XRESOURCES.
</note>

</body>
</section>
<section>
<title>Problemy ze sterownikami</title>
<body>

<p>
Zgłaszano nam, że:
</p>

<ul>
  <li>vesa zawiesza komputery z kartą Matrox</li>
  <li>
    vga tworzy bardzo dziwnie wyglądający ekran, podzielony na cztery części
  </li>
</ul>

</body>
</section>
<section>
<title>Ponowne uruchomienie akceleracji 3D</title>
<body>

<p>
Programy te, zawarte są w pakiecie <c>x11-apps/mesa-progs</c>. <c>mesa-progs</c>
jest instalowane przez pakiet <c>x11-base/xorg-x11</c> automatycznie.
</p>

<pre caption="Włączanie informacji diagnostycznych">
# <i>grep -e EE -e WW /var/log/Xorg.0.log</i>
# <i>LIBGL_DEBUG=verbose glxinfo</i>
</pre>

</body>
</section>
<section>
<title>Automatyczne wykrywanie protokołu myszki</title>
<body>

<p>
Opcja <c>"Protocol" "auto"</c> w <path>xorg.conf</path> dla naszej myszy, może
nie zadziałać.  Należy ustawić <c>"Protocol" "ExplorerPS/2"</c> lub
<c>"IMPS/2"</c> by działało kółko myszki.
</p>

</body>
</section>
<section>
<title>Pojawiają się błędy dotyczące braku libbitmap lub libpcidata</title>
<body>

<p>
Należy się upewnić, że żaden wpis <c>ModulePath</c> nie istnieje w
<path>/etc/X11/xorg.conf</path>.
</p>

</body>
</section>
<section>
<title>Program gdm/kdm nie działa</title>
<body>

<p>
Jeżeli instalowaliśmy modularne X na nowej instalacji Gentoo, w systemie może
nie być obecne dowiązanie symboliczne <path>/usr/X11R6</path> -&gt;
<path>/usr</path>. Pakiet <c>x11-base/xorg-x11</c> upewni się, czy symlink
istnieje podczas procesu
instalacji.
</p>

<p>
Można nas wesprzeć w poprawianiu pakietów instalujących się w
<path>/usr/X11R6</path> poprzez tworzenie poprawek i nadsyłanie nam ich.
</p>

<pre caption="Pakiety, które instalują się w /usr/X11R6">
# <i>cat ~/usr-x11r6-packages</i>
# <i>emerge --pretend $(&lt; ~/usr-x11r6-packages )</i>
</pre>

</body>
</section>

<section>
<title>XKB nie działa, nie można zmienić VT, itd.</title>
<body>

<ul>
  <li>Wiele układów klawiatury z XKB zostało przeniesionych, połączonych, lub
  usuniętych. Radzimy zajrzeć do <path>/usr/share/X11/xkb/symbols/pc</path>, by
  zobaczyć, co stało się z naszym starym ustawieniem XkbLayout w xorg.conf. Na
  przykład, by zmienić stary układ "us_intl", dodajemy <c>"XkbLayout"
  "latin"</c> i <c>"XkbOptions" "lv3:ralt_switch"</c>. Zamiast "sk_qwerty"
  użyjemy <c>"XkbLayout" "sk"</c> i <c>"XkbVariant" "qwerty"</c>. Jako bardziej
  zaawansowany przykład, możemy użyć <c>"XkbLayout" "us,sk_qwerty"</c>, które
  zamienilibyśmy na <c>"XkbLayout" "us,sk"</c>. Teraz ważna część:
  <c>"XkbVariant" ",qwerty"</c>. Należy zwrócić uwagę na przecinek, ponieważ
  chcemy, by wariant dotyczył drugiego układu.
  </li>
</ul>

<pre caption="Odszukiwanie zmian w XKB">
<comment>Przeszukujemy /var/log/Xorg.0.log w poszukiwaniu tej
informacji:</comment>
<comment>(WW) Couldn't load XKB keymap, falling back to pre-XKB keymap</comment>
<comment>Jeśli ten błąd się nie pojawia, znaczy to, że XKB działa
prawidłowo.</comment>
# <i>grep Xkb /etc/X11/xorg.conf</i>
        Option "XkbModel"  "logibik"
        Option "XkbLayout"  "dvorak"
        Option "XkbOptions" "ctrl:swapcaps"
<comment>Po pierwsze, należy zobaczyć co zmieniło się w naszym układzie.
Znajduje się to w katalogu symbols/pc directory.</comment>
# <i>cd /usr/share/X11/xkb/symbols/</i>
<comment>Jeśli zainstalowaliśmy xkbdata zamiast xkeyboard-config, szukamy w
katalogu pc/.</comment>
# <i>ls *dvorak*</i>
<comment>Nic się nie pokazało.</comment>
# <i>ls *us*</i>
us
<comment>Następnie szukamy wiariantu xkb_symbols o nazwie dvorak.</comment>
# <i>grep xkb_symbols.*dvorak us</i>
xkb_symbols "dvorak" {
<comment>To oznacza, że w xorg.conf potrzebujemy Option "XkbLayout"
"us"</comment>
<comment> i Option "XkbVariant" "dvorak".</comment>
<comment>Jeśli próbujemy sprawdzić te ustawienia przy użyciu setxkbmap i wciąż
otrzymujemy błąd</comment>
# <i>setxkbmap -model logibik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>Może to oznaczać, że model klawiatury również uległ zmianie</comment>
# <i>cd /usr/share/X11/xkb/rules/</i>
# <i>grep logibik xorg.lst</i>
<comment>Jeśli nic się nie pojawia po wydaniu powyższej komendy, oznacza to, że
dany model został usunięty. Można sprawdzić inne, jemu podobne:</comment>
# <i>grep logi* xorg.lst</i>
 logiaccess      Logitech Access Keyboard
 logicdit        Logitech Cordless Desktop iTouch
 logicdp         Logitech Cordless Desktop Pro
 logicdpa        Logitech Cordless Desktop Pro (alternate option)
 logicdpa2       Logitech Cordless Desktop Pro (alternate option2)
 logicdo         Logitech Cordless Desktop Optical
 logicfn         Logitech Cordless Freedom/Desktop Navigator
 logicdn         Logitech Cordless Desktop Navigator
 logidak         Logitech Deluxe Access Keyboard
 logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
 logiik          Logitech Internet Keyboard
 logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
 logiik          Logitech Internet Keyboard
 logiink         Logitech Internet Navigator Keyboard
 logiultrax      Logitech Ultra-X Keyboard
<comment>Model "logiik" wygląda podobnie, więc sprawdzamy go przy użyciu
setxkbmap.</comment>
# <i>setxkbmap -model logiik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>Jeśli powyższe zadziałało, zmieniamy wpis XkbModel.</comment>
<comment>Po zakończeniu, wszystko powinno działać</comment>
      </pre>

</body>
</section>

<section>
<title>Pozostałe sprawy</title>
<body>

<ul>
  <li>
    Pakiet <c>x11-base/xorg-x11</c> filtruje teraz wszystkie linie ModulePath i
    RgbPath w <path>/etc/X11/xorg.conf</path>, ponieważ obie te ścieżki zmieniły
    się od czasu poprzedniej wersji. Należy pamiętać o uruchomieniu
    <c>etc-update</c> w celu sfinalizowania tych zmian.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
