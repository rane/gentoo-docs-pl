<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-ppc-disk.xml,v 1.22 2007/05/10 11:43:19 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.2</version>
<date>2007-06-26</date>

<section>
<title>Wprowadzenie do urządzeń blokowych</title>
<subsection>
<title>Urządzenia blokowe</title>
<body>

<p>
Rzućmy okiem na aspekty Gentoo Linux, oraz ogólnie Linuksa związane z dyskami.
Omówimy systemy plików, partycje oraz urządzenia blokowe. Następnie wspólnie
przejdziemy przez proces podziału twardego dysku, aby jak najlepiej
wykorzystać dostępne miejsce.
</p>

<p>
Zaczniemy od omówienia <e>urządzeń blokowych</e>. Najpopularniejszym z nich
prawdopodobnie jest <path>/dev/hda</path>, reprezentujący w Linuksie pierwszy
napęd IDE. Jeśli w komputerze znajdują się urządzenia SCSI, FireWire, USB lub
SATA, pierwszym takim dyskiem jest <path>/dev/sda</path>.
</p>

<p>
Urządzenia blokowe stanowią abstrakcyjny interfejs dysków. Programy
użytkownika mogą z nich korzystać nie martwiąc się czy napędy są typu IDE, SCSI,
czy nawet jakiegoś jeszcze innego. Przechowywane dane adresuje się jako ciąg
512-bajtowych bloków.
</p>

</body>
</subsection>
<subsection>
<title>Partycje</title>
<body>

<p>
Teoretycznie możliwe jest przeznaczenie na system całego dysku, zazwyczaj nie
jest to jednak rozwiązanie zbyt praktyczne. Zamiast tego dzielimy napęd na
mniejsze, łatwiejsze w zarządzaniu urządzenia blokowe. Na większości platform
nazywane są one <e>partycjami</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Projektowanie schematu podziału</title>
<subsection>
<title>Domyślny schemat podziału</title>
<body>

<p>
Jeśli nie mamy ochoty samodzielnie rozrysowywać schematu podziału dysku, możemy
skorzystać z domyślnego, z którego korzystamy w Podręczniku. Należy wybrać
schemat systemu plików, który najlepiej pasuje do systemu PowerPC.
</p>

</body>
</subsection>
<subsection>
<title>Nowy Świat Apple</title>
<body>

<p>
Nowy Świat maszyn Apple jest w zasadzie prosty do konfiguracji. Pierwszą
partycją zawsze jest <e>Apple Partition Map</e>. Znajduje się na niej schemat
podziału dysku. Następna partycja zawsze powinna być samoładowalna (bootstrap
partition). Zawiera ona mały (800kb) system plików HFS, który "trzyma" kopię
bootloadera Yaboot i jego plik konfiguracyjny. Partycja ta <e>nie</e> jest
tym samym, co partycja <path>/boot</path>. Po partycji rozruchowej zaczynają
się typowe i systemy plików, jak widać na schemacie poniżej. Partycja wymiany
jest tymczasowym miejscem przechowywania danych, kiedy system wykroczy poza
swoją fizyczną pamięć. Partycja główna zawiera system plików, na którym będzie
zainstalowane Gentoo. Jeśli chcemy mieć możliwość uruchomienia dwóch systemów,
partycja z OSX może być umiejscowiona w każdym innym miejscu po partycji
samoładowalnej, aby mieć pewność, że Yaboot uruchomi się jako pierwszy.
</p>

<note>
Na dysku mogą znalźć się partycje "Disk Driver", takie jak
<path>Apple_Driver63</path>, <path>Apple_Driver_ATA</path>,
<path>Apple_FWDriver</path>, <path>Apple_Driver_IOKit</path> oraz
<path>Apple_Patches</path>. Są one używane w procesie uruchamiania MacOS, więc
jeśli nie nie będzie to potrzebne, można je śmiało usunąć poprzez opcję <c>i</c>
dla programu mac-fdisk. Spowoduje to kompletne usunięcie danych z dysku, więc
w razie wątpliwości lepiej pozwolić im tam być.
</note>

<note>
Jeśli do podziału dysku został użyty Apple Disk Utility, może się okazać, że
jest 128MB przestrzeni pomiędzy partycjami, które Apple rezerwuje do "przyszłego
użycia". Można je bezpiecznie usunąć.
</note>

<table>
<tr>
  <th>Partycja</th>
  <th>Rozmiar</th>
  <th>System plików</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>Brak</ti>
  <ti>Mapa Partycji Apple</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>800k</ti>
  <ti>HFS</ti>
  <ti>Apple Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linuks Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Reszta dysku</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Partycja główna</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Stary Świat Apple</title>
<body>

<p>
Stary Świat maszyn Apple jest trochę bardziej skomplikowany w konfiguracji.
Pierwsza partycja zawsze jest <e>Apple Partition Map</e>. Zawiera ona schemat
podziału dysku. Poniższa konfiguracja dla BootX uwzględnia zainstalowany MacOS
na oddzielnym dysku. Będą również dodatkowe partycje dla "Apple Disk Drivers"
takie jak <path>Apple_Driver63</path>, <path>Apple_Driver_ATA</path>,
<path>Apple_FWDriver</path>, <path>Apple_Driver_IOkit</path>,
<path>Apple_Patches</path> oraz kopia MacOS. W przypadku używania Quick, będzie
potrzeba stworzenia partycji boot, na której będzie się znajdowało jądro. Za
partycją rozruchową powinien się znajdować typowy system plików, według schematu
poniżej. Partycja wymiany jest tymczasowym miejscem do przechowywania danych,
które wykroczyły fizyczną pamięć. Partycja główna powinna zawierać system
plików, na którym zostanie zainstalowane Gentoo.
</p>

<note>
Jeśli w użyciu jest maszyna OldWorld, będzie potrzeba przechowania MacOS
dostępnego. Poniższy schemat uwzględnia zainstalowaną kopię MacOS na oddzielnym
dysku.
</note>

<table>
<tr>
  <th>Partycja</th>
  <th>Rozmiar</th>
  <th>System plików</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>Brak</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>32Mb</ti>
  <ti>ext2</ti>
  <ti>Quick Boot Partition (tylko quick)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swp</ti>
  <ti>Partycja wymiany</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Reszta dysku</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Główna partycja</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Pegasos</title>
<body>

<p>
IBM PowerPC Reference Platform (PReP) wymaga małej partycji PReP na pierwszym
miejscu na dysku. Dopiero po niej należy zakładać partycje wymiany i danych.
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>Rozmiar</th>
  <th>System plików</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32Mb</ti>
  <ti>affs1 lub ext2</ti>
  <ti>Partycja rozruchowa</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Partycja wymiany</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Reszta dysku</ti>
  <ti>Ext3, reiserfs, xfs</ti>
  <ti>Partycja główna</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>IBM PReP (RS/6000)</title>
<body>

<p>
IBM PowerPC Peference Platform (PReP) wymaga małej, aby na pierwszym miejscu w
schemacie podziały dysku znalazła się mała partycja rozruchowa, a następnie
partycja wymiany oraz partycja główna.
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>Rozmiar</th>
  <th>System plików</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>800k</ti>
  <ti>Brak</ti>
  <ti>PReP Boot Partition (Typ 0x41)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Partycja wymiany (Typ 0x82)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Reszta dysku</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Partycja główna (Typ 0x83)</ti>
</tr>
</table>


<warn>
Program <c>parted</c> ma możliwość zmiany rozmiaru partycji (również HFS+).
Niestety wiąże się to z dużym ryzykiem w przypadku partycji HFS+ używających
księgowania, nawet jeśli zostanie ono wyłączone w Mac OS X. Wszystkie próby
zmiany rozmiaru partycji przy pomocy parted to spore ryzyko, należy więc
wykonać najpierw kopie zapasowe danych!
</warn>

<p>
Jeśli nasze rady dotyczące rozmiarów partycji oraz ich ilości, wydaja się
interesujące, proponujemy kontynuowanie lektury. W przeciwnym wypadku
proponujemy przejść od razu do paragrafu <uri link="#mac-fdisk">Domyślnie:
Użycie mac-fdisk</uri> lub <uri
link="#parted">Alternatywnie: Użycie parted (zwłaszcza dla Pegasosa)</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Jak dużo i jak wielkich?</title>
<body>

<p>
Ilość partycji ściśle zależy od naszego środowiska. Na przykład jeśli
administrujemy systemem mającym wielu użytkowników prawdopodobnie uznamy za
stosowne oddzielenie <path>/home</path>, co poprawi bezpieczeństwo i uprości
proces tworzenia kopii zapasowych. Jeżeli docelowym zastosowaniem instalowanego
systemu jest serwer pocztowy to na osobnej partycji należy umieścić
<path>/var</path> gdzie przechowywane są listy. Dobry wybór systemu plików może
tu znacznie zwiększyć wydajność. Za to oddzielenie <path>/opt</path> jest dobrym
rozwiązaniem na serwerach gier, gdyż większość używanego oprogramowania będzie
instalowana właśnie tam. Powodami przyjęcia takiego rozwiązania są również
bezpieczeństwo i łatwość tworzenia kopii zapasowych. Warto upewnić się, że
partycja <path>/usr</path> będzie wystarczająco duża ponieważ będą tam
znajdowały się nie tylko dane wszystkich aplikacji, ale również ważące 500 MB
drzewo Portage.
</p>

<p>
Jak widać, wiele zależy od oczekiwanego rezultatu. Wydzielenie partycji lub
woluminów ma wiele zalet:
</p>

<ul>
  <li>
    Mamy możliwość dostosowania jak najwydajniejszego w danym zastosowaniu
    systemu plików dla poszczególnych partycji lub woluminów.
  </li>
  <li>
    Zapełnienie całego wolnego miejsca na partycji przez wadliwie działające
    narzędzie nie ma szkodliwego wpływu na całość systemu.
  </li>
  <li>
    Jeśli to konieczne, można skrócić czas kontroli systemów plików, dzięki
    możliwości jednoczesnego dokonywania jej na kilku partycjach (ma to
    znaczenie zwłaszcza na sprzęcie z wieloma dyskami).
  </li>
  <li>
    Montując część partycji lub woluminów z opcjami read-only (tylko do
    odczytu), nosuid (ignorowane są bity setuid), noexec (ignorowane są bity
    wykonywalności) itd. można znacznie poprawić bezpieczeństwo.
  </li>
</ul>

<p>
Niestety zbyt rozbudowany podział niesie z sobą spore niebezpieczeństwo: źle
zaplanowany zaowocuje pustkami na zbyt dużych i ciasnotą na zbyt małych
partycjach. Ponadto dla dysków opartych na interfejsach SCSI jest limit
maksymalnie 15 partycji.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Domyślnie: Partycjonowanie dysku za pomocą mac-fdisk (Apple)</title>
<body>

<p>
Aby utworzyć partycje skorzystamy z programu <c>mac-fdisk</c>:
</p>

<pre caption="Uruchamianie mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Jeśli do pozostawienia miejsca na dysku dla Linuksa było użyte narzędzie Apple
Disk Utility, należy najpierw usunąć partycje stworzone wcześniej. W tym celu
stosuje się opcję <c>d</c> w programie <c>mac-fdisk</c>. Aplikacja zapyta o
numer partycji, którą ma usunąć. Zwykle pierwsza partycja na maszynach NewWorld
(Apple_partition_map) nie może być w żaden sposób usunięta. Jeśli zamiarem jest
całkowite pozbycie się danych z dysku, należy użyć opcji <c>i</c>. Uwaga! Tej
opcji należy używać rozważnie!
</p>

<p>
Następnie (na komputerze NewWorld) założymy partycję <e>Apple_bootstrap</e> za
pomocą <c>b</c>. Zostaniemy zapytani o początkowy blok. Jeśli poprzednio
wybraliśmy na ten cel trzecią partycję, wpiszemy <c>3p</c>.
</p>

<note>
To <e>nie</e> jest partycja "boot". Nie jest nawet używana przez Linuksa; nie
potrzeba na niej miejsca do założenia systemu plików, nie powinno jej nawet
montować. Użytkownicy Apple nie potrzebują osobnej partycji rozruchowej.
</note>

<p>
Teraz stworzymy partycję wymiany za pomocą <c>c</c>. Program <c>mac-fdisk</c>
ponownie zapyta o blok początkowy. Jako, że wcześniej skorzystaliśmy z <c>2</c>,
teraz wpiszemy <c>3p</c>. Gdy zostaniemy zapytani o rozmiar wpisujemy
<c>512M</c> (lub inny na jaki się zdecydowaliśmy - 512MB to zalecane minimum).
Następnie na pytanie o nazwę wpisujemy <c>swap</c> (koniecznie).
</p>

<p>
Żeby założyć partycję root, wpiszemy <c>c</c>, następnie <c>5p</c>, aby wybrać
blok od którego ma się zaczynać. Na pytanie o rozmiar ponownie wpiszemy
<c>5p</c>, <c>mac-fdisk</c> przydzieli jej całą pozostałą wolną przestrzeń
Należy koniecznie nadać jej nazwę <c>root</c> (obowiązkowo).
</p>

<p>
Na zakończenie zachowujemy zmiany i opuszczamy <c>mac-fdisk</c> poleceniami
<c>w</c> oraz <c>q</c>.
</p>

<note>
Aby się upewnić, że wszystko zostało poprawnie wykonane, należy uruchomić
<c>mac-fdisk</c> jeszcze raz i sprawdzić czy są tam wszystkie nowo utworzone
partycje. Jeśli nie widać żadnych partycji, lub też nie ma zmian, które przed
chwilą wprowadziliśmy, należy ponownie wprowadzić zmiany, przy pomocy klawisza
<c>i</c>. Należy zwrócić uwagę, że polecenie to usuwa wszystkie obecne partycje
i zastępuje je tymi odtworzonymi.
</note>

<p>
Następnie przechodzimy do paragrafu <uri link="#filesystems">Zakładanie
systemów plików</uri>.
</p>

</body>
</section>
<section id="parted">
<title>Alternatywnie: Podział dysku przy pomocy parted (Pegasos i RS/6000)</title>
<body>

<p>
Program <c>parted</c>, czyli Partition Editor, jest w stanie obsłużyć partycje
HFS+ używane przez Mac OS i Mac OS X. Dzięki niemu można zmienić rozmiar
obecnych partycji, aby zrobić miejsce na partycje dla Linuksa. W przykładzie
poniżej opiszemy jednak partycjonowanie dysku jedynie dla maszyn Pegasos.
</p>

<p>
Zacznijmy od uruchomienia programu <c>parted</c>:
</p>

<pre caption="Uruchamianie parted">
# <i>parted /dev/hda</i>
</pre>

<p>
Jeśli dysk nie jest jeszcze podzielony na partycje, uruchamiamy <c>mklabel
amiga</c>, aby utworzyć nową etykietę dla tego napędu.
</p>

<p>
Zawsze można wpisać polecenie <c>print</c>, aby wyświetlić aktualną tabelę
partycji. Zmiany jakie wprowadzimy nie zostaną zapisane aż do czasu wyjścia z
aplikacji. Przez cały czas można anulować omyłkowo wprowadzone zmiany przy
pomocy kombinacji klawiszy <c>Ctrl-C</c>, która przerwie działanie programu.
</p>

<p>
Jeśli zamierzamy na swojej maszynie zainstalować również MorphOS musimy
utworzyć system plików affs1, na początku urządzenia. 32MB powinny wystarczyć do
przechowania jądra MorphOS. Jeśli używamy Pegasos I lub planujemy użyć innego
systemu plików poza ext2 lub ext3, będzie również konieczne przechować jądro
linuksa na tej partycji (Pegasos II ma możliwość uruchomienia z partycji ext2,
ext3 i affs1). Aby stworzyć partycję należy uruchomić <c>mkpart primary affs1
START END</c> gdzie <c>START</c> i <c>END</c> są odpowiednio zamienione na
wartości w megabajtach. (np. <c>0 32</c>) które utworzy partycję o rozmiarze
32MB, zaczynającą się w 0MB i kończącą w 32MB). Jeśli wybraliśmy ext2 lub ext3
jako system plików, wystarczy zamienić affs1 w poleceniu mkpart.
</p>

<p>
Musimy utworzyć dwie partycje dla Linuksa, jedną root, która będzie zawierała
programy itp. i drugą, która będzie partycją wymiany (swap). Wpisujemy
polecenie <c>mkpart primary ext3 START END</c> aby utworzyć partycję ext3.
Również tutaj zamieniamy <c>START</c> i <c>END</c> obszarem w MB, na którym
chcemy utworzyć partycję.
</p>

<p>
Partycja swap powinna w większości przypadków mieć rozmiar równy ilości pamięci
RAM w komputerze pomnożonej przez dwa. Jeśli nie będziemy uruchamiać
jednocześnie ogromnej ilości programów, powinna wystarczyć ilość swap równa
ilości RAM (jednak nie mniejsza niż zalecane 512MB). Aby stworzyć partycję
wymiany wpiszemy polecenie <c>mkpart primary linux-swap START END</c>.
</p>

<p>
Kiedy skończymy pracę w parted wyłączamy go wpisując po prostu <c>quit</c>.
</p>

</body>
</section>
<section id="filesystems">
<title>Tworzenie systemów plików</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po utworzeniu partycji nadszedł czas na założenie na nich systemów plików. Jeśli
jest to obojętne jakie zostaną wybrane lub odpowiadają nam domyślne ustawienia
w podręczniku, przejdźmy do paragrafu <uri link="#filesystems-apply">Zakładania
systemów plików na partycjach</uri>. W przeciwnym wypadku polecamy dalszą
lekturę aby dowiedzieć się więcej na ich temat.
</p>

</body>
</subsection>
<subsection>
<title>Systemy plików?</title>
<body>

<p>
Mamy do dyspozycji następujące systemy plików: ext2, ext3, ReiserFS i XFS.
Wszystkie mają swoje wady i zalety.
</p>

<p>
<b>Ext2</b> to sprawdzony i popularny linuksowy system plików, którego główną
wadą jest to, że nie posiada księgowania. Powoduje to, iż jego regularne
kontrole przy starcie systemu bywają długotrwałe. Obecnie istnieją nowoczesne
systemy plików z księgowaniem, które można szybko sprawdzić i to właśnie te
polecamy naszym użytkownikom.
</p>

<p>
<b>Ext3</b> to odpowiednik ext2 posiadający księgowanie w trybach full oraz
ordered, dzięki czemu w razie awarii dane odzyskiwane są błyskawicznie. ext3
używa indeksu drzewa HTree, który zapewnia wysoką wydajność w prawie wszystkich
zastosowaniach. Jest on bardzo dobrym i niezawodnym rozwiązaniem i jest wysoce
polecany dla większości instalacji.
</p>

<p>
<b>ReiserFS</b> to system plików oparty na drzewie B+, oferujący dużą
wydajność.  Przy wielu małych plikach (poniżej 4k) może być szybszy od ext3
nawet piętnastokrotnie. ReiserFS jest wysoce skalowalny i posiada księgowanie,
Charakteryzuje go niezawodność i użyteczność zarówno na partycjach ogólnego
przeznaczenia jak i w ekstremalnych przypadkach, takich jak ogromne partycje,
operacje na wielu bardzo małych, lub bardzo dużych plikach czy też operacje na
katalogach zawierających dziesiątki tysięcy plików.
</p>

<p>
<b>XFS</b> to system plików z księgowaniem, w pełni wspierany w Gentoo Linux
przez jądro xfs-sources. Jest bardzo funkcjonalny i zoptymalizowany do
skalowalności. Zalecamy go wyłącznie do systemów z nowoczesnymi dyskami SCSI
i/lub ciągłego zapisu danych z nieprzerwanym dostępem zasilania. Ponieważ
XFS przechowuje dużo danych w pamięci RAM, źle zaprojektowane programy
(te, które nie zachowują odpowiednich środków ostrożności podczas zapisywania
plików na dysk, których niestety jest sporo) mogą doprowadzić w razie awarii
systemu do utraty danych.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja partycji wymiany</title>
<body>

<p>
<c>mkswap</c> jest poleceniem używanym do inicjacji partycji wymiany
</p>

<pre caption="Tworzenie sygnatury swap">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Aby aktywować partycję wymiany, należy użyć polecenia <c>swapon</c>:
</p>

<pre caption="Aktywacja partycji wymiany">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Partycję wymiany należy stworzyć i aktywować zanim stworzymy kolejne systemy
plików.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Zakładanie systemów plików na partycjach</title>
<body>

<p>
Aby założyć na woluminie lub partycji system plików należy skorzystać z
odpowiednich narzędzi:
</p>

<table>
<tr>
<th>System plików</th>
<th>Program do zakładania</th>
</tr>
<tr>
<ti>ext2</ti>
<ti><c>mke2fs</c></ti>
</tr>
<tr>
<ti>ext3</ti>
<ti><c>mke2fs -j</c></ti>
</tr>
<tr>
<ti>reiserfs</ti>
<ti><c>mkreiserfs</c></ti>
</tr>
<tr>
<ti>xfs</ti>
<ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Na przykład, aby założyć ext3 na głównej partycji (w naszym przypadku
<path>/dev/hda4</path>), należy wykonać następujące polecenia:
</p>

<pre caption="Zakładanie systemu plików na partycji">
# <i>mke2fs -j /dev/hda4</i>
</pre>

<p>
Teraz założymy systemy plików na partycjach, które wcześniej utworzyliśmy.
</p>

<note>
Na maszynach Pegasos II kernel musi znajdować się na systemach plików ext2,
ext3 lub affs1. Maszyny NewWorld można uruchomić z  ext2, ext3, ReiserFS, a
nawet z HFS/HFS+.
</note>

</body>
</subsection>
</section>
<section>
<title>Montowanie</title>
<body>

<p>
Po założeniu partycji i utworzeniu systemów plików nadszedł czas na ich
zamontowanie. Służy do tego program <c>mount</c>.
</p>

<pre caption="Montowanie partycji">
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Jeżeli chcemy przenieść <path>/tmp</path> na oddzielną partycję,
nie można zapomnieć po zamontowaniu odpowiednio poprawić praw dostępu: <c>chmod
1777 /mnt/gentoo/tmp</c>. Dotyczy to również <path>/var/tmp</path>.
</note>

<p>
Następnie przechodzimy do rozdziału <uri link="?part=1&amp;chap=5">Wypakowywanie
plików instalacyjnych</uri>.
</p>

</body>
</section>
</sections>
