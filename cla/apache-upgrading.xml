<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/apache-upgrading.xml,v 1.7 2007/03/24 11:21:36 nightmorph Exp $ -->

<guide link="/doc/pl/apache-upgrading.xml" lang="pl">

<title>Aktualizacja serwera Apache</title>

<author title="Autor">
  <mail link="vericgar@gentoo.org">Michael Stewart</mail>
</author>
<author title="Tłumacz">
  <mail link="lucass@gentoo.org">Łukasz Strzygowski</mail>
</author>

<abstract>
Dokument opisuje proces bezpiecznej aktualizacji Apache.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2.5</version>
<date>2007-07-30</date>

<chapter>
<title>Wstęp</title>
<section>
<body>

<p>
Stan pakietów z Apache i jego modułami zaczął się pogarszać. Liczne problemy
utrudniały pracę grupy opiekującej się Apache oraz pomoc użytkownikom:
</p>

<ul>
  <li>
    Konfiguracja dostarczana z Gentoo znacznie różniła się od domyślnej, jakiej
    oczekiwała większość użytkowników
  </li>
  <li>
    Wiele modułów używało podobnego kodu, ale robiło wszystko na swój sposób
  </li>
  <li>
    Większość modułów nie była dobrze zarządzana - przede wszystkim z powodu ich
    dużej ilości
  </li>
  <li>Moduły nie posiadały standardowej konfiguracji</li>
  <li>
    Niektóre moduły współpracowały z obiema wersjami Apache, ale ebuildy tego
    nie obsługiwały
  </li>
  <li>
    Niektóre funkcje Apache nie były dostępne dla użytkowników Gentoo (na
    przykład MPM)
  </li>
  <li>Błędy związane z Apache nawarstwiały się</li>
</ul>

<p>
Jak to rozwiązano? Do grupy Apache dołączyło kilku nowych członków, którzy
wspólnie stworzyli nową eclassę, zaktualizowali wszystkie moduły oraz rozwiązali
wiele bugów.
</p>

<p>
Dokument ten szczegółowo opisuje bezpieczny dla systemu proces aktualizacji
apache. Deweloperzy oraz zainteresowani zmianami użytkownicy, którzy chcieliby
sie dowiedzieć jak zmodyfikować ebuildy, żeby korzystały z nowej eclassy mogą
znaleźć więcej informacji w <uri link="/doc/en/apache-developer.xml">Apache
Developer Reference</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade">
<title>Opis aktualizacji</title>
<section>
<body>

<p>
Wprowadziliśmy wiele zmian w działaniu Apache pod Gentoo. Każdy pakiet,
który jest z nim bezpośrednio związany, musi zostać zaktualizowany.
Nie wszystko będzie działać tak jak wcześniej.
</p>

<p>
Po pierwsze, musimy dowiedzieć się, które pakiety należy zaktualizować.
Możemy skorzystać w tym celu z programu <c>equery</c>, należącego do
pakietu <c>app-portage/gentoolkit</c>.
</p>


<pre caption="Wyszukiwanie pakietów do aktualizacji">
$ <i>equery depends www-servers/apache</i>
[ Searching for packages depending on www-servers/apache... ]
dev-db/phpmyadmin-2.5.6
dev-php/mod_php-4.3.10
dev-php/phpsysinfo-2.1-r2
net-www/mod_bandwidth-2.0.5
net-www/mod_layout-4.0.1a
net-www/mod_mp3-0.40
net-www/mod_random-2.0
net-www/mod_throttle-3.1.2-r1
net-www/mod_ldap_userdir-1.1.4
www-apache/mod_loopback-1.04
www-apache/mod_watch-3.18
www-apps/viewcvs-0.9.2_p20030430
</pre>

<impo>
Lista pakietów, które mamy zainstalowane w systemie, może się znacznie różnić od
powyższej. Musimy wykonać podane polecenie samodzielnie.
</impo>

<warn>
W Portage wciąż są moduły i pakiety zależne od Apache, które nie zostały jeszcze
zaktualizowane. Warto poszukać bugów dotyczących wszystkich krytycznych pakietów
związanych z Apache jakich używamy w <uri
link="http://bugs.gentoo.org">Bugzilli</uri>.
</warn>


<p>
Wprowadzone zmiany nie dotyczą wielu aplikacji internetowych, w większości
korzystających z eclassy <c>webapp</c>, która kontroluje ich poprawną
instalację. Można sprawdzić czy zostały zaktualizowane w nowej wersji pakietu.
</p>

<p>
Ponieważ dodaliśmy kilka nowych flag USE, warto je przejrzeć i dodać odpowiednie
wpisy do <path>/etc/portage/package.use</path>.  Więcej informacji znajduje się
w rozdziale <uri link="#use">Flagi USE dotyczące Apache</uri>.
</p>


<pre caption="Aktualizacja pakietów z nowymi flagami USE">
<comment>(Aby wyświetlić nowe flagi USE i niezbędne aktualizacje)</comment>
# <i>emerge --pretend --verbose --update --newuse --deep apache subversion \
mod_php mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 \
mod_random mod_throttle mod_watch</i>

<comment>(Aby zaktualizować pakiety)</comment>
# <i>emerge --verbose --update --newuse --deep apache subversion mod_php \
mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 mod_random \
mod_throttle mod_watch</i>

<comment>(Aktualizacja samego world może okazać się łatwiejsza)</comment>
# <i>emerge --ask --verbose --update --newuse --deep world</i>
</pre>

<p>
Teraz musimy ponownie skonfigurować Apache oraz jego moduły. Zaczniemy od
aktualizacji plików w <path>/etc/init.d</path> oraz <path>/etc/conf.d</path> za
pomocą narzędzi <c>etc-update</c> lub <c>dispatch-conf</c>.  Nie wyświetlą one
plików konfiguracyjnych apache, ponieważ wszystkie zostały przeniesione do
innych lokalizacji.
</p>

<p>
Jeśli wprowadziliśmy zmiany do domyślnych plików <path>apache.conf</path> oraz
<path>commonapache.conf</path>, będziemy musieli je przepisać w
<path>/etc/apache{|2}/httpd.conf</path>. Zmieniły się ścieżki do plików
konfiguracyjnych modułów oraz vhostów. Obecnie znajdują się odpowiednio w
katalogach <path>/etc/apache2/modules.d</path> oraz
<path>/etc/apache2/vhosts.d</path>.
</p>

<p>
Kiedy skończymy przepisywać nasze zmiany do nowych plików konfiguracyjnych,
musimy usunąć poprzednie (lub gdzieś je przenieść). Poprawiony
<path>/etc/init.d/apache{|2}</path> nie pozwala uruchomić apache jeśli wciąż
istnieją, zakładając, że ponownie skonfigurowaliśmy apache korzystając z nowych
plików.
</p>

<note>
Wiele modułów, które wcześniej były aktywowane domyślnie, teraz jest
wyłączonych. Jeśli potrzebujemy tych wbudowanych w apache, wystarczy
odkomentować odpowiednie linie w httpd.conf. Jeśli chcemy skorzystać z modułów
zewnętrznych, musimy odszukać w ich konfiguracji <c>IfDefine</c> i dodać ich
nazwy do <path>/etc/conf.d/apache{|2}</path>.
</note>

<p>
Następnie ponownie uruchamiamy apache.
</p>

<pre caption="Ponowne uruchamianie apache">
# <i>/etc/init.d/apache stop</i>
# <i>/etc/init.d/apache start</i>
</pre>


<p>
Jeśli natrafimy na jakieś problemy, powinniśmy przeczytać <uri
link="/doc/pl/apache-troubleshooting.xml">Apache Troubleshooting Guide</uri>.
Jeżeli nie znajdziemy tam rozwiązania, należy je zgłosić w  <uri
link="http://bugs.gentoo.org">bugzilli</uri>. W raporcie błędu trzeba wymienić
używane moduły oraz (jeżeli korzystamy z Apache 2) flagi USE dotyczące MPM z
jakich korzystamy. Pomoc można uzyskać także na kanale
<path>#gentoo-apache</path> w sieci <path>irc.freenode.net</path>.
</p>

</body>
</section>
</chapter>

<chapter id="use">
<title>Flagi USE dotyczące Apache</title>
<section>
<body>

<p>
Apache i jego moduły korzystają z pewnych specyficznych flag USE. Oczywiście
obsługują także bardziej standardowe flagi, jednak nie opisujemy ich zachowania,
ponieważ nie różni się znacznie od tego w innych pakietach. Wszystkie
obsługiwane flagi można wyświetlić poleceniem <c>emerge --verbose --pretend
apache</c>.
</p>

<table>
<tr>
  <th>Flaga USE</th>
  <th>Pakiety</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>apache2</ti>
  <ti>eclassa depend.apache (wszystkie moduły)</ti>
  <ti>
    Powinna być włączona jeśli chcemy korzystać z Apache 2.0 lub wyłączona
    jeżeli wolimy Apache 1.3. Eclassa używa jej do ustalenia wersji jaką dodać
    do zależności.</ti>
</tr>
<tr>
  <ti>mpm-leader</ti>
  <ti>apache-2*</ti>
  <ti>
    Buduje MPM <uri
    link="http://httpd.apache.org/docs/2.0/mod/leader.html">leader</uri>
  </ti>
</tr>
<tr>
  <ti>mpm-metux</ti>
  <ti>apache-2*</ti>
  <ti>Buduje MPM <uri link="http://www.metux.de/mpm/">metux</uri></ti>
</tr>
<tr>
  <ti>mpm-peruser</ti>
  <ti>apache-2*</ti>
  <ti>
    Buduje MPM <uri link="http://www.telana.com/peruser.php">peruser</uri>
  </ti>
</tr>
<tr>
  <ti>mpm-prefork</ti>
  <ti>apache-2*</ti>
  <ti>
    Buduje MPM <uri
    link="http://httpd.apache.org/docs/2.0/mod/prefork.html">prefork</uri></ti>
</tr>
<tr>
  <ti>mpm-threadpool</ti>
  <ti>apache-2*</ti>
  <ti>
    Buduje MPM <uri
    link="http://httpd.apache.org/docs/2.0/mod/threadpool.html">threadpool</uri>
  </ti>
</tr>
<tr>
  <ti>mpm-worker</ti>
  <ti>apache-2*</ti>
  <ti>
    Buduje MPM <uri
    link="http://httpd.apache.org/docs/2.0/mod/worker.html">worker</uri></ti>
</tr>
<tr>
  <ti>no-suexec</ti>
  <ti>apache</ti>
  <ti>
    Wyłącza budowanie modułu suexec (dla tych, którzy nie chcą potencjalnie
    niebezpiecznej binarki z bitem suid)
  </ti>
</tr>
<tr>
  <ti>static-modules</ti>
  <ti>apache</ti>
  <ti>
    Włącza statyczne linkowanie modułów z apache, przez co korzystanie z
    LoadModule do ładowania podstawowych modułów nie jest konieczne.
  </ti>
</tr>
<tr>
  <ti>lingerd</ti>
  <ti>apache-1*</ti>
  <ti>
    Włącza obsługę <uri
    link="http://www.iagora.com/about/software/lingerd/">lingerd</uri>
  </ti>
</tr>
<tr>
  <ti>no-htdocs</ti>
  <ti>gentoo-webroot-default</ti>
  <ti>
    Wyłącza instalowanie domyślnego webroot do <path>/var/www/localhost</path>,
    przez co zmodyfikowane pliki nie są nadpisywane. Zamiast tego, webroot jest
    instalowany w <path>/usr/share/doc/gentoo-webroot-default-*/webroot/</path>.
  </ti>
</tr>
</table>

<note>
Flagi USE mpm-* wzajemnie się wykluczają. Powinniśmy włączyć tylko jedną z nich.
(Jeśli nie aktywujemy żadnej, użyta zostanie mpm-prefork lub mpm-worker, w
zależności od tego czy włączona jest flaga threads).
</note>

</body>
</section>
</chapter>

</guide>
